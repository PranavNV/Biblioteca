[
    {
        "text": "Conceptive C Harry McGeough.",
        "frame": []
    },
    {
        "text": "Version 1.",
        "frame": []
    },
    {
        "text": "0 Published by Harry McGeough at Smashwords.",
        "frame": []
    },
    {
        "text": "ISBN-13: 978-1465934888 ISBN-10: 1465934888.",
        "frame": []
    },
    {
        "text": "Copyright 2011 Harry McGeough.",
        "frame": []
    },
    {
        "text": "About Cover Image A billowing tower of gas and dust rises from the stellar nursery known as the Eagle Nebula.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "tower.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "dust.v",
                "Frame": "Placing"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "This small piece of the Eagle Nebula is 57 trillion miles long (91.",
        "frame": [
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "mile.n",
                "Frame": "Measure_linear_extent"
            },
            {
                "LU": "long.v",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "7 trillion km).",
        "frame": []
    },
    {
        "text": "Credit: NASA, ESA, and The Hubble Heritage Team (STScI/AURA).",
        "frame": []
    },
    {
        "text": "Conceptive C by Harry McGeough is licensed under a Creative Commons Attribution 3.",
        "frame": [
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "0 Unported License.",
        "frame": []
    },
    {
        "text": "Based on a work at www.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "com.",
        "frame": []
    },
    {
        "text": "Permissions beyond the scope of this license may be available at http://www.",
        "frame": [
            {
                "LU": "license.n",
                "Frame": "Documents"
            },
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "com.",
        "frame": []
    },
    {
        "text": "Contents Preface Natural Language Basic English Word Definition Machine Learning Compiler Changes Know Thyself AI History Deduction, Reasoning, Problem Solving Knowledge Representation Commonsense Knowledge Learning Natural Language Processing Creativity General Intelligence Evaluating progress Philosophy C Language Characteristics Early Developments K&R C ANSI C and ISO C C99 Embedded C Uses Syntax Keywords Operators \"Hello, world\" Example Data Types Pointers Arrays Array-pointer Interchangeability Memory Management Libraries Objective C History Popularization through NeXT Syntax Messages Interfaces and Implementations Implementation Instantiation Protocols Dynamic Typing Forwarding Categories #import Objective-C 2.",
        "frame": [
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "progress.n",
                "Frame": "Progression"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "import.n",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "0 Garbage Collection Properties Non-fragile Instance Variables Fast Enumeration Library Use Analysis of the Language Lisp Connection to Artificial Intelligence Symbolic expressions Lists Operators Lambda Expressions Atoms Conses and Lists S-expressions Represent Lists List-Processing Procedures Shared Structure Self-evaluating Forms and Quoting List Structure of Program Code Evaluation and the ReadEvalPrint Loop Object Systems Conceptive C Syntax Messages Interfaces and Implementations Interface Instantiation Dynamic Typing Changes from Objective-C Machine Intelligence New Ideas Idea Innate and Adventitious Ideas Plato Ren Descartes John Locke David Hume Immanuel Kant Rudolf Steiner Wilhelm Wundt Charles Sanders Peirce G.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Stout and J.",
        "frame": []
    },
    {
        "text": "Baldwin Anthropology and the Social Sciences Dr.",
        "frame": []
    },
    {
        "text": "Samuel Johnson Validity of Ideas Concept What is a Concept.",
        "frame": []
    },
    {
        "text": "Origin and Acquisition of Concepts Pure Concepts Conceptual Structure One Possible Structure The Dual Nature of Concepts Conceptual Content Concepts and Metaphilosophy Concepts in Epistemology Ontology of Concepts Conceptual Empirical Investigations Memory Processes Sensory Memory Short-Term Memory Long-Term Memory Working Memory Levels of Processing Information Type Temporal Direction Physiology Mind Concept of Mind Etymology Mental Faculties Mental Content Cognitive Science Philosophy of Mind Mind / Body Perspectives Psychology Evolutionary Psychology Evolution of the Human Mind Animal intelligence Artificial intelligence Meme Origins Transmission Memes as Discrete Units Evolutions Influences on Memes Cell Anatomy Prokaryotic Cells Eukaryotic Cells Genetic Material Origin of the First Cell Computer Cell Soul Etymology Semantics Philosophical views Aristotle Avicenna and Ibn Al-Nafis Thomas Aquinas Immanuel Kant James Hillman Philosophy of Mind Buddhism Judaism Christianity Roman Catholic Beliefs Hinduism Islam Taoism Zoroastrianism Spirituality and New Age Science Understanding Is Understanding Definable.",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "working.a",
                "Frame": "Being_operational"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "Understanding Basic English Rules of word use Operations - 100 words 400 General Words Things - 200 Picture-able Words Qualities - 100 Descriptive words Qualities - 50 opposites Consciousness Etymology and Early History In Philosophy Is Consciousness a Valid Concept.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "opposite.a",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Is It a Single Thing.",
        "frame": []
    },
    {
        "text": "How does it relate to the Physical World.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "world.n",
                "Frame": "Political_locales"
            }
        ]
    },
    {
        "text": "Why do people believe that other people are Conscious.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Are non-human animals are Conscious.",
        "frame": [
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Could a Machine ever be Conscious.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            }
        ]
    },
    {
        "text": "Spiritual Approaches Scientific Approaches Biological Function and Evolution States of Consciousness Phenomenology Assessment The Stream of Consciousness Thought Experiment The Chinese Room Chinese Room Thought Experiment History Computationalism Strong AI Strong AI as Functionalism Computers vs.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "Machines vs.",
        "frame": []
    },
    {
        "text": "Brains Intentionality vs.",
        "frame": []
    },
    {
        "text": "Consciousness Strong AI vs.",
        "frame": [
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "AI research System Reply Virtual Mind Reply Finding the Meaning Robot Reply Derived Meaning Commonsense Knowledge Brain Simulator Reply Formal Arguments Mind Uploading Simple Artificial Neural Network Immortality/Backup Speedup Multiple / Parallel Existence Computational Capacity Simulation Model Scale Scanning and Mapping Scale of an Individual Serial Sectioning of a Brain Brain Imaging Neuroinformatics Legal, Political and Economical Issues Copying vs.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            }
        ]
    },
    {
        "text": "Moving Bekenstein Bound Bots Chatter Bot ELIZA IRC Bot Avatar Norman Spinrad William Gibson Neal Stephenson Artificial Intelligence Video Games AIML Categories Patterns Template AIML 1.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "0 Tag Set.",
        "frame": []
    },
    {
        "text": "Preface While writing this book I started quoting from Wikipedia.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Then including sections, then whole parts of Wiki.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "section.n",
                "Frame": "Separating"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "I would highly recommend using http://www.",
        "frame": [
            {
                "LU": "recommend.v",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "com In fact there is quite a bit from Wiki in the book now.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "I do plan to edit some of it out.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "plan.v",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "This did start out as a simple question and answer Bot and grew.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "I now have an Apple 4S with Siri.",
        "frame": [
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "So I have been exploring Wolfram Alphas website.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "explore.v",
                "Frame": "Scrutiny"
            }
        ]
    },
    {
        "text": "Im still trying to understand how I think to develop the language.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Its a hunch, I have that it should be possible to write a program that understands things, if the right tools are available.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "right.n",
                "Frame": "Correctness"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "I am hoping some of the stuff from Wiki will lead to improvements in Conceptive C Language.",
        "frame": [
            {
                "LU": "hop.v",
                "Frame": "Board_vehicle"
            },
            {
                "LU": "stuff.v",
                "Frame": "Placing"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Im still not sure just yet whether Conceptual-C is in fact a conceptual Language.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It is possible that in designing it, I may find that Objective-C already does what Im trying to do.",
        "frame": [
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "design.v",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Im still not at the stage of knowing what needs to go into the compiler yet.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "What a month this has been first Steve Jobs (February 24, 1955 October 5, 2011) of Apple died.",
        "frame": [
            {
                "LU": "month.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "My first computer was an Apple II, then I had a PC, then a Macintosh, a NEXT Station and my current computer, which Im very happy with is an iMac.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "happy.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "I saw Steve live at some of the Apple WWDC (developer conferences) and visited the Apple campus.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "conference.n",
                "Frame": "Discussion"
            },
            {
                "LU": "visit.v",
                "Frame": "Visiting"
            }
        ]
    },
    {
        "text": "I want to get an iPad and yes, I use an iPhone too.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Sad to that John McCarthy (September 4, 1927 October 23, 2011) died just this week.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "He coined the term \"artificial intelligence\" (AI), invented the Lisp programming language and was highly influential in the early development of AI.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "invent.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "These things always seem to happen in threes now Ive hear that Denis Ritchie (September 9, 1941 - October 12, 2011) is dead.",
        "frame": [
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "happen.v",
                "Frame": "Event"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "hear.v",
                "Frame": "Perception_experience"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "September.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "He created C programming Language.",
        "frame": [
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "He was the R in K&R book The C Programming Language.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Ive included Lisp and AI in this book, because I feel it will help in implementing Conceptive-C.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "I have also included a sections on Memes, Mind Uploading, Neural Nets, The Chinese Room, and Bots, as interesting possible AI future ideas.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "section.n",
                "Frame": "Separating"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "interesting.a",
                "Frame": "Mental_stimulus_stimulus_focus"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "They may get cut in the next version.",
        "frame": [
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "cut.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Articles used from Wikipedia AI  http://en.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Artificial_intelligence C Language  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/C_(programming_language) Objective-C  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Objective-C Lisp Language  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Lisp_(programming_language) Idea  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Idea Concept  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Concept Memory\thttp://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Memory Mind  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Mind Meme  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Meme Cell  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Cell Soul  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Soul Understanding  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Understanding Consciousness  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Consciousness Basic English  http://en.",
        "frame": [
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Basic_english Word List  http://en.",
        "frame": []
    },
    {
        "text": "wiktionary.",
        "frame": []
    },
    {
        "text": "org/wiki/Appendix:Basic_English_word_list Chinese Room  http://en.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Chinese_room Mind Uploading  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Mind_uploading Internet Bots  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/Internet_bot AIML  http://en.",
        "frame": []
    },
    {
        "text": "wikipedia.",
        "frame": []
    },
    {
        "text": "org/wiki/AIML.",
        "frame": []
    },
    {
        "text": "Natural Language Conceptive C uses concepts to program natural language and Artifical Intelligence based computer language based on Objective C.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "One of the first computer programs that I saw was in an Advert for the Apple II.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Someone was typing in questions and the computer was answering them.",
        "frame": [
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "answer.v",
                "Frame": "Communication_response"
            }
        ]
    },
    {
        "text": "Having a conversation with the computer seemed like an easy thing to do, only its not.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "easy.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Computers still have problems understanding English or Natural language.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "I got hooked on programming computers.",
        "frame": [
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "First in Basic, then 6502 Assembler, then Forth and C language.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "I have always wanted to write a computer program that I could have a conversation with, I have thought about it over the years and I think I am a lot nearer to having a computer program that can understand English.",
        "frame": [
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "lot.n",
                "Frame": "Destiny"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "In a sort of you cant get there from here, I figured out that I needed to make a language that would allow me to program AI ideas and concepts.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "I have done a bit of object programming using Objective C.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "I liked the way that Objective C added just enough to C to allow for programming of Objects.",
        "frame": [
            {
                "LU": "like.v",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "add.v",
                "Frame": "Statement"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "I wanted to do the same thing using Objective C to program ideas and concepts.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Primarily I was thinking of using Conceptive C to program AI or Natural Language problems.",
        "frame": [
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "The first program would be able to understand Basic English.",
        "frame": [
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "Basic English Basic English (British American Scientific International Commercial) is a constructed (made-up) language to explain complex thoughts with 850 basic English words chosen by Charles Kay Ogden.",
        "frame": [
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "American.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "choose.v",
                "Frame": "Choosing"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "So I am looking to have a program that understands 850 Basic English words.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "What is an idea.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "What s a concept.",
        "frame": []
    },
    {
        "text": "How do we understand something.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "How do people think about things.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "If you take English you can break it down into words and sentences.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "break.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "Sentences are built using words.",
        "frame": [
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "Words can be nouns, pronouns, verbs, adjectives or adverbs.",
        "frame": []
    },
    {
        "text": "Can we represent knowledge using words in a way that a computer can use to understand the meaning of words being expressed.",
        "frame": [
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "express.v",
                "Frame": "Encoding"
            }
        ]
    },
    {
        "text": "A baby starts with very few words that have limited meaning.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Most parents are happy enough once the baby can say one word Mommy or Daddy and it attach to mean that person.",
        "frame": [
            {
                "LU": "parent.n",
                "Frame": "Kinship"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "happy.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "attach.v",
                "Frame": "Becoming_attached"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "If that is all the language that we learned it would be al that useful.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            }
        ]
    },
    {
        "text": "Small children learn new words all the time and by the time they are say five years old they may already know 1,000 to 1,500 words and speak in sentences.",
        "frame": [
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "A definition of a word will use other words, which will each have definitions.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "If we lookup word Idea, we get: Definition of Idea: noun, a concept or mental impression.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "So if we now lookup Concept, we get: Definition of Concept: noun, an abstract idea.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Definition of Abstract: adjective, existing in thought or as an idea but not having a physical or concrete existence.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            }
        ]
    },
    {
        "text": "Definition of Noun: a word (other than a pronoun) used to identify any of a class of people, places, or things ( common noun ), or to name a particular one of these ( proper noun ).",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "name.v",
                "Frame": "Kinship"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "proper.a",
                "Frame": "Proper_reference"
            }
        ]
    },
    {
        "text": "Definition of Adjective: a word or phrase naming an attribute, added to or grammatically related to a noun to modify or describe it.",
        "frame": [
            {
                "LU": "add.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The point I am making is the Idea definition uses concept to describe itself and the definition of Concept uses idea to describe itself.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Im using the Apple dictionary for the definitions.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "Idea actually had 3 definitions: 1.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "a thought or suggestion as to a possible course of action.",
        "frame": [
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "course.n",
                "Frame": "Roadways"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "(the idea) the aim or purpose.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "aim.n",
                "Frame": "Aiming"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            }
        ]
    },
    {
        "text": "Philosophy (in Platonic thought) an eternally existing pattern of which individual things in any class are imperfect copies.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "copy.n",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": "Word Definition How do we get a definition that a computer can use to understand what a word means.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "It seems like a problem if all words are defined with other words, that may not get us any meaning but lead us into circles of frustration.",
        "frame": [
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "lead.a",
                "Frame": "First_rank"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "circle.n",
                "Frame": "Shapes"
            }
        ]
    },
    {
        "text": "Its more akin to how do we think or how do we understand the mean of a word.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Lets take a simpler word like Cat.",
        "frame": []
    },
    {
        "text": "Definition of Cat: noun 1.",
        "frame": []
    },
    {
        "text": "a small domesticated carnivorous mammal with soft fur, a short snout, and retractile claws.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "It is widely kept as a pet or for catching mice, and many breeds have been developed.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            }
        ]
    },
    {
        "text": "2 informal (particularly among jazz enthusiasts) a person, esp.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "a man.",
        "frame": [
            {
                "LU": "man.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Here are two different meanings a small furry anima, most people would mean this.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "If you said I have a cat I would know what you mean and maybe even picture a cat in my minds eye.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "cat.n",
                "Frame": "Animals"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "Lets look at Mind: Definition of Mind: noun 1 the element of a person that enables them to be aware of the world and their experiences, to think, and to feel; the faculty of consciousness and thought: as the thoughts ran through his mind, he came to a conclusion | people have the price they are prepared to pay settled in their minds.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "enable.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "through.prep",
                "Frame": "Used_up"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "conclusion.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "price.n",
                "Frame": "Commerce_scenario"
            },
            {
                "LU": "prepared.a",
                "Frame": "Activity_ready_state"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "pay.v",
                "Frame": "Commerce_pay"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "a person's mental processes contrasted with physical action: I wrote a letter in my mind.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "2 a person's intellect: his keen mind.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "a person's memory: the company's name slips my mind.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "a person identified with their intellectual faculties: he was one of the greatest minds of his time.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "3 a person's attention: I expect my employees to keep their minds on the job.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "the will or determination to achieve something: anyone can lose weight if they set their mind to it.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "achieve.v",
                "Frame": "Accomplishment"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "lose.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "weight.n",
                "Frame": "Dimension"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "verb [ with obj.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "] 1 [ often with negative ] be distressed, annoyed, or worried by: I don't mind the rain.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "negative.a",
                "Frame": "Attitude_description"
            },
            {
                "LU": "worry.v",
                "Frame": "Emotion_active"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "rain.n",
                "Frame": "Mass_motion"
            }
        ]
    },
    {
        "text": "have an objection to: what does that mean, if you don't mind my asking.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "ask.v",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "| [ with clause ] : do you mind if I have a cigarette.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "clause.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "[ with negative or in questions ] (mind doing something) be reluctant to do something (often used in polite requests): I don't mind admitting I was worried.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "negative.a",
                "Frame": "Attitude_description"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "request.n",
                "Frame": "Request"
            },
            {
                "LU": "admit.v",
                "Frame": "Reveal_secret"
            },
            {
                "LU": "worry.v",
                "Frame": "Emotion_active"
            }
        ]
    },
    {
        "text": "(would not mind something) informal used to express one's strong enthusiasm for something: I wouldn't mind some coaching from him.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "2 regard as important; feel concern about: never mind the opinion polls | [ no obj.",
        "frame": [
            {
                "LU": "regard.n",
                "Frame": "Regard"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "] : why should she mind about a few snubs from people she didn't care for.",
        "frame": [
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "[ with clause in imperative ] dated used to urge someone to remember or take care to bring about something: mind you look after the children.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "clause.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "urge.v",
                "Frame": "Request"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "[ no obj.",
        "frame": []
    },
    {
        "text": "] (also mind you) used to introduce a qualification to a previous statement: we've got some decorations upnot a lot, mind you.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "lot.n",
                "Frame": "Destiny"
            }
        ]
    },
    {
        "text": "[ no obj.",
        "frame": []
    },
    {
        "text": "] informal used to make a command more insistent or to draw attention to a statement: be early to bed tonight, mind.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "draw.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "bed.v",
                "Frame": "Sex"
            }
        ]
    },
    {
        "text": "be obedient to: you think about how much Cal does for you, and you mind her, you hear.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "hear.v",
                "Frame": "Perception_experience"
            }
        ]
    },
    {
        "text": "Scottish: I mind the time when he lost his false teeth.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "3 take care of temporarily: we left our husbands to mind the children while we went out.",
        "frame": [
            {
                "LU": "take.n",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "leave.v",
                "Frame": "Abandonment"
            },
            {
                "LU": "husband.n",
                "Frame": "Personal_relationship"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            }
        ]
    },
    {
        "text": "[ in imperative ] used to warn someone to avoid injury or damage from a hazard: mind your head on that cupboard.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "avoid.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "injury.n",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "hazard.v",
                "Frame": "Statement"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "[ in imperative ] be careful about the quality or nature of: mind your manners.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "4 [ with infinitive ] (be minded) chiefly formal be inclined or disposed to do a particular thing: he was minded to reject the application | the Board was given leave to object if it was so minded.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "reject.v",
                "Frame": "Respond_to_proposal"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            },
            {
                "LU": "board.n",
                "Frame": "Temporary_stay"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "so.adv",
                "Frame": "Sufficiency"
            }
        ]
    },
    {
        "text": "Mind can be a noun or a verb.",
        "frame": []
    },
    {
        "text": "Thats quite a complex definition.",
        "frame": [
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "If I read it as a person I have a context and understanding of many word already in place.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "So it might mean something to me.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "might.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "mean.v",
                "Frame": "Stinginess"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A computer would need a file of the text, which it would scan into memory.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "It could quite easily parse the text into words.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "Even group the words into sentences.",
        "frame": [
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "But know what a word means or understand what a sentence is about and we start getting into some complex programming.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "A problem is we have a mind, we understand thing, know what words mean, but how do we describe these things in ways that they can be replicated by a computer.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": "What we do have is computers can store something in a variable or represent things symbolically.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "represent.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "But I can look at my pet cat and know its a cat, a small black cat or little Lion.",
        "frame": [
            {
                "LU": "cat.n",
                "Frame": "Animals"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "cat.n",
                "Frame": "Animals"
            },
            {
                "LU": "black.a",
                "Frame": "Level_of_light"
            },
            {
                "LU": "cat.n",
                "Frame": "Animals"
            },
            {
                "LU": "little.a",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Visual recognition for computers will come at some time, in fact Im sure there are some very good programs that can do that now.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "will.v",
                "Frame": "Giving"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "For the moment I am sticking to words, so what I want is something like in a question and answer situation, if I ask a computer: Q: What is a Cat.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "stick.v",
                "Frame": "Shapes"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "A: A small domesticated carnivorous mammal with soft fur, a short snout, and retractile claws.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "If I get that, thats fine.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "To do that the computer does not need to be conscious or have a real understanding of what a cat is or even have seen a real cat.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "cat.n",
                "Frame": "Animals"
            },
            {
                "LU": "cat.n",
                "Frame": "Animals"
            }
        ]
    },
    {
        "text": "If I can get it to do those things too, that would be a bonus.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "So why am I calling this language Conceptive C.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "Well I am trying to program using concepts to allow a computer to get some understanding or meaning about what it is talking about and be able to create new sentences that make sense.",
        "frame": [
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "So the computer can have a conversation.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            }
        ]
    },
    {
        "text": "The main building block of Conceptive C, is a concept or an abstract idea.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Going back to the Apple Dictionary: concept |knsept| noun an abstract idea; a general notion: structuralism is a difficult concept | the concept of justice.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "a plan or intention; a conception: the center has kept firmly to its original concept.",
        "frame": [
            {
                "LU": "plan.n",
                "Frame": "Project"
            },
            {
                "LU": "intention.n",
                "Frame": "Purpose"
            },
            {
                "LU": "center.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "an idea or invention to help sell or publicize a commodity: a new concept in corporate hospitality.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "hospitality.n",
                "Frame": "Hospitality"
            }
        ]
    },
    {
        "text": "Philosophy an idea or mental picture of a group or class of objects formed by combining all their aspects.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "picture.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "combine.v",
                "Frame": "Amalgamation"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "How do we implement that in code.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Is it a new kind of object.",
        "frame": [
            {
                "LU": "new.a",
                "Frame": "Age"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "In Object Oriented Programming by Brad J.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Cox, one of the inventors of Objective-C, he describes the counterparts of objective programming in conventional operator programming as: object\t\ta block of data object id\tpointer to block of data method\tapply function to data.",
        "frame": [
            {
                "LU": "describe.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "What I need from Conceptual programming is the ability to learn or re-define itself.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            }
        ]
    },
    {
        "text": "A concept is not fixed it can change and be updated, by new data and facts that dont fit the original model that we had when we started programming the problem.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "fit.v",
                "Frame": "Capacity"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Machine Learning I am talking about machine learning.",
        "frame": [
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "This is more akin to an interpreter, rather than a compiler.",
        "frame": []
    },
    {
        "text": "Lets look at these definitions: compile |kmpl| verb [ with obj.",
        "frame": [
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "] 1.",
        "frame": []
    },
    {
        "text": "produce (something, esp.",
        "frame": [
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "a list, report, or book) by assembling information collected from other sources: the local authority must compile a list of taxpayers.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "book.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "authority.n",
                "Frame": "Leadership"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "collect (information) in order to produce something: the figures were compiled from a survey of 2,000 schoolchildren.",
        "frame": [
            {
                "LU": "collect.v",
                "Frame": "Commerce_collect"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "figure.v",
                "Frame": "Opinion"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "survey.n",
                "Frame": "Scrutiny"
            }
        ]
    },
    {
        "text": "accumulate (a specified score): the 49ers have compiled a league-leading 142 record.",
        "frame": [
            {
                "LU": "record.n",
                "Frame": "Recording"
            }
        ]
    },
    {
        "text": "Computing (of a computer) convert (a program) into a machine-code or lower-level form in which the program can be executed.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "interpreter |intrpritr| noun a person who interprets, esp.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "one who translates speech orally.",
        "frame": []
    },
    {
        "text": "Computing a program that can analyze and execute a program line by line.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Compiler Changes In computing terms we have compilers and interpreters: Compiler: A computer program that can convert a program into a machine-code or lower-level form in which the program can be executed.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Interpreter: A program that can analyze and execute a program line by line.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "We have the concepts of run-time and compile-time.",
        "frame": []
    },
    {
        "text": "What happens when we run a program and what happens when we compile it.",
        "frame": [
            {
                "LU": "happen.v",
                "Frame": "Event"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "happen.v",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "When we compile it , usually we get an executable file that we can run.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "file.v",
                "Frame": "Grooming"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "When we run it we get something that we have programmed executing on the computer.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "An Interpreter takes our program and goes straight to the run stage, a line at a time.",
        "frame": [
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "straight.a",
                "Frame": "Candidness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "How is this different with a compiled program that can do machine learning.",
        "frame": [
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "can.v",
                "Frame": "Measure_volume"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Well we compile and run our program as normal, but while the program is running if it decides that something meets certain parameters, the program will compile new code into its executable, to allow it to do a new function.",
        "frame": [
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "decide.v",
                "Frame": "Deciding"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "new.a",
                "Frame": "Age"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "This could result in the executable file or a new data file being added to the programs executable file.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Know Thyself If we where really clever, we could write a program that knows nothing, but can learn everything.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "learn.v",
                "Frame": "Becoming_aware"
            }
        ]
    },
    {
        "text": "I dont think Im that clever.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "I do think one of the core concepts that we will need is the ability to know when we dont know something.",
        "frame": [
            {
                "LU": "core.n",
                "Frame": "Emptying"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "We do need the ability to realize that something is new and can be added to our program.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "realize.v",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Or for instance we currently have no apples.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "For instance: Q: How many Apples do you have.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            }
        ]
    },
    {
        "text": "A: I have no Apples.",
        "frame": []
    },
    {
        "text": "Q: I have given you an Apple how many Apples do you have now.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Q: I have one Apple.",
        "frame": []
    },
    {
        "text": "This is like an empty object that would still have knowledge about what kind of object it might be, but a value of zero.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "zero.num",
                "Frame": "Cardinal_numbers"
            }
        ]
    },
    {
        "text": "Or maybe we owe someone 5 Apples, so we would know what an Apple is, know that we have no Apples and know that we need 5 Apples to repay a debt.",
        "frame": [
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "AI Artificial intelligence (AI) is the intelligence of machines and the branch of computer science that aims to create it.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "AI textbooks define the field as \"the study and design of intelligent agents\" where an intelligent agent is a system that perceives its environment and takes actions that maximize its chances of success.",
        "frame": [
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "John McCarthy, who coined the term in 1956, defines it as \"the science and engineering of making intelligent machines.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "The field was founded on the claim that a central property of humans, intelligencethe sapience of Homo sapienscan be so precisely described that it can be simulated by a machine.",
        "frame": [
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "claim.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "This raises philosophical issues about the nature of the mind and the ethics of creating artificial beings, issues which have been addressed by myth, fiction and philosophy since antiquity.",
        "frame": [
            {
                "LU": "raise.v",
                "Frame": "Building"
            },
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Artificial intelligence has been the subject of optimism, but has also suffered setbacks and, today, has become an essential part of the technology industry, providing the heavy lifting for many of the most difficult problems in computer science.",
        "frame": [
            {
                "LU": "suffer.v",
                "Frame": "Catastrophe"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "industry.n",
                "Frame": "Fields"
            },
            {
                "LU": "heavy.a",
                "Frame": "Measurable_attributes"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "AI research is highly technical and specialized, deeply divided into subfields that often fail in the task of communicating with each other.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "technical.a",
                "Frame": "Fields"
            },
            {
                "LU": "divide.v",
                "Frame": "Separating"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "communicate.v",
                "Frame": "Communication"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "Subfields have grown up around particular institutions, the work of individual researchers, the solution of specific problems, longstanding differences of opinion about how AI should be done and the application of widely differing tools.",
        "frame": [
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "application.n",
                "Frame": "Using"
            },
            {
                "LU": "differ.v",
                "Frame": "Similarity"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "The central problems of AI include such traits as reasoning, knowledge, planning, learning, communication, perception and the ability to move and manipulate objects.",
        "frame": [
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "manipulate.v",
                "Frame": "Manipulate_into_doing"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "General intelligence (or \"strong AI\") is still among the field's long term goals.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "among.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            }
        ]
    },
    {
        "text": "History Thinking machines and artificial beings appear in Greek myths, such as Talos of Crete, the bronze robot of Hephaestus, and Pygmalion's Galatea.",
        "frame": [
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "bronze.n",
                "Frame": "Physical_artworks"
            }
        ]
    },
    {
        "text": "Human likenesses believed to have intelligence were built in every major civilization: animated cult images were worshipped in Egypt and Greece and humanoid automatons were built by Yan Shi, Hero of Alexandria and Al-Jazari.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "It was also widely believed that artificial beings had been created by Jbir ibn Hayyn, Judah Loew and Paracelsus.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "By the 19th and 20th centuries, artificial beings had become a common feature in fiction, as in Mary Shelley's Frankenstein or Karel apek's R.",
        "frame": [
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "(Rossum's Universal Robots).",
        "frame": []
    },
    {
        "text": "Pamela McCorduck argues that all of these are examples of an ancient urge, as she describes it, \"to forge the gods\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "urge.n",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "describe.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Stories of these creatures and their fates discuss many of the same hopes, fears and ethical concerns that are presented by artificial intelligence.",
        "frame": [
            {
                "LU": "fate.n",
                "Frame": "Destiny"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "fear.n",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "concern.n",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Mechanical or \"formal\" reasoning has been developed by philosophers and mathematicians since antiquity.",
        "frame": [
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "The study of logic led directly to the invention of the programmable digital electronic computer, based on the work of mathematician Alan Turing and others.",
        "frame": [
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "lead.v",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Turing's theory of computation suggested that a machine, by shuffling symbols as simple as \"0\" and \"1\", could simulate any conceivable act of mathematical deduction.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "This, along with concurrent discoveries in neurology, information theory and cybernetics, inspired a small group of researchers to begin to seriously consider the possibility of building an electronic brain.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "concurrent.a",
                "Frame": "Simultaneity"
            },
            {
                "LU": "discovery.n",
                "Frame": "Achieving_first"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "inspire.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "seriously.adv",
                "Frame": "Importance"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "The field of AI research was founded at a conference on the campus of Dartmouth College in the summer of 1956.",
        "frame": [
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "college.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "summer.n",
                "Frame": "Calendric_unit"
            }
        ]
    },
    {
        "text": "The attendees, including John McCarthy, Marvin Minsky, Allen Newell and Herbert Simon, became the leaders of AI research for many decades.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "They and their students wrote programs that were, to most people, simply astonishing: Computers were solving word problems in algebra, proving logical theorems and speaking English.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "prove.v",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "By the middle of the 1960s, research in the U.",
        "frame": [
            {
                "LU": "middle.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "was heavily funded by the Department of Defense and laboratories had been established around the world.",
        "frame": [
            {
                "LU": "heavily.adv",
                "Frame": "Degree"
            },
            {
                "LU": "fund.v",
                "Frame": "Funding"
            },
            {
                "LU": "defense.n",
                "Frame": "Defending"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "establish.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "AI's founders were profoundly optimistic about the future of the new field: Herbert Simon predicted that \"machines will be capable, within twenty years, of doing any work a man can do\" and Marvin Minsky agreed, writing that \"within a generation.",
        "frame": [
            {
                "LU": "optimistic.a",
                "Frame": "Attitude_description"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "twenty.num",
                "Frame": "Being_located"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "the problem of creating 'artificial intelligence' will substantially be solved\".",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "They had failed to recognize the difficulty of some of the problems they faced.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "fail.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "recognize.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "face.v",
                "Frame": "Confronting_problem"
            }
        ]
    },
    {
        "text": "In 1974, in response to the criticism of Sir James Lighthill and ongoing pressure from the US Congress to fund more productive projects, both the U.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "ongoing.a",
                "Frame": "Process_continue"
            },
            {
                "LU": "pressure.n",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fund.v",
                "Frame": "Funding"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "and British governments cut off all undirected exploratory research in AI.",
        "frame": [
            {
                "LU": "cut.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "off.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The next few years, when funding for projects was hard to find, would later be called the \"AI winter\".",
        "frame": [
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "hard.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "winter.n",
                "Frame": "Calendric_unit"
            }
        ]
    },
    {
        "text": "In the early 1980s, AI research was revived by the commercial success of expert systems, a form of AI program that simulated the knowledge and analytical skills of one or more human experts.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "success.n",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "expert.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "By 1985 the market for AI had reached over a billion dollars.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "reach.v",
                "Frame": "Path_shape"
            }
        ]
    },
    {
        "text": "At the same time, Japan's fifth generation computer project inspired the U.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "fifth.a",
                "Frame": "Part_whole"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "S and British governments to restore funding for academic research in the field.",
        "frame": [
            {
                "LU": "government.n",
                "Frame": "Organization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "restore.v",
                "Frame": "Rejuvenation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            }
        ]
    },
    {
        "text": "However, beginning with the collapse of the Lisp Machine market in 1987, AI once again fell into disrepute, and a second, longer lasting AI winter began.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "collapse.v",
                "Frame": "Endeavor_failure"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "fell.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "winter.n",
                "Frame": "Calendric_unit"
            }
        ]
    },
    {
        "text": "In the 1990s and early 21st century, AI achieved its greatest successes, albeit somewhat behind the scenes.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "achieve.v",
                "Frame": "Accomplishment"
            },
            {
                "LU": "behind.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "scene.n",
                "Frame": "Locale_by_event"
            }
        ]
    },
    {
        "text": "Artificial intelligence is used for logistics, data mining, medical diagnosis and many other areas throughout the technology industry.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "throughout.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "industry.n",
                "Frame": "Fields"
            }
        ]
    },
    {
        "text": "The success was due to several factors: the increasing computational power of computers (see Moore's law), a greater emphasis on solving specific subproblems, the creation of new ties between AI and other fields working on similar problems, and a new commitment by researchers to solid mathematical methods and rigorous scientific standards.",
        "frame": [
            {
                "LU": "success.n",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "emphasis.n",
                "Frame": "Emphasizing"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "solid.n",
                "Frame": "Substance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "On 11 May 1997, Deep Blue became the first computer chess-playing system to beat a reigning world chess champion, Garry Kasparov.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In 2005, a Stanford robot won the DARPA Grand Challenge by driving autonomously for 131 miles along an unrehearsed desert trail.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "win.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "drive.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "desert.n",
                "Frame": "Quitting_a_place"
            }
        ]
    },
    {
        "text": "Two years later, a team from CMU won the DARPA Urban Challenge by autonomously navigating 55 miles in an Urban environment while adhering to traffic hazards and all traffic laws.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "team.n",
                "Frame": "Team"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "win.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "adhere.v",
                "Frame": "Attaching"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "hazard.v",
                "Frame": "Statement"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "In February 2011, in a Jeopardy.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "February.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "quiz show exhibition match, IBM's question answering system, Watson, defeated the two greatest Jeopardy.",
        "frame": [
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "match.n",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "champions, Brad Rutter and Ken Jennings, by a significant margin.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "The leading-edge definition of artificial intelligence research is changing over time.",
        "frame": [
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "over.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "One pragmatic definition is: \"AI research is that which computing scientists do not know how to do cost-effectively today.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "For example, in 1956 optical character recognition (OCR) was considered AI, but today, sophisticated OCR software with a context-sensitive spell checker and grammar checker software comes for free with most image scanners.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "No one would any longer consider already-solved computing science problems like OCR \"artificial intelligence\" today.",
        "frame": [
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Low-cost entertaining chess-playing software is commonly available for tablet computers.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "DARPA no longer provides significant funding for chess-playing computing system development.",
        "frame": [
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "The Kinect which provides a 3D bodymotion interface for the Xbox 360 uses algorithms that emerged from lengthy AI research, but few consumers realize the technology source.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "realize.v",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "AI applications are no longer the exclusive domain of Department of defense R&D, but are now common place consumer items and inexpensive intelligent toys.",
        "frame": [
            {
                "LU": "domain.n",
                "Frame": "Biological_classification"
            },
            {
                "LU": "defense.n",
                "Frame": "Defending"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "In common usage, the term \"AI\" no longer seems to apply to off-the-shelf solved computing-science problems, which may have originally emerged out of years of AI research.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "Deduction, Reasoning, Problem Solving \"Can a machine act intelligently.",
        "frame": [
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "is still an open problem.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "open.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Taking \"A machine can act intelligently\" as a working hypothesis, many researchers have attempted to build such a machine.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "The general problem of simulating (or creating) intelligence has been broken down into a number of specific sub-problems.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            }
        ]
    },
    {
        "text": "These consist of particular traits or capabilities that researchers would like an intelligent system to display.",
        "frame": [
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The traits described below have received the most attention.",
        "frame": [
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            }
        ]
    },
    {
        "text": "Early AI researchers developed algorithms that imitated the step-by-step reasoning that humans use when they solve puzzles or make logical deductions.",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "make.v",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "By the late 1980s and '90s, AI research had also developed highly successful methods for dealing with uncertain or incomplete information, employing concepts from probability and economics.",
        "frame": [
            {
                "LU": "late.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "successful.a",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "uncertain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "For difficult problems, most of these algorithms can require enormous computational resources  most experience a \"combinatorial explosion\": the amount of memory or computer time required becomes astronomical when the problem goes beyond a certain size.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "explosion.n",
                "Frame": "Explosion"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            }
        ]
    },
    {
        "text": "The search for more efficient problem solving algorithms is a high priority for AI research.",
        "frame": [
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "priority.n",
                "Frame": "Importance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "Human beings solve most of their problems using fast, intuitive judgments rather than the conscious, step-by-step deduction that early AI research was able to model.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "judgment.n",
                "Frame": "Legal_rulings"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "AI has made some progress at imitating this kind of \"sub-symbolic\" problem solving: embodied agent approaches emphasize the importance of sensorimotor skills to higher reasoning; neural net research attempts to simulate the structures inside human and animal brains that give rise to this skill.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "progress.n",
                "Frame": "Progression"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "emphasize.v",
                "Frame": "Convey_importance"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "net.v",
                "Frame": "Earnings_and_losses"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "inside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Knowledge Representation An ontology represents knowledge as a set of concepts within a domain and the relationships between those concepts.",
        "frame": [
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "domain.n",
                "Frame": "Biological_classification"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Main articles: Knowledge representation and Commonsense knowledge Knowledge representation and knowledge engineering are central to AI research.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "Many of the problems machines are expected to solve will require extensive knowledge about the world.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Among the things that AI needs to represent are: objects, properties, categories and relations between objects; situations, events, states and time; causes and effects; knowledge about knowledge (what we know about what other people know); and many other, less well researched domains.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "domain.n",
                "Frame": "Biological_classification"
            }
        ]
    },
    {
        "text": "A representation of \"what exists\" is an ontology (borrowing a word from traditional philosophy), of which the most general are called upper ontologies.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "Among the most difficult problems in knowledge representation are: Commonsense Knowledge Many of the things people know take the form of \"working assumptions.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "many.n",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            }
        ]
    },
    {
        "text": "For example, if a bird comes up in conversation, people typically picture an animal that is fist sized, sings, and flies.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "None of these things are true about all birds.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "John McCarthy identified this problem in 1969 as the qualification problem: for any commonsense rule that AI researchers care to represent, there tend to be a huge number of exceptions.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "Almost nothing is simply true or false in the way that abstract logic requires.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            }
        ]
    },
    {
        "text": "AI research has explored a number of solutions to this problem.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "The number of atomic facts that the average person knows is astronomical.",
        "frame": [
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Research projects that attempt to build a complete knowledge base of commonsense knowledge (e.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "complete.a",
                "Frame": "Completeness"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": ", Cyc) require enormous amounts of laborious ontological engineering  they must be built, by hand, one complicated concept at a time.",
        "frame": [
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "A major goal is to have the computer understand enough concepts to be able to learn by reading from sources like the internet, and thus be able to add to its own ontology.",
        "frame": [
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "goal.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "read.v",
                "Frame": "Reading_activity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "Much of what people know is not represented as \"facts\" or \"statements\" that they could express verbally.",
        "frame": [
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            }
        ]
    },
    {
        "text": "For example, a chess master will avoid a particular chess position because it \"feels too exposed\" or an art critic can take one look at a statue and instantly realize that it is a fake.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "master.n",
                "Frame": "Subordinates_and_superiors"
            },
            {
                "LU": "avoid.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "critic.n",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "look.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "realize.v",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "fake.n",
                "Frame": "Feigning"
            }
        ]
    },
    {
        "text": "These are intuitions or tendencies that are represented in the brain non-consciously and sub-symbolically.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Knowledge like this informs, supports and provides a context for symbolic, conscious knowledge.",
        "frame": [
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "As with the related problem of sub-symbolic reasoning, it is hoped that situated AI or computational intelligence will provide ways to represent this kind of knowledge.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "hop.v",
                "Frame": "Board_vehicle"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Learning Machine learning has been central to AI research from the beginning.",
        "frame": [
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "In 1956, at the original Dartmouth AI summer conference, Ray Solomonoff wrote a report on unsupervised probabilistic machine learning: \"An Inductive Inference Machine\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "summer.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Unsupervised learning is the ability to find patterns in a stream of input.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "stream.n",
                "Frame": "Natural_features"
            }
        ]
    },
    {
        "text": "Supervised learning includes both classification and numerical regression.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "Classification is used to determine what category something belongs in, after seeing a number of examples of things from several categories.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "Regression takes a set of numerical input/output examples and attempts to discover a continuous function that would generate the outputs from the inputs.",
        "frame": [
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "In reinforcement learning the agent is rewarded for good responses and punished for bad ones.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "punish.v",
                "Frame": "Rewards_and_punishments"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "These can be analyzed in terms of decision theory, using concepts like utility.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "decision.n",
                "Frame": "Deciding"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "utility.n",
                "Frame": "Usefulness"
            }
        ]
    },
    {
        "text": "The mathematical analysis of machine learning algorithms and their performance is a branch of theoretical computer science known as computational learning theory.",
        "frame": [
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Natural Language Processing A parse tree represents the syntactic structure of a sentence according to some formal grammar.",
        "frame": [
            {
                "LU": "represent.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Natural language processing gives machines the ability to read and understand the languages that humans speak.",
        "frame": [
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "speak.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Many researchers hope that a sufficiently powerful natural language processing system would be able to acquire knowledge on its own, by reading the existing text available over the internet.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "powerful.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "acquire.v",
                "Frame": "Getting"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "read.v",
                "Frame": "Reading_activity"
            }
        ]
    },
    {
        "text": "Some straightforward applications of natural language processing include information retrieval (or text mining) and machine translation.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Creativity A sub-field of AI addresses creativity both theoretically (from a philosophical and psychological perspective) and practically (via specific implementations of systems that generate outputs that can be considered creative, or systems that identify and assess creativity).",
        "frame": [
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            }
        ]
    },
    {
        "text": "A related area of computational research is Artificial intuition and Artificial imagination.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "General Intelligence Most researchers hope that their work will eventually be incorporated into a machine with general intelligence (known as strong AI), combining all the skills above and exceeding human abilities at most or all of them.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "eventually.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "incorporate.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "strong.a",
                "Frame": "Judgment_of_intensity"
            },
            {
                "LU": "combine.v",
                "Frame": "Amalgamation"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "A few believe that anthropomorphic features like artificial consciousness or an artificial brain may be required for such a project.",
        "frame": [
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Many of the problems above are considered AI-complete: to solve one problem, you must solve them all.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "For example, even a straightforward, specific task like machine translation requires that the machine follow the author's argument (reason), know what is being talked about (knowledge), and faithfully reproduce the author's intention (social intelligence).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "reproduce.v",
                "Frame": "Duplication"
            },
            {
                "LU": "intention.n",
                "Frame": "Purpose"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            }
        ]
    },
    {
        "text": "Machine translation, therefore, is believed to be AI-complete: it may require strong AI to be done as well as humans can do it.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Evaluating progress In 1950, Alan Turing proposed a general procedure to test the intelligence of an agent now known as the Turing test.",
        "frame": [
            {
                "LU": "progress.n",
                "Frame": "Progression"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "procedure.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "This procedure allows almost all the major problems of artificial intelligence to be tested.",
        "frame": [
            {
                "LU": "procedure.n",
                "Frame": "Means"
            },
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "However, it is a very difficult challenge and at present all agents fail.",
        "frame": [
            {
                "LU": "challenge.n",
                "Frame": "Competition"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            }
        ]
    },
    {
        "text": "Artificial intelligence can also be evaluated on specific problems such as small problems in chemistry, hand-writing recognition and game-playing.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Such tests have been termed subject matter expert Turing tests.",
        "frame": [
            {
                "LU": "test.n",
                "Frame": "Examination"
            },
            {
                "LU": "expert.n",
                "Frame": "Expertise"
            },
            {
                "LU": "test.n",
                "Frame": "Examination"
            }
        ]
    },
    {
        "text": "Smaller problems provide more achievable goals and there are an ever-increasing number of positive results.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "The broad classes of outcome for an AI test are: (1) Optimal: it is not possible to perform better.",
        "frame": [
            {
                "LU": "broad.a",
                "Frame": "Dimension"
            },
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "(2) Strong super-human: performs better than all humans.",
        "frame": [
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "(3) Super-human: performs better than most humans.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "(4) Sub-human: performs worse than most humans.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "For example, performance at draughts is optimal, performance at chess is super-human and nearing strong super-human (see Computer chess#Computers versus humans) and performance at many everyday tasks (such as recognizing a face or crossing a room without bumping into something) is sub-human.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "recognize.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "face.n",
                "Frame": "Facial_expression"
            },
            {
                "LU": "cross.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "bump.v",
                "Frame": "Impact"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "Philosophy Artificial intelligence, by claiming to be able to recreate the capabilities of the human mind, is both a challenge and an inspiration for philosophy.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "claim.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "challenge.n",
                "Frame": "Competition"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Are there limits to how intelligent machines can be.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Is there an essential difference between human intelligence and artificial intelligence.",
        "frame": [
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Can a machine have a mind and consciousness.",
        "frame": []
    },
    {
        "text": "The philosophy of artificial intelligence attempts to answer such questions as: Can a machine act intelligently.",
        "frame": [
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "answer.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "can.v",
                "Frame": "Measure_volume"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Can it solve any problem that a person would solve by thinking.",
        "frame": [
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Can a machine have a mind, mental states and consciousness in the same sense humans do.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Are human intelligence and machine intelligence the same.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Is the human brain essentially a computer.",
        "frame": []
    },
    {
        "text": "C Language C (pronounced like the letter C) is a general-purpose computer programming language developed between 1969 and 1973 by Dennis Ritchie at the Bell Telephone Laboratories for use with the Unix operating system.",
        "frame": [
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "bell.n",
                "Frame": "Noise_makers"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "operate.v",
                "Frame": "Being_in_operation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Although C was designed for implementing system software, it is also widely used for developing portable application software.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "C is one of the most widely used programming languages of all time and there are very few computer architectures for which a C compiler does not exist.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "C has greatly influenced many other popular programming languages, most notably C++, which began as an extension to C.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Design C is an imperative (procedural) systems implementation language.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "It was designed to be compiled using a relatively straightforward compiler, to provide low-level access to memory, to provide language constructs that map efficiently to machine instructions, and to require minimal run-time support.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            }
        ]
    },
    {
        "text": "C was therefore useful for many applications that had formerly been coded in assembly language.",
        "frame": [
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "formerly.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "assembly.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Despite its low-level capabilities, the language was designed to encourage cross-platform programming.",
        "frame": [
            {
                "LU": "despite.prep",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "A standards-compliant and portably written C program can be compiled for a very wide variety of computer platforms and operating systems with few changes to its source code.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "operate.v",
                "Frame": "Being_in_operation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "The language has become available on a very wide range of platforms, from embedded microcontrollers to supercomputers.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Characteristics Like most imperative languages in the ALGOL tradition, C has facilities for structured programming and allows lexical variable scope and recursion, while a static type system prevents many unintended operations.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "facility.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "In C, all executable code is contained within subroutines, which are called \"functions\" (although not in the strict sense of functional programming).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "strict.a",
                "Frame": "Strictness"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "Function parameters are always passed by value.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Pass-by-reference is simulated in C by explicitly passing pointer values.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "pass.v",
                "Frame": "Process_end"
            }
        ]
    },
    {
        "text": "C program source text is free-format, using the semicolon as a statement terminator and curly braces for delimiting block.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "C also exhibits the following more specific characteristics: A small and fixed number of keywords, including a full set of flow of control primitives: for, if, while, switch and repeat loop (implemented as do.",
        "frame": [
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "flow.v",
                "Frame": "Fluidic_motion"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "switch.v",
                "Frame": "Exchange"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "while).",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "There is basically one namespace, and user-defined names are not distinguished from keywords by any kind of sigil.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "A large number of compound arithmetical and logical operators, such as +=, -=, *=, ++, etc.",
        "frame": [
            {
                "LU": "large.a",
                "Frame": "Size"
            }
        ]
    },
    {
        "text": "More than one assignment may be performed in a statement.",
        "frame": [
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Function return values may be freely discarded.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Static, but weakly-enforced, typing; all data has a type, but implicit conversions can be performed, for instance, characters can be used as integers.",
        "frame": [
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "C has no \"define\" keyword; instead, a statement beginning with the name of a type is taken as a definition.",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "There is no \"function\" keyword; instead, the parentheses of an argument list indicate that a function is being defined.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "User-defined (typedef) and compound types are possible.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "Heterogeneous aggregate data types (struct) allow related data elements to be combined and manipulated as a unit.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Array indexing as a secondary notion, defined in terms of pointer arithmetic.",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Unlike structs, arrays are not first-class objects, and must be assigned and compared with library functions.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "There is no \"array\" keyword, in use or definition; instead, square brackets indicate arrays syntactically, e.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "square.n",
                "Frame": "Shapes"
            }
        ]
    },
    {
        "text": "myarr[].",
        "frame": []
    },
    {
        "text": "Enumerated types are possible with the enum keyword.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "They are not tagged, and are freely interconvertible with integers.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Strings are not a predefined data type, but usually implemented as arrays of characters, with the same need to use library functions.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The length of a C string is not fixed, nor part of its type.",
        "frame": [
            {
                "LU": "length.n",
                "Frame": "Dimension"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Variable-length C-style strings are null-terminated.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Low-level access to computer memory by converting machine addresses to typed pointers, on which arithmetic can be performed.",
        "frame": [
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "convert.v",
                "Frame": "Exchange_currency"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Procedures (subroutines not returning values) are a special case of function, returning the dummy type void.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Functions may not be defined within the lexical scope of other functions.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "(Although this may be provided as an language extension by some compilers.",
        "frame": [
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Function and data pointers supporting ad hoc run-time polymorphism A preprocessor for macro definition, source code file inclusion, and conditional compilation.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "C is modular: files containing functions can be compiled and linked separately.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Functions are exported by default from the files containing them, whereas variables are local to the file containing them unless explicitly imported.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "unless.scon",
                "Frame": "Negative_conditional"
            }
        ]
    },
    {
        "text": "Complex functionality such as I/O, string manipulation, and mathematical functions consistently delegated to library routines.",
        "frame": [
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The traditional C toolset consists of compilers, linkers, debuggers, etc invoked from the command line.",
        "frame": [
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Integrated development environments have also been introduced.",
        "frame": [
            {
                "LU": "development.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "C does not include some features found in newer, more modern high-level languages, including: Object orientation Garbage collection Type reflection Early Developments The initial development of C occurred at AT&T Bell Labs between 1969 and 1973; according to Ritchie, the most creative period occurred in 1972.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "bell.n",
                "Frame": "Noise_makers"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It was named \"C\" because its features were derived from an earlier language called \"B\", which according to Ken Thompson was a stripped-down version of the BCPL programming language.",
        "frame": [
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "earlier.a",
                "Frame": "Temporal_subregion"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The origin of C is closely tied to the development of the Unix operating system, originally implemented in assembly language on a PDP-7 by Ritchie and Thompson, incorporating several ideas from colleagues.",
        "frame": [
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "assembly.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Eventually they decided to port the operating system to a PDP-11.",
        "frame": [
            {
                "LU": "decide.v",
                "Frame": "Deciding"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "B's inability to take advantage of some of the PDP-11's features, notably byte addressability, led to the development of an early version of C.",
        "frame": [
            {
                "LU": "inability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "lead.v",
                "Frame": "First_rank"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "The original PDP-11 version of the Unix system was developed in assembly language.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "assembly.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "By 1973, with the addition of struct types, the C language had become powerful enough that most of the Unix kernel was rewritten in C.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This was one of the first operating system kernels implemented in a language other than assembly.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "assembly.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "(Earlier instances include the Multics system (written in PL/I), and MCP (Master Control Program) for the Burroughs B5000 written in ALGOL in 1961.",
        "frame": [
            {
                "LU": "earlier.a",
                "Frame": "Temporal_subregion"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "K&R C In 1978, Brian Kernighan and Dennis Ritchie published the first edition of The C Programming Language.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            }
        ]
    },
    {
        "text": "This book, known to C programmers as \"K&R\", served for many years as an informal specification of the language.",
        "frame": [
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "The version of C that it describes is commonly referred to as K&R C.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The second edition of the book covers the later ANSI C standard.",
        "frame": [
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "later.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "K&R introduced several language features: standard I/O library long int data type unsigned int data type compound assignment operators of the form =op (such as =-) were changed to the form op= to remove the semantic ambiguity created by such constructs as i=-10, which had been interpreted as i =- 10 instead of the possibly intended i = -10 Even after the publication of the 1989 C standard, for many years K&R C was still considered the \"lowest common denominator\" to which C programmers restricted themselves when maximum portability was desired, since many older compilers were still in use, and because carefully written K&R C code can be legal Standard C as well.",
        "frame": [
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "long.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remove.v",
                "Frame": "Undressing"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "possibly.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "publication.n",
                "Frame": "Publishing"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "maximum.a",
                "Frame": "Extreme_value"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "carefully.adv",
                "Frame": "Mental_property"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "In early versions of C, only functions that returned a non-int value needed to be declared if used before the function definition; a function used without any previous declaration was assumed to return type int, if its value was used.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "For example: long some_function(); /* int */ other_function(); /* int */ calling_function() { long test1; register /* int */ test2; test1 = some_function(); if (test1 > 0) test2 = 0; else test2 = other_function(); return test2; } All the above commented-out int declarations could be omitted in K&R C.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "register.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Since K&R function declarations did not include any information about function arguments, function parameter type checks were not performed, although some compilers would issue a warning message if a local function was called with the wrong number of arguments, or if multiple calls to an external function used different numbers or types of arguments.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "issue.v",
                "Frame": "Emanating"
            },
            {
                "LU": "warning.n",
                "Frame": "Warning"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "wrong.a",
                "Frame": "Morality_evaluation"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "Separate tools such as Unix's lint utility were developed that (among other things) could check for consistency of function use across multiple source files.",
        "frame": [
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "utility.n",
                "Frame": "Usefulness"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "In the years following the publication of K&R C, several unofficial features were added to the language, supported by compilers from AT&T and some other vendors.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "publication.n",
                "Frame": "Publishing"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "These included: void functions (i.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "functions with no return value) functions returning struct or union types (rather than pointers) assignment for struct data types enumerated types The large number of extensions and lack of agreement on a standard library, together with the language popularity and the fact that not even the Unix compilers precisely implemented the K&R specification, led to the necessity of standardization.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "union.n",
                "Frame": "Organization"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "lack.n",
                "Frame": "Possession"
            },
            {
                "LU": "agreement.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "lead.v",
                "Frame": "First_rank"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "ANSI C and ISO C During the late 1970s and 1980s, versions of C were implemented for a wide variety of mainframe computers, minicomputers, and microcomputers, including the IBM PC, as its popularity began to increase significantly.",
        "frame": [
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "late.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            }
        ]
    },
    {
        "text": "In 1983, the American National Standards Institute (ANSI) formed a committee, X3J11, to establish a standard specification of C.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "American.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "In 1989, the standard was ratified as ANSI X3.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "ratify.v",
                "Frame": "Ratification"
            }
        ]
    },
    {
        "text": "159-1989 \"Programming Language C\".",
        "frame": []
    },
    {
        "text": "This version of the language is often referred to as ANSI C, Standard C, or sometimes C89.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In 1990, the ANSI C standard (with formatting changes) was adopted by the International Organization for Standardization (ISO) as ISO/IEC 9899:1990, which is sometimes called C90.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Therefore, the terms \"C89\" and \"C90\" refer to the same programming language.",
        "frame": [
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "ANSI, like other national standards bodies, no longer develops the C standard independently, but defers to the ISO C standard.",
        "frame": [
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "National adoption of updates to the international standard typically occurs within a year of ISO publication.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "publication.n",
                "Frame": "Publishing"
            }
        ]
    },
    {
        "text": "One of the aims of the C standardization process was to produce a superset of K&R C, incorporating many of the unofficial features subsequently introduced.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "incorporate.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "subsequently.adv",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "The standards committee also included several additional features such as function prototypes (borrowed from C++), void pointers, support for international character sets and locales, and preprocessor enhancements.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "additional.a",
                "Frame": "Increment"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "prototype.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "set.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Although the syntax for parameter declarations was augmented to include the style used in C++, the K&R interface continued to be permitted, for compatibility with existing source code.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "C89 is supported by current C compilers, and most C code being written today is based on it.",
        "frame": [
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Any program written only in Standard C and without any hardware-dependent assumptions will run correctly on any platform with a conforming C implementation, within its resource limits.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "conform.v",
                "Frame": "Compliance"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Without such precautions, programs may compile only on a certain platform or with a particular compiler, due, for example, to the use of non-standard libraries, such as GUI libraries, or to a reliance on compiler- or platform-specific attributes such as the exact size of data types and byte endianness.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "reliance.n",
                "Frame": "Reliance"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "exact.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "In cases where code must be compilable by either standard-conforming or K&R C-based compilers, the __STDC__ macro can be used to split the code into Standard and K&R sections to prevent using on a K&R C-based compiler features available only in Standard C.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "section.n",
                "Frame": "Separating"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "C99 After the ANSI/ISO standardization process, the C language specification remained relatively static for some time.",
        "frame": [
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "In 1995 Normative Amendment 1 to the 1990 C standard was published, to correct some details and to add more extensive support for international character sets.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "detail.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "set.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "The C standard was further revised in the late 1990s, leading to the publication of ISO/IEC 9899:1999 in 1999, which is commonly referred to as \"C99\".",
        "frame": [
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "late.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "lead.v",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "publication.n",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "It has since been amended three times by Technical Corrigenda.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "technical.a",
                "Frame": "Fields"
            }
        ]
    },
    {
        "text": "The international C standard is maintained by the working group ISO/IEC JTC1/SC22/WG14.",
        "frame": [
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "C99 introduced several new features, including inline functions, several new data types (including long long int and a complex type to represent complex numbers), variable-length arrays, support for variadic macros (macros of variable arity) and support for one-line comments beginning with //, as in BCPL or C++.",
        "frame": [
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "long.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "long.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "comment.n",
                "Frame": "Statement"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Many of these had already been implemented as extensions in several C compilers.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "C99 is for the most part backward compatible with C90, but is stricter in some ways; in particular, a declaration that lacks a type specifier no longer has int implicitly assumed.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A standard macro __STDC_VERSION__ is defined with value 199901L to indicate that C99 support is available.",
        "frame": [
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "GCC, Sun Studio and other C compilers now support many or all of the new features of C99.",
        "frame": [
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Embedded C Historically, embedded C programming requires nonstandard extensions to the C language in order to support exotic features such as fixed-point arithmetic, multiple distinct memory banks, and basic I/O operations.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "In 2008, the C Standards Committee published a technical report extending the C language to address these issues by providing a common standard for all implementations to adhere to.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "technical.a",
                "Frame": "Fields"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "adhere.v",
                "Frame": "Attaching"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "It includes a number of features not available in normal C, such as, fixed-point arithmetic, named address spaces, and basic I/O hardware addressing.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Uses C is often used for \"system programming\", including implementing operating systems and embedded system applications, due to a combination of desirable characteristics such as code portability and efficiency, ability to access specific hardware addresses, ability to pun types to match externally imposed data access requirements, and low run-time demand on system resources.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "operate.v",
                "Frame": "Being_in_operation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "combination.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "desirable.a",
                "Frame": "Desirability"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "demand.n",
                "Frame": "Request"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "C can also be used for website programming using CGI as a \"gateway\" for information between the Web application, the server, and the browser.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Some reasons for choosing C over interpreted languages are its speed, stability, and near-universal availability.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "choose.v",
                "Frame": "Choosing"
            }
        ]
    },
    {
        "text": "One consequence of C's wide acceptance and efficiency is that compilers, libraries, and interpreters of other programming languages are often implemented in C.",
        "frame": [
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The primary implementations of Python (CPython), Perl 5, and PHP are all written in C.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Due to its thin layer of abstraction and low overhead, C allows efficient implementations of algorithms and data structures, which is useful for programs that perform a lot of computations.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "thin.a",
                "Frame": "Change_of_consistency"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "lot.n",
                "Frame": "Destiny"
            }
        ]
    },
    {
        "text": "For example, the GNU Multi-Precision Library, the GNU Scientific Library, Mathematica and MATLAB are completely or partially written in C.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "C is sometimes used as an intermediate language by implementations of other languages.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "This approach may be used for portability or convenience; by using C as an intermediate language, it is not necessary to develop machine-specific code generators.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Some languages and compilers which have used C this way are BitC, C++, COBOL, Eiffel, Gambit, GHC, Squeak, and Vala.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "However, C was designed as a programming language, not as a compiler target language, and is thus less than ideal for use as an intermediate language.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "ideal.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "This has led to development of C-based intermediate languages such as C--.",
        "frame": [
            {
                "LU": "lead.v",
                "Frame": "First_rank"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "C has also been widely used to implement end-user applications, but much of that development has shifted to newer languages.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Syntax C has a formal grammar specified by the C standard.",
        "frame": [
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "Unlike languages such as FORTRAN 77, C source code is free-form which allows arbitrary use of whitespace to format code, rather than column-based or text-line-based restrictions.",
        "frame": [
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Comments may appear either between the delimiters /* and */, or (in C99) following // until the end of the line.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "C source files contain declarations and function definitions.",
        "frame": [
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "Function definitions, in turn, contain declarations and statements.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "turn.n",
                "Frame": "Becoming"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Declarations either define new types using keywords such as struct, union, and enum, or assign types to and perhaps reserve storage for new variables, usually by writing the type followed by the variable name.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "union.n",
                "Frame": "Organization"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "Keywords such as char and int specify built-in types.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Sections of code are enclosed in braces ({ and }, sometimes called \"curly brackets\") to limit the scope of declarations and to act as a single statement for control structures.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "control.n",
                "Frame": "Firefighting"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "As an imperative language, C uses statements to specify actions.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "The most common statement is an expression statement, consisting of an expression to be evaluated, followed by a semicolon; as a side effect of the evaluation, functions may be called and variables may be assigned new values.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "side.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "To modify the normal sequential execution of statements, C provides several control-flow statements identified by reserved keywords.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Structured programming is supported by if(-else) conditional execution and by do-while, while, and for iterative execution (looping).",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The for statement has separate initialization, testing, and reinitialization expressions, any or all of which can be omitted.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "test.v",
                "Frame": "Examination"
            }
        ]
    },
    {
        "text": "break and continue can be used to leave the innermost enclosing loop statement or skip to its reinitialization.",
        "frame": [
            {
                "LU": "break.n",
                "Frame": "Opportunity"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "enclose.v",
                "Frame": "Placing"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "There is also a non-structured goto statement which branches directly to the designated label within the function.",
        "frame": [
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "designate.v",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "label.v",
                "Frame": "Labeling"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "switch selects a case to be executed based on the value of an integer expression.",
        "frame": [
            {
                "LU": "switch.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Expressions can use a variety of built-in operators (see below) and may contain function calls.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            }
        ]
    },
    {
        "text": "The order in which arguments to functions and operands to most operators are evaluated is unspecified.",
        "frame": [
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "The evaluations may even be interleaved.",
        "frame": [
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            },
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "However, all side effects (including storage to variables) will occur before the next \"sequence point\"; sequence points include the end of each expression statement, and the entry to and return from each function call.",
        "frame": [
            {
                "LU": "side.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "entry.n",
                "Frame": "Arriving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "Sequence points also occur during evaluation of expressions containing certain operators (&&, ||,.",
        "frame": [
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            }
        ]
    },
    {
        "text": ": and the comma operator).",
        "frame": []
    },
    {
        "text": "This permits a high degree of object code optimization by the compiler, but requires C programmers to take more care to obtain reliable results than is needed for other programming languages.",
        "frame": [
            {
                "LU": "permit.v",
                "Frame": "Documents"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "obtain.v",
                "Frame": "Getting"
            },
            {
                "LU": "reliable.a",
                "Frame": "Trust"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Keywords C89 has 32 keywords (reserved words with special meaning): auto\tdouble\tint\tstruct break\telse\tlong\tswitch case\tenum\tregister\ttypedef char\textern\treturn\tunion const\tfloat\tshort\tunsigned continue\tfor\tsigned\tvoid default\tgoto\tsizeof\tvolatile do\tif\tstatic\twhile C99 adds five more keywords: _Bool\tinline _Complex\trestrict _Imaginary C1X adds seven more keywords: _Alignas\t_Generic\t_Static_assert _Alignof\t_Noreturn\t_Thread_local _Atomic Operators C supports a rich set of operators, which are symbols used within an expression to specify the manipulations to be performed while evaluating that expression.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "break.n",
                "Frame": "Opportunity"
            },
            {
                "LU": "long.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "switch.v",
                "Frame": "Exchange"
            },
            {
                "LU": "register.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "union.n",
                "Frame": "Organization"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "sign.v",
                "Frame": "Sign_agreement"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "restrict.v",
                "Frame": "Inhibit_movement"
            },
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "rich.a",
                "Frame": "Wealthiness"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "C has operators for: arithmetic: +, -, *, /, % assignment: = augmented assignment: +=, -=, *=, /=, %=, &=, |=, ^=, <<=, >>= bitwise logic: ~, &, |, ^ bitwise shifts: <<, >> boolean logic:.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            }
        ]
    },
    {
        "text": ", &&, || conditional evaluation:.",
        "frame": [
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            }
        ]
    },
    {
        "text": ": equality testing: ==,.",
        "frame": [
            {
                "LU": "testing.n",
                "Frame": "Operational_testing"
            }
        ]
    },
    {
        "text": "= calling functions: ( ) increment and decrement: ++ and -- member selection:.",
        "frame": [
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "member.n",
                "Frame": "Membership"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            }
        ]
    },
    {
        "text": ", -> object size: sizeof order relations: <, <=, >, >= reference and dereference: &, *, [ ] sequencing: , subexpression grouping: ( ) type conversion: (typename) \"Hello, world\" Example The \"hello, world\" example, which appeared in the first edition of K&R, has become the model for an introductory program in most programming textbooks, regardless of programming language.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "conversion.n",
                "Frame": "Cause_change"
            },
            {
                "LU": "appear.v",
                "Frame": "Give_impression"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "The program prints \"hello, world\" to the standard output, which is usually a terminal or screen display.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "screen.v",
                "Frame": "Eclipse"
            }
        ]
    },
    {
        "text": "The original version was: main() { printf(\"hello, world\\n\"); } A standard-conforming \"hello, world\" program is: #include <stdio.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "h> int main(void) { printf(\"hello, world\\n\"); return 0; } The first line of the program contains a preprocessing directive, indicated by #include.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "This causes the compiler to replace that line with the entire text of the stdio.",
        "frame": [
            {
                "LU": "cause.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "h standard header, which contains declarations for standard input and output functions such as printf.",
        "frame": [
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The angle brackets surrounding stdio.",
        "frame": [
            {
                "LU": "angle.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "surround.v",
                "Frame": "Surrounding"
            }
        ]
    },
    {
        "text": "h indicate that stdio.",
        "frame": [
            {
                "LU": "indicate.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "h is located using a search strategy that prefers standard headers to other headers having the same name.",
        "frame": [
            {
                "LU": "locate.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "(Double quotes are used to include local or project-specific header files.",
        "frame": [
            {
                "LU": "double.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "The next line indicates that a function named main is being defined.",
        "frame": [
            {
                "LU": "indicate.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "The main function serves a special purpose in C programs; the run-time environment calls the main function to begin program execution.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "execution.n",
                "Frame": "Execution"
            }
        ]
    },
    {
        "text": "The type specifier int indicates that the value that is returned to the invoker (in this case the run-time environment) as a result of evaluating the main function, is an integer.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The keyword void as a parameter list indicates that this function takes no arguments.",
        "frame": [
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "The opening curly brace indicates the beginning of the definition of the main function.",
        "frame": [
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The next line calls (diverts execution to) a function named printf, which is supplied from a system library.",
        "frame": [
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "In this call, the printf function is passed (provided with) a single argument, the address of the first character in the string literal \"hello, world\\n\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            }
        ]
    },
    {
        "text": "The string literal is an unnamed array with elements of type char, set up automatically by the compiler with a final 0-valued character to mark the end of the array (printf needs to know this).",
        "frame": [
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "mark.v",
                "Frame": "Sign"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The \\n is an escape sequence that C translates to a newline character, which on output signifies the end of the current line.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "The return value of the printf function is of type int, but it is silently discarded since it is not used.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "(A more careful program might test the return value to determine whether or not the printf function succeeded.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "might.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "succeed.v",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "The semicolon ; terminates the statement.",
        "frame": [
            {
                "LU": "statement.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The return statement terminates the execution of the main function and causes it to return the integer value 0, which is interpreted by the run-time system as an exit code indicating successful execution.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "cause.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "exit.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "successful.a",
                "Frame": "Success_or_failure"
            }
        ]
    },
    {
        "text": "The closing curly brace indicates the end of the code for the main function.",
        "frame": [
            {
                "LU": "indicate.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Data Types C has a static weak typing type system that shares some similarities with that of other ALGOL descendants such as Pascal.",
        "frame": [
            {
                "LU": "weak.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "descendant.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "There are built-in types for integers of various sizes, both signed and unsigned, floating-point numbers, characters, and enumerated types (enum).",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "C99 added a boolean datatype.",
        "frame": [
            {
                "LU": "add.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "There are also derived types including arrays, pointers, records (struct), and untagged unions (union).",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "record.n",
                "Frame": "Recording"
            },
            {
                "LU": "union.n",
                "Frame": "Organization"
            }
        ]
    },
    {
        "text": "C is often used in low-level systems programming where escapes from the type system may be necessary.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "escape.n",
                "Frame": "Escaping"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            }
        ]
    },
    {
        "text": "The compiler attempts to ensure type correctness of most expressions, but the programmer can override the checks in various ways, either by using a type cast to explicitly convert a value from one type to another, or by using pointers or unions to reinterpret the underlying bits of a value in some other way.",
        "frame": [
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "cast.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "Pointers C supports the use of pointers, a type of reference that records the address or location of an object or function in memory.",
        "frame": [
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "record.v",
                "Frame": "Recording"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Pointers can be dereferenced to access data stored at the address pointed to, or to invoke a pointed-to function.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Pointers can be manipulated using assignment or pointer arithmetic.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            }
        ]
    },
    {
        "text": "The run-time representation of a pointer value is typically a raw memory address (perhaps augmented by an offset-within-word field), but since a pointer's type includes the type of the thing pointed to, expressions including pointers can be type-checked at compile time.",
        "frame": [
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Pointer arithmetic is automatically scaled by the size of the pointed-to data type.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "(See Array-pointer interchangeability below.",
        "frame": [
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            }
        ]
    },
    {
        "text": "Pointers are used for many different purposes in C.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Text strings are commonly manipulated using pointers into arrays of characters.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Dynamic memory allocation is performed using pointers.",
        "frame": [
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Many data types, such as trees, are commonly implemented as dynamically allocated struct objects linked together using pointers.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "tree.n",
                "Frame": "Plants"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Pointers to functions are useful for passing functions as arguments to higher-order functions (such as qsort or bsearch) or as callbacks to be invoked by event handlers.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "A null pointer is a pointer that explicitly points to no valid location.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "point.v",
                "Frame": "Adducing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "It is created by setting a pointer to the integer value zero.",
        "frame": [
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "zero.num",
                "Frame": "Cardinal_numbers"
            }
        ]
    },
    {
        "text": "The internal representation of pointers is not specified, and null pointers might not be represented in the same way as a zero integer.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "zero.num",
                "Frame": "Cardinal_numbers"
            }
        ]
    },
    {
        "text": "Dereferencing a null pointer is undefined, often resulting in a segmentation fault.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "result.v",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Null pointers are useful for indicating special cases such as no next pointer in the final node of a linked list, or as an error indication from functions returning pointers.",
        "frame": [
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "indication.n",
                "Frame": "Sign"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Null pointers are sometimes represented by a standard macro named NULL.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "Null pointers logically evaluate to false, while all other pointers which evaluate to true.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Void pointers (void *) point to objects of unknown type, and can therefore be used as \"generic\" data pointers.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "unknown.a",
                "Frame": "Awareness"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Since the size and type of the pointed-to object is not known, void pointers cannot be dereferenced, nor is pointer arithmetic on them allowed, although they can easily be (and in many contexts implicitly are) converted to and from any other object pointer type.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Careless use of pointers is potentially dangerous.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Because they are typically unchecked, a pointer variable can be made to point to any arbitrary location, which can cause undesirable effects.",
        "frame": [
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "Although properly-used pointers point to safe places, they can be made to point to unsafe places by using invalid pointer arithmetic; the objects they point to may be deallocated and reused (dangling pointers); they may be used without having been initialized (wild pointers); or they may be directly assigned an unsafe value using a cast, union, or through another corrupt pointer.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "cast.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "union.n",
                "Frame": "Organization"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "In general, C is permissive in allowing manipulation of and conversion between pointer types, although compilers typically provide options for various levels of checking.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "conversion.n",
                "Frame": "Cause_change"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "Some other programming languages address these problems by using more restrictive reference types.",
        "frame": [
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Arrays Array types in C are traditionally of a fixed, static size specified at compile time.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "(The more recent C99 standard also allows a form of variable-length arrays.",
        "frame": [
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "However, it is also possible to allocate a block of memory (of arbitrary size) at run-time, using the standard library's malloc function, and treat it as an array.",
        "frame": [
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "C's unification of arrays and pointers (see below) means that true arrays and these dynamically-allocated, simulated arrays are virtually interchangeable.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "Since arrays are always accessed (in effect) via pointers, array accesses are typically not checked against the underlying array size, although the compiler may provide bounds checking as an option.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "bound.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Array bounds violations are therefore possible and rather common in carelessly written code, and can lead to various repercussions, including illegal memory accesses, corruption of data, buffer overruns, and run-time exceptions.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "illegal.a",
                "Frame": "Legality"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "C does not have a special provision for declaring multidimensional arrays, but rather relies on recursion within the type system to declare arrays of arrays, which effectively accomplishes the same thing.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "provision.n",
                "Frame": "Supply"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "The index values of the resulting \"multidimensional array\" can be thought of as increasing in row-major order.",
        "frame": [
            {
                "LU": "result.v",
                "Frame": "Causation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            }
        ]
    },
    {
        "text": "Multidimensional arrays are commonly used in numerical algorithms (mainly from applied linear algebra) to store matrices.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The structure of the C array is well suited to this particular task.",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "suit.v",
                "Frame": "Suitability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            }
        ]
    },
    {
        "text": "However, since arrays are passed merely as pointers, the bounds of the array must be known fixed values or else explicitly passed to any subroutine that requires them, and dynamically sized arrays of arrays cannot be accessed using double indexing.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "pass.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "bound.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "(A workaround for this is to allocate the array with an additional \"row vector\" of pointers to the columns.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "additional.a",
                "Frame": "Increment"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "C99 introduced \"variable-length arrays\" which address some, but not all, of the issues with ordinary C arrays.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "ordinary.a",
                "Frame": "Typicality"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "Array-pointer Interchangeability A distinctive (but potentially confusing) feature of C is its treatment of arrays and pointers.",
        "frame": [
            {
                "LU": "distinctive.a",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "confuse.v",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "treatment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "The array-subscript notation x[i] can also be used when x is a pointer; the interpretation (using pointer arithmetic) is to access the (i + 1)th object of several adjacent data objects pointed to by x, counting the object that x points to (which is x[0]) as the first element of the array.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "adjacent.a",
                "Frame": "Adjacency"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "Formally, x[i] is equivalent to *(x + i).",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Since the type of the pointer involved is known to the compiler at compile time, the address that x + i points to is not the address pointed to by x incremented by i bytes, but rather incremented by i multiplied by the size of an element that x points to.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The size of these elements can be determined with the operator sizeof by applying it to any dereferenced element of x, as in n = sizeof *x or n = sizeof x[0].",
        "frame": [
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "apply.v",
                "Frame": "Using"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Furthermore, in most expression contexts (a notable exception is as operand of sizeof), the name of an array is automatically converted to a pointer to the array's first element; this implies that an array is never copied as a whole when named as an argument to a function, but rather only the address of its first element is passed.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "copy.v",
                "Frame": "Imitating"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "address.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Therefore, although function calls in C use pass-by-value semantics, arrays are in effect passed by reference.",
        "frame": [
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "The number of elements in a declared array x can be determined as sizeof x / sizeof x[0].",
        "frame": [
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "An interesting demonstration of the interchangeability of pointers and arrays is shown below.",
        "frame": [
            {
                "LU": "interesting.a",
                "Frame": "Mental_stimulus_stimulus_focus"
            },
            {
                "LU": "demonstration.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            }
        ]
    },
    {
        "text": "The four assignments are equivalent and each is valid C code.",
        "frame": [
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            }
        ]
    },
    {
        "text": "/* x is an array OR a pointer.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "i is an integer.",
        "frame": []
    },
    {
        "text": "*/ x[i] = 1;\t/* equivalent to *(x + i) */ *(x + i) = 1; *(i + x) = 1; i[x] = 1;\t/* equivalent to *(i + x) */ Note that although all four assignments are equivalent, only the first represents good coding style.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "represent.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            }
        ]
    },
    {
        "text": "The last line might be found in obfuscated C code.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Despite this apparent equivalence between array and pointer variables, there is still a distinction to be made between them.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Even though the name of an array is, in most expression contexts, converted into a pointer (to its first element), this pointer does not itself occupy any storage, unlike a pointer variable.",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "unlike.prep",
                "Frame": "Similarity"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Consequently, what an array \"points to\" cannot be changed, and it is impossible to assign a value to an array variable.",
        "frame": [
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "(Array contents may be copied, however, e.",
        "frame": [
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": ", by using the memcpy function, or by accessing the individual elements.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "access.v",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Memory Management One of the most important functions of a programming language is to provide facilities for managing memory and the objects that are stored in memory.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "facility.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "manage.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "C provides three distinct ways to allocate memory for objects: Static memory allocation: space for the object is provided in the binary at compile-time; these objects have an extent (or lifetime) as long as the binary which contains them is loaded into memory.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "extent.n",
                "Frame": "Quantity"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Automatic memory allocation: temporary objects can be stored on the stack, and this space is automatically freed and reusable after the block in which they are declared is exited.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "exit.v",
                "Frame": "Departing"
            }
        ]
    },
    {
        "text": "Dynamic memory allocation: blocks of memory of arbitrary size can be requested at run-time using library functions such as malloc from a region of memory called the heap; these blocks persist until subsequently freed for reuse by calling the library function realloc or free These three approaches are appropriate in different situations and have various tradeoffs.",
        "frame": [
            {
                "LU": "block.n",
                "Frame": "Hindering"
            },
            {
                "LU": "request.v",
                "Frame": "Request"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "block.n",
                "Frame": "Hindering"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            },
            {
                "LU": "subsequently.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "For example, static memory allocation has little allocation overhead, automatic allocation may involve slightly more overhead, and dynamic memory allocation can potentially have a great deal of overhead for both allocation and deallocation.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "little.a",
                "Frame": "Size"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The persistent nature of static objects is useful for maintaining state information across function calls, automatic allocation is easy to use but stack space is typically much more limited and transient than either static memory or heap space, and dynamic memory allocation allows convenient allocation of objects whose size is known only at run-time.",
        "frame": [
            {
                "LU": "persistent.a",
                "Frame": "Duration_description"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Request"
            },
            {
                "LU": "easy.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            }
        ]
    },
    {
        "text": "Most C programs make extensive use of all three.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Where possible, automatic or static allocation is usually simplest because the storage is managed by the compiler, freeing the programmer of the potentially error-prone chore of manually allocating and releasing storage.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "manage.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "free.v",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "release.v",
                "Frame": "Releasing"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            }
        ]
    },
    {
        "text": "However, many data structures can change in size at runtime, and since static allocations (and automatic allocations before C99) must have a fixed size at compile-time, there are many situations in which dynamic allocation is necessary.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            }
        ]
    },
    {
        "text": "Prior to the C99 standard, variable-sized arrays were a common example of this.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "(See the article on malloc for an example of dynamically allocated arrays.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "Unless otherwise specified, static objects contain zero or null pointer values upon program startup.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Automatically and dynamically allocated objects are initialized only if an initial value is explicitly specified; otherwise they initially have indeterminate values (typically, whatever bit pattern happens to be present in the storage, which might not even represent a valid value for that type).",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "If the program attempts to access an uninitialized value, the results are undefined.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Many modern compilers try to detect and warn about this problem, but both false positives and false negatives can occur.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "detect.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "negative.a",
                "Frame": "Attitude_description"
            }
        ]
    },
    {
        "text": "Another issue is that heap memory allocation has to be synchronized with its actual usage in any program in order for it to be reused as much as possible.",
        "frame": [
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "For example, if the only pointer to a heap memory allocation goes out of scope or has its value overwritten before free() is called, then that memory cannot be recovered for later reuse and is essentially lost to the program, a phenomenon known as a memory leak.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "leak.v",
                "Frame": "Reveal_secret"
            }
        ]
    },
    {
        "text": "Conversely, it is possible to release memory too soon and continue to access it; however, since the allocation system can re-allocate or itself use the freed memory, unpredictable behavior is likely to occur.",
        "frame": [
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "unpredictable.a",
                "Frame": "Expectation"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Typically, the symptoms will appear in a portion of the program far removed from the actual error, making it difficult to track down the problem.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "portion.n",
                "Frame": "Part_whole"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "(Such issues are ameliorated in languages with automatic garbage collection.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "collection.n",
                "Frame": "Commerce_collect"
            }
        ]
    },
    {
        "text": "Libraries The C programming language uses libraries as its primary method of extension.",
        "frame": [
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            }
        ]
    },
    {
        "text": "In C, a library is a set of functions contained within a single \"archive\" file.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Each library typically has a header file, which contains the prototypes of the functions contained within the library that may be used by a program, and declarations of special data types and macro symbols used with these functions.",
        "frame": [
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "prototype.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "In order for a program to use a library, it must include the library's header file, and the library must be linked with the program, which in many cases requires compiler flags (e.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            }
        ]
    },
    {
        "text": ", -lm, shorthand for \"math library\").",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The most common C library is the C standard library, which is specified by the ISO and ANSI C standards and comes with every C implementation (freestanding [embedded] C implementations may provide only a subset of the standard library).",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "This library supports stream input and output, memory allocation, mathematics, character strings, and time values.",
        "frame": [
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "stream.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Another common set of C library functions are those used by applications specifically targeted for Unix and Unix-like systems, especially functions which provide an interface to the kernel.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "These functions are detailed in various standards such as POSIX and the Single UNIX Specification.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Since many programs have been written in C, there are a wide variety of other libraries available.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Libraries are often written in C because C compilers generate efficient object code; programmers then create interfaces to the library so that the routines can be used from higher-level languages like Java, Perl, and Python.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            }
        ]
    },
    {
        "text": "Objective C Objective-C is a reflective, object-oriented programming language that adds Smalltalk-style messaging to the C programming language.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Today, it is used primarily on Apple's Mac OS X and iOS: two environments derived from the OpenStep standard, though not compliant with it.",
        "frame": [
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Objective-C is the primary language used for Apple's Cocoa API, and it was originally the main language on NeXT's NeXTSTEP OS.",
        "frame": [
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Generic Objective-C programs that do not use these libraries can also be compiled for any system supported by gcc or Clang.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "History Objective-C was created primarily by Brad Cox and Tom Love in the early 1980s at their company Stepstone.",
        "frame": [
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "company.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Both had been introduced to Smalltalk while at ITT Corporation's Programming Technology Center in 1981.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "corporation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The earliest work on Objective C traces back to around that time.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Cox was intrigued by problems of true reusability in software design and programming.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            }
        ]
    },
    {
        "text": "He realized that a language like Smalltalk would be invaluable in building development environments for system developers at ITT.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "However, he and Tom Love also recognized that backward compatibility with C was critically important in ITT's telecom engineering milieu.",
        "frame": [
            {
                "LU": "recognize.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Cox began writing a pre-processor for C to add some of the capabilities of Smalltalk.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "He soon had a working implementation of an object-oriented extension to the C language, which he called \"OOPC\" for Object-Oriented Pre-Compiler.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Love was hired by Schlumberger Research in 1982 and had the opportunity to acquire the first commercial copy of Smalltalk-80, which further influenced the development of their brainchild.",
        "frame": [
            {
                "LU": "hire.v",
                "Frame": "Hiring"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "opportunity.n",
                "Frame": "Opportunity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "acquire.v",
                "Frame": "Getting"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "In order to demonstrate that real progress could be made, Cox showed that making interchangeable software components really needed only a few practical changes to existing tools.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "progress.n",
                "Frame": "Progression"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "exist.v",
                "Frame": "Existence"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Specifically, they needed to support objects in a flexible manner, come supplied with a usable set of libraries, and allow for the code (and any resources needed by the code) to be bundled into a single cross-platform format.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Love and Cox eventually formed a new venture, Productivity Products International (PPI), to commercialize their product, which coupled an Objective-C compiler with class libraries.",
        "frame": [
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "In 1986, Cox published the main description of Objective-C in its original form in the book Object-Oriented Programming, An Evolutionary Approach.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Although he was careful to point out that there is more to the problem of reusability than just the language, Objective-C often found itself compared feature for feature with other languages.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "compare.v",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Popularization through NeXT After Steve Jobs left Apple Inc.",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": ", he started the company NeXT.",
        "frame": []
    },
    {
        "text": "In 1988, NeXT licensed Objective-C from StepStone (the new name of PPI, the owner of the Objective-C trademark) and extended the GCC compiler to support Objective-C, and developed the AppKit and Foundation Kit libraries on which the NeXTstep user interface and interface builder were based.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "owner.n",
                "Frame": "Possession"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "foundation.n",
                "Frame": "Body_decoration"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "While the NeXT workstations failed to make a great impact in the marketplace, the tools were widely lauded in the industry.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "fail.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "industry.n",
                "Frame": "Fields"
            }
        ]
    },
    {
        "text": "This led NeXT to drop hardware production and focus on software tools, selling NeXTstep (and OpenStep) as a platform for custom programming.",
        "frame": [
            {
                "LU": "lead.v",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "sell.v",
                "Frame": "Commerce_sell"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The GNU project started work on its free clone of NeXTStep, named GNUstep, based on the OpenStep standard.",
        "frame": [
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "Dennis Glatting wrote the first GNU Objective-C runtime in 1992.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The GNU Objective-C runtime, which has been in use since 1993, is the one developed by Kresten Krab Thorup when he was a university student in Denmark.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "university.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Thorup also worked at NeXT from 1993 to 1996.",
        "frame": [
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "After acquiring NeXT in 1996, Apple Computer used OpenStep in its new operating system, Mac OS X.",
        "frame": [
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "acquire.v",
                "Frame": "Getting"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "new.a",
                "Frame": "Age"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "This included Objective-C and NeXT's Objective-C based developer tool, Project Builder (which had been expanded and is now called Xcode), as well as its interface design tool, Interface Builder.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Most of Apple's present-day Cocoa API is based on OpenStep interface objects, and is the most significant Objective-C environment being used for active development.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "Syntax Objective-C is a thin layer on top of C, and moreover is a strict superset of C; it is possible to compile any C program with an Objective-C compiler, and to freely include C code within an Objective-C class.",
        "frame": [
            {
                "LU": "thin.a",
                "Frame": "Change_of_consistency"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "top.n",
                "Frame": "Occupy_rank"
            },
            {
                "LU": "strict.a",
                "Frame": "Strictness"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Objective-C derives its object syntax from Smalltalk.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "All of the syntax for non-object-oriented operations (including primitive variables, preprocessing, expressions, function declarations, and function calls) are identical to that of C, while the syntax for object-oriented features is an implementation of Smalltalk-style messaging.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "Messages The Objective-C model of object-oriented programming is based on message passing to object instances.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "In Objective-C one does not call a method; one sends a message.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "This is unlike the Simula-style programming model used by C++.",
        "frame": [
            {
                "LU": "unlike.prep",
                "Frame": "Similarity"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The difference between these two concepts is in how the code referenced by the method or message name is executed.",
        "frame": [
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "In a Simula-style language, the method name is in most cases bound to a section of code in the target class by the compiler.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In Smalltalk and Objective-C, the target of a message is resolved at runtime, with the receiving object itself interpreting the message.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "A method is identified by a selector or SEL  a NUL-terminated string representing its name  and resolved to a C method pointer implementing it: an IMP.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "A consequence of this is that the message-passing system has no type checking.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "The object to which the message is directed  the receiver  is not guaranteed to respond to a message, and if it does not, it simply raises an exception.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Sending the message method to the object pointed to by the pointer obj would require the following code in C++: obj->method(argument); In Objective-C, this is written as follows: [obj method: argument]; Both styles of programming have their strengths and weaknesses.",
        "frame": [
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "strength.n",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "Object-oriented programming in the Simula style allows multiple inheritances and faster execution by using compile-time binding whenever possible, but it does not support dynamic binding by default.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "binding.a",
                "Frame": "Being_obligatory"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "binding.a",
                "Frame": "Being_obligatory"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "It also forces all methods to have a corresponding implementation unless they are virtual, meaning the method is a placeholder for methods with the same name to be defined in objects derived from the base object.",
        "frame": [
            {
                "LU": "force.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "unless.scon",
                "Frame": "Negative_conditional"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "An implementation is still required for the method to be called in the derived object.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Smalltalk-style programming allows messages to go unimplemented, with the method resolved to its implementation at runtime.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "at.prep",
                "Frame": "Being_employed"
            }
        ]
    },
    {
        "text": "For example, a message may be sent to a collection of objects, to which only some will be expected to respond, without fear of producing runtime errors.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "fear.n",
                "Frame": "Experiencer_focus"
            }
        ]
    },
    {
        "text": "Message passing also does not require that an object be defined at compile time.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "(See the dynamic typing section below for more advantages of dynamic (late) binding.",
        "frame": [
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "late.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "binding.a",
                "Frame": "Being_obligatory"
            }
        ]
    },
    {
        "text": "Due to the overhead of interpreting the messages, an initial Objective-C message takes three times as long as a C++ virtual method call.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "call.n",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "Subsequent calls are IMP cached and are faster than the C++ virtual method call in some implementations.",
        "frame": [
            {
                "LU": "subsequent.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "Interfaces and Implementations Objective-C requires that the interface and implementation of a class be in separately declared code blocks.",
        "frame": [
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "block.n",
                "Frame": "Hindering"
            }
        ]
    },
    {
        "text": "By convention, developers place the interface in a header file and the implementation in a code file.",
        "frame": [
            {
                "LU": "place.v",
                "Frame": "Placing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "The header files, normally suffixed.",
        "frame": []
    },
    {
        "text": "h, are similar to C header files while the implementation (method) files, normally suffixed.",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "m, can be very similar to C code files.",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Interface The interface of a class is usually defined in a header file.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "A common convention is to name the header file after the name of the class, e.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "name.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "Ball.",
        "frame": []
    },
    {
        "text": "h would contain the interface for the class Ball.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "An interface declaration takes the form: @interface classname : superclassname { // instance variables } + classMethod1; + (return_type)classMethod2; + (return_type)classMethod3:(param1_type)param1_varName; - (return_type)instanceMethod1:(param1_type)param1_varName :(param2_type)param2_varName; - (return_type)instanceMethod2WithParameter:(param1_type)param1_varName andOtherParameter:(param2_type)param2_varName; @end In the above, plus signs denote class methods, or methods that can be called on the class itself (not on an instance), and minus signs denote instance methods, which can only be called on a particular instance of the class.",
        "frame": [
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "sign.n",
                "Frame": "Sign_agreement"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "sign.n",
                "Frame": "Sign_agreement"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "Class methods also have no access to instance variables.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Return types can be any standard C type, a pointer to a generic Objective-C object, or a pointer to a specific type of object such as NSArray *, NSImage *, or NSString *.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "The default return type is the generic Objective-C type id.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "Method arguments begin with a colon followed by the expected argument type in parentheses and the argument name.",
        "frame": [
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "In some cases (e.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "when writing system APIs) it is useful to add descriptive text before each parameter.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            }
        ]
    },
    {
        "text": "- (void)setRangeStart:(int)start end:(int)end; (void)importDocumentWithName:(NSString *)name withSpecifiedPreferences:(Preferences *)prefs beforePage:(int)insertPage; Implementation The interface only declares the class interface and not the methods themselves: the actual code is written in the implementation file.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Implementation (method) files normally have the file extension.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            }
        ]
    },
    {
        "text": "m, which originally signified \"messages\".",
        "frame": []
    },
    {
        "text": "@implementation classname + (return_type)classMethod { // implementation } - (return_type)instanceMethod { // implementation } @end Methods are written using their interface declarations.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "end.n",
                "Frame": "Death"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "declaration.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Comparing Objective-C and C: - (int)method:(int)i { return [self square_root:i]; } int function (int i) { return square_root(i); } The syntax allows pseudo-naming of arguments.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "- (int)changeColorToRed:(float)red green:(float)green blue:(float)blue; [myColor changeColorToRed:5.",
        "frame": [
            {
                "LU": "red.a",
                "Frame": "Color"
            },
            {
                "LU": "green.a",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "green.a",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            }
        ]
    },
    {
        "text": "0 green:2.",
        "frame": []
    },
    {
        "text": "0 blue:6.",
        "frame": []
    },
    {
        "text": "0]; Internal representations of a method vary between different implementations of Objective-C.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "vary.v",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "If myColor is of the class Color, instance method -changeColorToRed:green:blue: might be internally labeled _i_Color_changeColorToRed_green_blue.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "green.a",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            }
        ]
    },
    {
        "text": "The i is to refer to an instance method, with the class and then method names appended and colons changed to underscores.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "change.v",
                "Frame": "Exchange"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "As the order of parameters is part of the method name, it cannot be changed to suit coding style or expression as with true named parameters.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "suit.v",
                "Frame": "Suitability"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            }
        ]
    },
    {
        "text": "However, internal names of the function are rarely used directly.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Generally, messages are converted to function calls defined in the Objective-C runtime library.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It is not necessarily known at link time which method will be called because the class of the receiver (the object being sent the message) need not be known until runtime.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "Instantiation Once an Objective-C class is written, it can be instantiated.",
        "frame": [
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "This is done by first allocating an uninitialized instance of the class (an object) and then by initializing it.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "An object is not fully functional until both steps have been completed.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            },
            {
                "LU": "step.n",
                "Frame": "Self_motion"
            }
        ]
    },
    {
        "text": "These steps should be accomplished with a single line of code so that there is never an allocated object that hasn't undergone initialization (and because it is not advisable to keep the intermediate result since -init can return a different object than that which it is called on).",
        "frame": [
            {
                "LU": "step.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "result.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Instantiation with the default, no-parameter initializer: MyObject *o = [[MyObject alloc] init]; Instantiation with a custom initializer: MyObject *o = [[MyObject alloc] initWithString:myString]; In the case where no custom initialization is being performed, the \"new\" method can often be used in place of the alloc-init messages: MyObject *o = [MyObject new]; The alloc message allocates enough memory to hold all the instance variables for an object, sets all the instance variables to zero values, and turns the memory into an instance of the class; at no point during the initialization is the memory an instance of the superclass.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "custom.n",
                "Frame": "Custom"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "custom.n",
                "Frame": "Custom"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "turn.v",
                "Frame": "Becoming"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "The init message performs the set-up of the instance upon creation.",
        "frame": [
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "upon.prep",
                "Frame": "Spatial_contact"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "The init method is often written as follows: - (id)init { self = [super init]; if (self) { // perform initialization of object here } return self; } In the above example, notice the id return type.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "notice.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "This type stands for \"pointer to any object\" in Objective-C (See the Dynamic typing section).",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The initializer pattern is used in order to assure that the object is properly initialized by its superclass before the init method performs its initialization.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "assure.v",
                "Frame": "Telling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "It performs the following actions: 1.",
        "frame": [
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "self = [super init] Sends the superclass instance an init message and assigns the result to self \t(pointer to the current object).",
        "frame": [
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "if (self) Checks if the returned object pointer is valid before performing any \tinitialization.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            }
        ]
    },
    {
        "text": "return self Returns the value of self to the caller.",
        "frame": [
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A non-valid object pointer has the value nil; conditional statements like \"if\" treat nil like a null pointer, so the initialization code will not be executed if [super init] returned nil.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "If there is an error in initialization the init method should perform any necessary cleanup, including sending a \"release\" message to self, and return nil to indicate that initialization failed, any checking for such errors must only be performed after having called the superclass initialization to ensure that destroying the object will be done correctly.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "release.n",
                "Frame": "Publishing"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fail.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "destroy.v",
                "Frame": "Killing"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "If a class has more than one initialization method, only one of them (the \"dedicated initializer\") needs to follow this pattern; others can call the dedicated initializer instead of the superclass initializer.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            }
        ]
    },
    {
        "text": "Protocols Objective-C was extended at NeXT to introduce the concept of multiple inheritance of specification, but not implementation, through the introduction of protocols.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "This is a pattern achievable either as an abstract multiply inherited base class in C++, or as an \"interface\" (as in Java and C#).",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Objective-C makes use of ad hoc protocols called informal protocols and compiler-enforced protocols called formal protocols.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "An informal protocol is a list of methods that a class can opt to implement.",
        "frame": [
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "opt.v",
                "Frame": "Choosing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "It is specified in the documentation, since it has no presence in the language.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Informal protocols often include optional methods, which, if implemented, can change the behavior of a class.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "For example, a text field class might have a delegate that implements an informal protocol with an optional method for performing auto-completion of user-typed text.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The text field discovers whether the delegate implements that method (via reflection) and, if so, calls the delegate's method to support the auto-complete feature.",
        "frame": [
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "discover.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "A formal protocol is similar to an interface in Java or C#.",
        "frame": [
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It is a list of methods that any class can declare itself to implement.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Versions of Objective-C before 2.",
        "frame": []
    },
    {
        "text": "0 required that a class must implement all methods in a protocol it declares itself as adopting; the compiler will emit an error if the class does not implement every method from its declared protocols.",
        "frame": [
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "Objective-C 2.",
        "frame": []
    },
    {
        "text": "0 added support for marking certain methods in a protocol optional, and the compiler will not enforce implementation of optional methods.",
        "frame": [
            {
                "LU": "add.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "mark.v",
                "Frame": "Sign"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "enforce.v",
                "Frame": "Enforcing"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "The Objective-C concept of protocols is different from the Java or C# concept of interfaces, in that a class may implement a protocol without being declared to implement that protocol.",
        "frame": [
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "The difference is not detectable from outside code.",
        "frame": [
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "outside.a",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "[dubious  discuss] Formal protocols cannot provide any implementations, they simply assure callers that classes that conform to the protocol will provide implementations.",
        "frame": [
            {
                "LU": "dubious.a",
                "Frame": "Certainty"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "In the NeXT/Apple library, protocols are frequently used by the Distributed Objects system to represent the capabilities of an object executing on a remote system.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "The syntax @protocol Locking - (void)lock; - (void)unlock; @end denotes that there is the abstract idea of locking.",
        "frame": [
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "lock.v",
                "Frame": "Hair_configuration"
            }
        ]
    },
    {
        "text": "By stating that the protocol is implemented in the class definition: @interface SomeClass : SomeSuperClass <Locking> @end instances of SomeClass claim that they will provide an implementation for the two instance methods using whatever means they choose.",
        "frame": [
            {
                "LU": "state.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "claim.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Another example use of abstract specification is describing the desired behaviors of plug-ins without constraining what the implementation hierarchy should be.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "describe.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            }
        ]
    },
    {
        "text": "Dynamic Typing Objective-C, like Smalltalk, can use dynamic typing: an object can be sent a message that is not specified in its interface.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This can allow for increased flexibility, as it allows an object to \"capture\" a message and send the message to a different object that can respond to the message appropriately, or likewise send the message on to another object.",
        "frame": [
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "This behavior is known as message forwarding or delegation (see below).",
        "frame": [
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "delegation.n",
                "Frame": "Organization"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            }
        ]
    },
    {
        "text": "Alternatively, an error handler can be used in case the message cannot be forwarded.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "forward.v",
                "Frame": "Sending"
            }
        ]
    },
    {
        "text": "If an object does not forward a message, respond to it, or handle an error, the message is silently discarded.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "forward.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "If messages are sent to nil (the null object pointer), they will be silently ignored or raise a generic exception, depending on compiler options.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Static typing information may also optionally be added to variables.",
        "frame": [
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "This information is then checked at compile time.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "In the following four statements, increasingly specific type information is provided.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "provide.v",
                "Frame": "Supply"
            }
        ]
    },
    {
        "text": "The statements are equivalent at runtime, but the additional information allows the compiler to warn the programmer if the passed argument does not match the type specified.",
        "frame": [
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "additional.a",
                "Frame": "Increment"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "pass.v",
                "Frame": "Process_end"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "- (void)setMyValue:(id)foo; In the above statement, foo may be of any class.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "- (void)setMyValue:(id<aProtocol>)foo; In the above statement, foo may still be an instance of any class, but the class must conform to the aProtocol protocol.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "- (void)setMyValue:(NSNumber *)foo; In the above statement, foo must be an instance of the NSNumber class.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "- (void)setMyValue:(NSNumber<aProtocol> *)foo; In the above statement, foo must be an instance of the NSNumber class, and it must conform to the aProtocol protocol.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "Dynamic typing can be a powerful feature.",
        "frame": [
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "When implementing container classes using statically-typed languages without generics (like Java prior to version 5), the programmer is forced to write a container class for a generic type of object, and then cast back and forth between the abstract generic type and the real type.",
        "frame": [
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "force.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "cast.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Casting, however, breaks the discipline of static typing.",
        "frame": [
            {
                "LU": "discipline.v",
                "Frame": "Rewards_and_punishments"
            }
        ]
    },
    {
        "text": "For instance, putting in an integer and reading out a string will produce a runtime error.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "read.v",
                "Frame": "Reading_activity"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            }
        ]
    },
    {
        "text": "This problem is addressed in, for example, Java 5 and C# with generic programming, but then container classes must be homogeneous in type.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "class.n",
                "Frame": "Categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "This need not be the case with dynamic typing.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "Forwarding Objective-C permits the sending of a message to an object that may not respond.",
        "frame": [
            {
                "LU": "permit.v",
                "Frame": "Documents"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            }
        ]
    },
    {
        "text": "Rather than responding or simply dropping the message, an object can forward the message to an object that can respond.",
        "frame": [
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "drop.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "forward.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            }
        ]
    },
    {
        "text": "Forwarding can be used to simplify implementation of certain design patterns, such as the Observer pattern or the Proxy pattern.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            }
        ]
    },
    {
        "text": "The Objective-C runtime specifies a pair of methods in Object forwarding methods: - (retval_t)forward:(SEL)sel args:(arglist_t)args; // with GCC - (id)forward:(SEL)sel args:(marg_list)args; // with NeXT/Apple systems action methods: - (retval_t)performv:(SEL)sel args:(arglist_t)args;  // with GCC (id)performv:(SEL)sel args:(marg_list)args; // with NeXT/Apple systems An object wishing to implement forwarding needs only to override the forwarding method with a new method to define the forwarding behavior.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "forward.v",
                "Frame": "Sending"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "forward.v",
                "Frame": "Sending"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "The action method performv:: need not be overridden, as this method merely performs an action based on the selector and arguments.",
        "frame": [
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "Notice the SEL type, which is the type of messages in Objective-C.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Categories During the design of Objective-C, one of the main concerns was the maintainability of large code bases.",
        "frame": [
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "concern.n",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "base.n",
                "Frame": "Infrastructure"
            }
        ]
    },
    {
        "text": "Experience from the structured programming world had shown that one of the main ways to improve code was to break it down into smaller pieces.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "improve.v",
                "Frame": "Progression"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "break.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            }
        ]
    },
    {
        "text": "Objective-C borrowed and extended the concept of categories from Smalltalk implementations to help with this process.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "A category collects method implementations into separate files.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The programmer can place groups of related methods into a category to make them more readable.",
        "frame": [
            {
                "LU": "place.v",
                "Frame": "Placing"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "For instance, one could create a \"SpellChecking\" category in the String object, collecting all of the methods related to spell checking into a single place.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "collect.v",
                "Frame": "Commerce_collect"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "check.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Furthermore, the methods within a category are added to a class at run-time.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Thus, categories permit the programmer to add methods to an existing class without the need to recompile that class or even have access to its source code.",
        "frame": [
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "For example, if a system does not contain a spell checker in its String implementation, it could be added without modifying the String source code.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "modify.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "Methods within categories become indistinguishable from the methods in a class when the program is run.",
        "frame": [
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "A category has full access to all of the instance variables within the class, including private variables.",
        "frame": [
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "If a category declares a method with the same method signature as an existing method in a class, the categorys method is adopted.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            }
        ]
    },
    {
        "text": "Thus categories can not only add methods to a class, but also replace existing methods.",
        "frame": [
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "exist.v",
                "Frame": "Existence"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "This feature can be used to fix bugs in other classes by rewriting their methods, or to cause a global change to a classs behavior within a program.",
        "frame": [
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "global.a",
                "Frame": "Political_locales"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "If two categories have methods with the same name (not to be confused with method signature), it is undefined which categorys method is adopted.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "confuse.v",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            }
        ]
    },
    {
        "text": "Other languages have attempted to add this feature in a variety of ways.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "TOM took the Objective-C system a step further and allowed for the addition of variables as well.",
        "frame": [
            {
                "LU": "take.v",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Other languages have used prototype oriented solutions instead, with the most notable being Self.",
        "frame": [
            {
                "LU": "prototype.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "The C# and Visual Basic.",
        "frame": []
    },
    {
        "text": "NET languages implement superficially similar functionality in the form of extension methods, but these do not have access to the private variables of the class.",
        "frame": [
            {
                "LU": "net.v",
                "Frame": "Earnings_and_losses"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Ruby and several other dynamic programming languages refer to the technique as \"monkey patching\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "#import In the C language, the #include pre-compile directive always causes a file's contents to be inserted into the source at that point.",
        "frame": [
            {
                "LU": "import.n",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "cause.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "file.v",
                "Frame": "Grooming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "Objective-C has the equivalent #import directive except each file is included only once per compilation unit, obviating the need for include guards.",
        "frame": [
            {
                "LU": "import.n",
                "Frame": "Importance"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "guard.n",
                "Frame": "Protecting"
            }
        ]
    },
    {
        "text": "Objective-C 2.",
        "frame": []
    },
    {
        "text": "0 At the 2006 Worldwide Developers Conference, Apple announced the release of \"Objective-C 2.",
        "frame": [
            {
                "LU": "announce.v",
                "Frame": "Statement"
            },
            {
                "LU": "release.n",
                "Frame": "Publishing"
            }
        ]
    },
    {
        "text": "0,\" a revision of the Objective-C language to include \"modern garbage collection, syntax enhancements, runtime performance improvements, and 64-bit support\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "improvement.n",
                "Frame": "Improvement_or_decline"
            }
        ]
    },
    {
        "text": "Mac OS X v10.",
        "frame": []
    },
    {
        "text": "5, released in October 2007, included an Objective-C 2.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "0 compiler.",
        "frame": []
    },
    {
        "text": "GCC 4.",
        "frame": []
    },
    {
        "text": "6 supports many new Objective-C features, such as declared and synthesized properties, dot syntax, fast enumeration, optional protocol methods, method/protocol/class attributes, class extensions and a new GNUnn Objective-C runtime API.",
        "frame": [
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Garbage Collection Objective-C 2.",
        "frame": []
    },
    {
        "text": "0 provides an optional conservative, yet generational garbage collector.",
        "frame": [
            {
                "LU": "conservative.n",
                "Frame": "People_along_political_spectrum"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "When run in backwards-compatible mode, the runtime turns reference counting operations such as \"retain\" and \"release\" into no-ops.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "retain.v",
                "Frame": "Memory"
            },
            {
                "LU": "release.n",
                "Frame": "Publishing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "All objects are subject to garbage collection when garbage collection is enabled.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "collection.n",
                "Frame": "Commerce_collect"
            },
            {
                "LU": "collection.n",
                "Frame": "Commerce_collect"
            }
        ]
    },
    {
        "text": "Regular C pointers may be qualified with \"__strong\" to also trigger the underlying write-barrier compiler intercepts and thus participate in garbage collection.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "collection.n",
                "Frame": "Commerce_collect"
            }
        ]
    },
    {
        "text": "A zero-ing weak subsystem is also provided such that pointers marked as \"__weak\" are set to zero when the object (or more simply, GC memory) is collected.",
        "frame": [
            {
                "LU": "weak.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "provide.v",
                "Frame": "Supply"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "mark.v",
                "Frame": "Sign"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "when.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "The garbage collector does not exist on the iOS implementation of Objective-C 2.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            }
        ]
    },
    {
        "text": "Garbage Collection in Objective-C runs on a low-priority background thread, and can halt on user events, with the intention of keeping the user experience responsive.",
        "frame": [
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "intention.n",
                "Frame": "Purpose"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Properties Objective-C 2.",
        "frame": []
    },
    {
        "text": "0 introduces a new syntax to declare instance variables as properties, with optional attributes to configure the generation of accessor methods.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Properties are, in a sense, public instance variables; that is, declaring an instance variable as a property provides external classes with access (possibly limited, e.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "public.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "possibly.adv",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "read only) to that property.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "property.n",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "A property may be declared as \"readonly\", and may be provided with storage semantics such as \"assign\", \"copy\" or \"retain\".",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "retain.v",
                "Frame": "Memory"
            }
        ]
    },
    {
        "text": "By default, properties are considered atomic, which results in a lock preventing multiple threads from accessing them at the same time.",
        "frame": [
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "prevent.v",
                "Frame": "Thwarting"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "access.v",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "A property can be declared as \"nonatomic\", which removes this lock.",
        "frame": []
    },
    {
        "text": "@interface Person : NSObject { @public NSString *name; @private int age; } @property(copy) NSString *name; @property(readonly) int age; -(id)initWithAge:(int)age; @end Properties are implemented by way of the @synthesize keyword, which generates getter (and setter, if not read-only) methods according to the property declaration.",
        "frame": [
            {
                "LU": "public.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "end.n",
                "Frame": "Death"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Alternatively, the getter and setter methods must be implemented explicitly, or the @dynamic keyword can be used to indicate that accessor methods will be provided by other means.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "provide.v",
                "Frame": "Supply"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "@implementation Person @synthesize name; -(id)initWithAge:(int)initAge { age = initAge; // NOTE: direct instance variable assignment, not property setter return self; } -(int)age { return 29; } @end Properties can be accessed using the traditional message passing syntax, dot notation, or, in Key-Value Coding, by name via the \"valueForKey:\"/\"setValue:forKey:\" methods.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "assignment.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "pass.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Person *aPerson = [[Person alloc] initWithAge: 53]; aPerson.",
        "frame": []
    },
    {
        "text": "name = @\"Steve\"; // NOTE: dot notation, uses synthesized setter, equivalent to [aPerson setName: @\"Steve\"]; NSLog(@\"Access by message (%@), dot notation(%@), property name(%@) and direct instance variable access (%@)\", [aPerson name], aPerson.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "name, [aPerson valueForKey:@\"name\"], aPerson->name); In order to use dot notation to invoke property accessors within an instance method, the \"self\" keyword should be used: -(void) introduceMyselfWithProperties:(BOOL)useGetter { NSLog(@\"Hi, my name is %@.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "\", (useGetter.",
        "frame": []
    },
    {
        "text": "self.",
        "frame": [
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            }
        ]
    },
    {
        "text": "name : name)); // NOTE: getter vs.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "ivar access } A class or protocol's properties may be dynamically introspected.",
        "frame": [
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "int i; int propertyCount = 0; objc_property_t *propertyList = class_copyPropertyList([aPerson class], &propertyCount); for (i = 0; i < propertyCount; i++) { objc_property_t *thisProperty = propertyList + i; const char* propertyName = property_getName(*thisProperty); NSLog(@\"Person has a property: '%s'\", propertyName); } Non-fragile Instance Variables Objective-C 2.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "0 provides non-fragile instance variables where supported by the runtime (i.",
        "frame": [
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "when building 64-bit Mac OS X code as well as all iOS code).",
        "frame": [
            {
                "LU": "when.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Under the modern runtime, an extra layer of indirection is added to instance variable access, allowing the dynamic linker to adjust instance layout at runtime.",
        "frame": [
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "This feature allows for two important improvements to Objective-C code: This eliminates the fragile binary interface problem - Superclasses can change sizes without affecting binary compatibility.",
        "frame": [
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "improvement.n",
                "Frame": "Improvement_or_decline"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "eliminate.v",
                "Frame": "Killing"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "affect.v",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "This allows instance variables that provide the backing for properties to be synthesized at runtime without them being declared in the class interface.",
        "frame": [
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Fast Enumeration Instead of using an NSEnumerator object or indices to iterate through a collection, Objective-C 2.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "0 offers the fast enumeration syntax.",
        "frame": [
            {
                "LU": "offer.v",
                "Frame": "Offering"
            }
        ]
    },
    {
        "text": "In Objective-C 2.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "0, the following loops are functionally equivalent, but have different performance characteristics.",
        "frame": [
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "// Using NSEnumerator NSEnumerator *enumerator = [thePeople objectEnumerator]; Person *p; while ((p = [enumerator nextObject]).",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "= nil) { NSLog(@\"%@ is %i years old.",
        "frame": [
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "\", [p name], [p age]); } // Using indexes for (int i = 0; i < [thePeople count]; i++) { Person *p = [thePeople objectAtIndex:i]; NSLog(@\"%@ is %i years old.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "\", [p name], [p age]); } // Using fast enumeration for (Person *p in thePeople) { NSLog(@\"%@ is %i years old.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "\", [p name], [p age]); } Fast enumeration generates more efficient code than standard enumeration because method calls to enumerate over objects are replaced by pointer arithmetic using the NSFastEnumeration protocol.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "over.a",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "Library Use Objective-C today is often used in tandem with a fixed library of standard objects (often known as a \"kit\" or \"framework\"), such as Cocoa or GNUstep.",
        "frame": [
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "These libraries often come with the operating system: the GNUstep libraries often come with GNU/Linux based distributions and Cocoa comes with Mac OS X.",
        "frame": [
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "The programmer is not forced to inherit functionality from the existing base class (NSObject).",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "force.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Objective-C allows for the declaration of new root classes that do not inherit any existing functionality.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "class.n",
                "Frame": "Categorization"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Originally, Objective-C based programming environments typically offered an Object class as the base class from which almost all other classes inherited.",
        "frame": [
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "With the introduction of OpenStep, NeXT created a new base class named NSObject, which offered additional features over Object (an emphasis on using object references and reference counting instead of raw pointers, for example).",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "additional.a",
                "Frame": "Increment"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Almost all classes in Cocoa inherit from NSObject.",
        "frame": [
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Not only did the renaming serve to differentiate the new default behavior of classes within the OpenStep API, but it allowed code that used Objectthe original base class used on NeXTSTEP (and, more or less, other Objective-C class libraries)to co-exist in the same runtime with code that used NSObject (with some limitations).",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "serve.n",
                "Frame": "Subordinates_and_superiors"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "limitation.n",
                "Frame": "Limitation"
            }
        ]
    },
    {
        "text": "The introduction of the two letter prefix also became a simplistic form of namespaces, which Objective-C lacks.",
        "frame": [
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Using a prefix to create an informal packaging identifier became an informal coding standard in the Objective-C community, and continues to this day.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "day.n",
                "Frame": "Calendric_unit"
            }
        ]
    },
    {
        "text": "Analysis of the Language Objective-C implementations use a thin runtime system written in C, which adds little to the size of the application.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "thin.a",
                "Frame": "Change_of_consistency"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "little.a",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "In contrast, most object-oriented systems at the time that it was created used large virtual machine runtimes.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "large.a",
                "Frame": "Size"
            }
        ]
    },
    {
        "text": "Programs written in Objective-C tend to be not much larger than the size of their code and that of the libraries (which generally do not need to be included in the software distribution), in contrast to Smalltalk systems where a large amount of memory was used just to open a window.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "distribution.n",
                "Frame": "Dispersal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "large.a",
                "Frame": "Size"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "open.v",
                "Frame": "Openness"
            },
            {
                "LU": "window.n",
                "Frame": "Connecting_architecture"
            }
        ]
    },
    {
        "text": "Objective-C applications tend to be larger than similar C or C++ applications because Objective-C dynamic typing does not allow methods to be stripped or inlined.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Since the programmer has such freedom to delegate, forward calls, build selectors on the fly and pass them to the runtime system, the Objective-C compiler cannot assume it's safe to remove unused methods or to inline calls.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "safe.a",
                "Frame": "Risky_situation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remove.v",
                "Frame": "Undressing"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "call.n",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "Likewise, the language can be implemented on top of existing C compilers (in GCC, first as a preprocessor, then as a module) rather than as a new compiler.",
        "frame": [
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "top.n",
                "Frame": "Occupy_rank"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "This allows Objective-C to leverage the huge existing collection of C code, libraries, tools, etc.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Existing C libraries can be wrapped in Objective-C wrappers to provide an OO-style interface.",
        "frame": [
            {
                "LU": "library.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In this aspect, it is similar to GObject library and Vala language, which are widely used in development of GTK applications.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "All of these practical changes lowered the barrier to entry, likely the biggest problem for the widespread acceptance of Smalltalk in the 1980s.",
        "frame": [
            {
                "LU": "change.n",
                "Frame": "Undergo_change"
            },
            {
                "LU": "lower.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "entry.n",
                "Frame": "Arriving"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The first versions of Objective-C did not support garbage collection.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "collection.n",
                "Frame": "Commerce_collect"
            }
        ]
    },
    {
        "text": "At the time this decision was a matter of some debate, and many people considered long \"dead times\" (when Smalltalk did collection) to render the entire system unusable.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "decision.n",
                "Frame": "Deciding"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "collection.n",
                "Frame": "Commerce_collect"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Some 3rd party implementations have added this feature (most notably GNUstep) and Apple has implemented it as of Mac OS X v10.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Another common criticism is that Objective-C does not have language support for namespaces.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Instead, programmers are forced to add prefixes to their class names, which are traditionally shorter than namespace names and thus more prone to collisions.",
        "frame": [
            {
                "LU": "force.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "traditionally.adv",
                "Frame": "Custom"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "As of 2007, all Mac OS X classes and functions in the Cocoa programming environment are prefixed with \"NS\" (e.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "NSObject, NSButton) to identify them as belonging to the Mac OS X or iOS core; the \"NS\" derives from the names of the classes as defined during the development of NeXTstep.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "belong.v",
                "Frame": "Membership"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "core.n",
                "Frame": "Emptying"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "class.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Since Objective-C is a strict superset of C, it does not treat C primitive types as first-class objects.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "strict.a",
                "Frame": "Strictness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Because Objective-C uses dynamic runtime typing and because all method calls are function calls (or, in some cases, syscalls), many common performance optimizations cannot be applied to Objective-C methods (for example: inlining, constant propagation, interprocedural optimizations, and scalar replacement of aggregates).",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "This limits the performance of Objective-C abstractions relative to similar abstractions in languages such as C++ where such optimizations are possible.",
        "frame": [
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "relative.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "Lisp Do the arithmetic or be doomed to talk nonsense.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "John McCarthy Lisp (or LISP) is a family of computer programming languages with a long history and a distinctive, fully parenthesized syntax.",
        "frame": [
            {
                "LU": "family.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "distinctive.a",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Originally specified in 1958, Lisp is the second-oldest high-level programming language in widespread use today; only Fortran is older (by one year).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Like Fortran, Lisp has changed a great deal since its early days, and a number of dialects have existed over its history.",
        "frame": [
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "day.n",
                "Frame": "Location_in_time"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "history.n",
                "Frame": "Out_of_existence"
            }
        ]
    },
    {
        "text": "Today, the most widely known general-purpose Lisp dialects are Common Lisp, Scheme, and Clojure.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "Lisp was originally created as a practical mathematical notation for computer programs, influenced by the notation of Alonzo Church's lambda calculus.",
        "frame": [
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "church.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "It quickly became the favored programming language for artificial intelligence (AI) research.",
        "frame": [
            {
                "LU": "quickly.adv",
                "Frame": "Speed_description"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "As one of the earliest programming languages, Lisp pioneered many ideas in computer science, including tree data structures, automatic storage management, dynamic typing, and the self-hosting compiler.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "pioneer.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            }
        ]
    },
    {
        "text": "The name LISP derives from \"LISt Processing\".",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Linked lists are one of Lisp languages' major data structures, and Lisp source code is itself made up of lists.",
        "frame": [
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "As a result, Lisp programs can manipulate source code as a data structure, giving rise to the macro systems that allow programmers to create new syntax or even new domain-specific languages embedded in Lisp.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The interchangeability of code and data also gives Lisp its instantly recognizable syntax.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "All program code is written as s-expressions, or parenthesized lists.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A function call or syntactic form is written as a list with the function or operator's name first, and the arguments following; for instance, a function f that takes three arguments might be called using (f arg1 arg2 arg3).",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "take.v",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Lisp was invented by John McCarthy in 1958 while he was at the Massachusetts Institute of Technology (MIT).",
        "frame": [
            {
                "LU": "invent.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "institute.n",
                "Frame": "Locale_by_use"
            }
        ]
    },
    {
        "text": "McCarthy published its design in a paper in Communications of the ACM in 1960, entitled \"Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I\" (\"Part II\" was never published).",
        "frame": [
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            }
        ]
    },
    {
        "text": "He showed that with a few simple operators and a notation for functions, one can build a Turing-complete language for algorithms.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Information Processing Language was the first AI language, from 1955 or 1956, and already included many of the concepts, such as list-processing and recursion, which came to be used in Lisp.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "McCarthy's original notation used bracketed \"M-expressions\" that would be translated into S-expressions.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "As an example, the M-expression car[cons[A,B]] is equivalent to the S-expression (car (cons A B)).",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "Once Lisp was implemented, programmers rapidly chose to use S-expressions, and M-expressions were abandoned.",
        "frame": [
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "rapidly.adv",
                "Frame": "Speed_description"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "abandon.v",
                "Frame": "Activity_stop"
            }
        ]
    },
    {
        "text": "M-expressions surfaced again with short-lived attempts of MLISP by Horace Enea and CGOL by Vaughan Pratt.",
        "frame": [
            {
                "LU": "surface.v",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            }
        ]
    },
    {
        "text": "Lisp was first implemented by Steve Russell on an IBM 704 computer.",
        "frame": [
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Russell had read McCarthy's paper, and realized (to McCarthy's surprise) that the Lisp eval function could be implemented in machine code.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "surprise.n",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The result was a working Lisp interpreter which could be used to run Lisp programs, or more properly, 'evaluate Lisp expressions.",
        "frame": [
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Two assembly language macros for the IBM 704 became the primitive operations for decomposing lists: car (Contents of the Address part of Register number) and cdr (Contents of the Decrement part of Register number).",
        "frame": [
            {
                "LU": "assembly.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "From the context, it is clear that the term \"Register\" is used here to mean \"Memory Register\", nowadays called \"Memory Location\".",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "here.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "Lisp dialects still use car and cdr ( /kr/ and /kdr/) for the operations that return the first item in a list and the rest of the list respectively.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "The first complete Lisp compiler, written in Lisp, was implemented in 1962 by Tim Hart and Mike Levin at MIT.",
        "frame": [
            {
                "LU": "complete.a",
                "Frame": "Process_completed_state"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This compiler introduced the Lisp model of incremental compilation, in which compiled and interpreted functions can intermix freely.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The language used in Hart and Levin's memo is much closer to modern Lisp style than McCarthy's earlier code.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "earlier.a",
                "Frame": "Temporal_subregion"
            }
        ]
    },
    {
        "text": "Lisp was a difficult system to implement with the compiler techniques and stock hardware of the 1970s.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            },
            {
                "LU": "stock.n",
                "Frame": "Store"
            }
        ]
    },
    {
        "text": "Garbage collection routines, developed by then-MIT graduate student Daniel Edwards, made it practical to run Lisp on general-purpose computing systems, but efficiency was still a problem.",
        "frame": [
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "graduate.n",
                "Frame": "Activity_finish"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "This led to the creation of Lisp machines: dedicated hardware for running Lisp environments and programs.",
        "frame": [
            {
                "LU": "lead.v",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Advances in both computer hardware and compiler technology soon made Lisp machines obsolete.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "During the 1980s and 1990s, a great effort was made to unify the work on new Lisp dialects (mostly successors to Maclisp like ZetaLisp and NIL (New Implementation of Lisp)) into a single language.",
        "frame": [
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The new language, Common Lisp, was somewhat compatible with the dialects it replaced (the book Common Lisp the Language notes the compatibility of various constructs).",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "In 1994, ANSI published the Common Lisp standard, \"ANSI X3.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "226-1994 Information Technology Programming Language Common Lisp.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "Connection to Artificial Intelligence Since its inception, Lisp was closely connected with the artificial intelligence research community, especially on PDP-10 systems.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Lisp was used as the implementation of the programming language Micro Planner which was used in the famous AI system SHRDLU.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "In the 1970s, as AI research spawned commercial offshoots, the performance of existing Lisp systems became a growing issue.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "offshoot.n",
                "Frame": "Offshoot"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "become.v",
                "Frame": "Becoming"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            }
        ]
    },
    {
        "text": "Lisp was the first homoiconic programming language: the primary representation of program code is the same type of list structure that is also used for the main data structures.",
        "frame": [
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "As a result, Lisp functions can be manipulated, altered or even created within a Lisp program without extensive parsing or manipulation of binary machine code.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "alter.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This is generally considered one of the primary advantages of the language with regard to its expressive power, and makes the language amenable to metacircular evaluation.",
        "frame": [
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "regard.n",
                "Frame": "Categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            }
        ]
    },
    {
        "text": "The ubiquitous if-then-else structure, now taken for granted as an essential element of any programming language, was invented by McCarthy for use in Lisp, where it saw its first appearance in a more general form (the cond structure).",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "It was inherited by ALGOL, which popularized it.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Lisp deeply influenced Alan Kay, the leader of the research on Smalltalk, and then in turn Lisp was influenced by Smalltalk, by adopting object-oriented programming features (classes, instances, etc.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "turn.n",
                "Frame": "Becoming"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": ") in the late 1970s.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "late.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "Largely because of its resource requirements with respect to early computing hardware (including early microprocessors), Lisp did not become as popular outside of the AI community as Fortran and the ALGOL-descended C language.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "outside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Newer languages such as Java and Python have incorporated some limited versions of some of the features of Lisp, but are necessarily unable to bring the coherence and synergy of the full concepts found in Lisp.",
        "frame": [
            {
                "LU": "incorporate.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "unable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "bring.v",
                "Frame": "Causation"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Because of its suitability to ill-defined, complex, and dynamic applications, Lisp is currently enjoying some resurgence of popular interest.",
        "frame": [
            {
                "LU": "suitability.n",
                "Frame": "Suitability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "enjoy.v",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Symbolic expressions Lisp is an expression-oriented language.",
        "frame": []
    },
    {
        "text": "Unlike most other languages, no distinction is made between \"expressions\" and \"statements\"; all code and data are written as expressions.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "When an expression is evaluated, it produces a value (in Common Lisp, possibly multiple values), which then can be embedded into other expressions.",
        "frame": [
            {
                "LU": "produce.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "possibly.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Each value can be any data type.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "McCarthy's 1958 paper introduced two types of syntax: S-expressions (Symbolic expressions, also called \"sexps\"), which mirror the internal representation of code and data; and M-expressions (Meta Expressions), which express functions of S-expressions.",
        "frame": [
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "M-expressions never found favor, and almost all Lisps today use S-expressions to manipulate both code and data.",
        "frame": [
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "favor.v",
                "Frame": "Partiality"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "manipulate.v",
                "Frame": "Manipulate_into_doing"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "The use of parentheses is Lisp's most immediately obvious difference from other programming language families.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "obvious.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "family.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "As a result, students have long given Lisp nicknames such as Lost In Stupid Parentheses, or Lots of Irritating Superfluous Parentheses.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "nickname.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "However, the S-expression syntax is also responsible for much of Lisp's power: the syntax is extremely regular, which facilitates manipulation by computer.",
        "frame": [
            {
                "LU": "responsible.a",
                "Frame": "Causation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "However, the syntax of Lisp is not limited to traditional parentheses notation.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            }
        ]
    },
    {
        "text": "It can be extended to include alternative notations.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "alternative.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "XMLisp, for instance, is a Common Lisp extension that employs the metaobject-protocol to integrate S-expressions with the Extensible Markup Language (XML).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "The reliance on expressions gives the language great flexibility.",
        "frame": [
            {
                "LU": "reliance.n",
                "Frame": "Reliance"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Because Lisp functions are themselves written as lists, they can be processed exactly like data.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "This allows easy writing of programs which manipulate other programs (metaprogramming).",
        "frame": [
            {
                "LU": "easy.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Many Lisp dialects exploit this feature using macro systems, which enables extension of the language almost without limit.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "enable.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Lists A Lisp list is written with its elements separated by whitespace, and surrounded by parentheses.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "separate.v",
                "Frame": "Differentiation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "surround.v",
                "Frame": "Surrounding"
            }
        ]
    },
    {
        "text": "For example, (1 2 foo) is a list whose elements are three atoms: the values 1, 2, and foo.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "These values are implicitly typed: they are respectively two integers and a Lisp-specific data type called a \"symbol\", and do not have to be declared as such.",
        "frame": [
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The empty list () is also represented as the special atom nil.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "This is the only entity in Lisp which is both an atom and a list.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Expressions are written as lists, using prefix notation.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The first element in the list is the name of a form, i.",
        "frame": [
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "form.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": ", a function, operator, macro, or \"special operator\" (see below.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            }
        ]
    },
    {
        "text": "The remainder of the list are the arguments.",
        "frame": [
            {
                "LU": "remainder.n",
                "Frame": "Left_to_do"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "For example, the function list returns its arguments as a list, so the expression (list '1 '2 'foo) evaluates to the list (1 2 foo).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "The \"quote\" before the arguments in the preceding example is a \"special operator\" which prevents the quoted arguments from being evaluated (not strictly necessary for the numbers, since 1 evaluates to 1, etc.",
        "frame": [
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "prevent.v",
                "Frame": "Thwarting"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Any unquoted expressions are recursively evaluated before the enclosing expression is evaluated.",
        "frame": []
    },
    {
        "text": "For example, (list 1 2 (list 3 4)) evaluates to the list (1 2 (3 4)).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Note that the third argument is a list; lists can be nested.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Operators Arithmetic operators are treated similarly.",
        "frame": [
            {
                "LU": "treat.v",
                "Frame": "Medical_intervention"
            }
        ]
    },
    {
        "text": "The expression (+ 1 2 3 4) evaluates to 10.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The equivalent under infix notation would be \"1 + 2 + 3 + 4\".",
        "frame": [
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Arithmetic operators in Lisp are variadic (or n-ary), able to take any number of arguments.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "\"Special operators\" (sometimes called \"special forms\") provide Lisp's control structure.",
        "frame": [
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "For example, the special operator if takes three arguments.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "If the first argument is non-nil, it evaluates to the second argument; otherwise, it evaluates to the third argument.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Thus, the expression (if nil (list 1 2 \"foo\") (list 3 4 \"bar\")) evaluates to (3 4 \"bar\").",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Of course, this would be more useful if a non-trivial expression had been substituted in place of nil.",
        "frame": [
            {
                "LU": "course.n",
                "Frame": "Roadways"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "Lambda Expressions Another special operator, lambda, is used to bind variables to values which are then evaluated within an expression.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            }
        ]
    },
    {
        "text": "This operator is also used to create functions: the arguments to lambda are a list of arguments, and the expression or expressions to which the function evaluates (the returned value is the value of the last expression that is evaluated).",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "The expression (lambda (arg) (+ arg 1)) evaluates to a function that, when applied, takes one argument, binds it to arg and returns the number one greater than that argument.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "take.v",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Lambda expressions are treated no differently from named functions; they are invoked the same way.",
        "frame": [
            {
                "LU": "treat.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Therefore, the expression ((lambda (arg) (+ arg 1)) 5) evaluates to 6.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Atoms In the original LISP there were two fundamental data types: atoms and lists.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A list was a finite ordered sequence of elements, where each element is in itself either an atom or a list, and an atom was a number or a symbol.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "A symbol was essentially a unique named item, written as an Alphanumeric string in source code, and used either as a variable name or as a data item in symbolic processing.",
        "frame": [
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "For example, the list (FOO (BAR 1) 2) contains three elements: the symbol FOO, the list (BAR 1), and the number 2.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "The essential difference between atoms and lists was that atoms were immutable and unique.",
        "frame": [
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            }
        ]
    },
    {
        "text": "Two atoms that appeared in different places in source code but were written in exactly the same way represented the same object, whereas each list was a separate object that could be altered independently of other lists and could be distinguished from other lists by comparison operators.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "appear.v",
                "Frame": "Give_impression"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "alter.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "As more data types were introduced in later Lisp dialects, and programming styles evolved, the concept of an atom lost importance.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Many dialects still retained the predicate atom for legacy compatibility, defining it true for any object which is not a cons.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "legacy.n",
                "Frame": "Causation"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Conses and Lists A Lisp list is a singly linked list.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Each cell of this list is called a cons (in Scheme, a pair), and is composed of two pointers, called the car and cdr.",
        "frame": [
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "These are equivalent to the data and next fields discussed in the article linked list, respectively.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "discuss.v",
                "Frame": "Speak_on_topic"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "link.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Of the many data structures that can be built out of cons cells, one of the most basic is called a proper list.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "proper.a",
                "Frame": "Proper_reference"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A proper list is either the special nil (empty list) symbol, or a cons in which the car points to a datum (which may be another cons structure, such as a list), and the cdr points to another proper list.",
        "frame": [
            {
                "LU": "proper.a",
                "Frame": "Proper_reference"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "proper.a",
                "Frame": "Proper_reference"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "If a given cons is taken to be the head of a linked list, then its car points to the first element of the list, and its cdr points to the rest of the list.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "For this reason, the car and cdr functions are also called first and rest when referring to conses which are part of a linked list (rather than, say, a tree).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "refer.v",
                "Frame": "Sending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Thus, a Lisp list is not an atomic object, as an instance of a container class in C++ or Java would be.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "container.n",
                "Frame": "Containers"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "A list is nothing more than an aggregate of linked conses.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A variable which refers to a given list is simply a pointer to the first cons in the list.",
        "frame": [
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Traversal of a list can be done by \"cdring down\" the list; that is, taking successive cdrs to visit each cons of the list; or by using any of a number of higher-order functions to map a function over a list.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "take.v",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "successive.a",
                "Frame": "Sequence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "visit.v",
                "Frame": "Visiting"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Because conses and lists are so universal in Lisp systems, it is a common misconception that they are Lisp's only data structures.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "In fact, all but the most simplistic Lisps have other data structures  such as vectors (arrays), hash tables, structures, and so forth.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "so.adv",
                "Frame": "Sufficiency"
            }
        ]
    },
    {
        "text": "S-expressions Represent Lists Parenthesized S-expressions represent linked list structures.",
        "frame": [
            {
                "LU": "represent.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "link.v",
                "Frame": "Connectors"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "There are several ways to represent the same list as an S-expression.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A cons can be written in dotted-pair notation as (a.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "b), where a is the car and b the cdr.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "A longer proper list might be written (a.",
        "frame": [
            {
                "LU": "proper.a",
                "Frame": "Proper_reference"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "might.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "nil)))) in dotted-pair notation.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This is conventionally abbreviated as (a b c d) in list notation.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "An improper list may be written in a combination of the two  as (a b c.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "combination.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "d) for the list of three conses whose last cdr is d (i.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": ", the list (a.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "(c.",
        "frame": []
    },
    {
        "text": "d))) in fully specified form).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "List-Processing Procedures Lisp provides many built-in procedures for accessing and controlling lists.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "access.v",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "control.v",
                "Frame": "Control"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Lists can be created directly with the list procedure, which takes any number of arguments, and returns the list of these arguments.",
        "frame": [
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "(list 1 2 'a 3) ;Output: (1 2 a 3) (list 1 '(2 3) 4) ;Output: (1 (2 3) 4) Because of the way that lists are constructed from cons pairs, the [[cons]] procedure can be used to add an element to the front of a list.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "front.n",
                "Frame": "Front_for"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Note that the cons procedure is asymmetric in how it handles list arguments, because of how lists are constructed.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "procedure.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            }
        ]
    },
    {
        "text": "(cons 1 '(2 3)) ;Output: (1 2 3) (cons '(1 2) '(3 4)) ;Output: ((1 2) 3 4) The [[append]] procedure appends two (or more) lists to one another.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Because Lisp lists are linked lists, appending two lists has asymptotic time complexity O(n) (append '(1 2) '(3 4)) ;Output: (1 2 3 4) (append '(1 2 3) '() '(a) '(5 6)) ;Output: (1 2 3 a 5 6) Shared Structure Lisp lists, being simple linked lists, can share structure with one another.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "That is to say, two lists can have the same tail, or final sequence of conses.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "For instance, after the execution of the following Common Lisp code: (setf foo (list 'a 'b 'c)) (setf bar (cons 'x (cdr foo))) the lists foo and bar are (a b c) and (x b c) respectively.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "However, the tail (b c) is the same structure in both lists.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "It is not a copy; the cons cells pointing to b and c are in the same memory locations for both lists.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "point.v",
                "Frame": "Adducing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Sharing structure rather than copying can give a dramatic performance improvement.",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "rather.adv",
                "Frame": "Hedging"
            },
            {
                "LU": "copy.v",
                "Frame": "Imitating"
            },
            {
                "LU": "improvement.n",
                "Frame": "Improvement_or_decline"
            }
        ]
    },
    {
        "text": "However, this technique can interact in undesired ways with functions that alter lists passed to them as arguments.",
        "frame": [
            {
                "LU": "technique.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            }
        ]
    },
    {
        "text": "Altering one list, such as by replacing the c with a goose, will affect the other: (setf (third foo) 'goose) This changes foo to (a b goose), but thereby also changes bar to (x b goose)  a possibly unexpected result.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "possibly.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "This can be a source of bugs, and functions which alter their arguments are documented as destructive for this very reason.",
        "frame": [
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "destructive.a",
                "Frame": "Destroying"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "Aficionados of functional programming avoid destructive functions.",
        "frame": [
            {
                "LU": "avoid.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "destructive.a",
                "Frame": "Destroying"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "In the Scheme dialect, which favors the functional style, the names of destructive functions are marked with a cautionary exclamation point, or \"bang\"such as set-car.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "favor.v",
                "Frame": "Preference"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "(read set car bang), which replaces the car of a cons.",
        "frame": [
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "In the Common Lisp dialect, destructive functions are commonplace; the equivalent of set-car.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "is named rplaca for \"replace car.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "This function is rarely seen however as Common Lisp includes a special facility, setf, to make it easier to define and use destructive functions.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "facility.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "A frequent style in Common Lisp is to write code functionally (without destructive calls) when prototyping, then to add destructive calls as an optimization where it is safe to do so.",
        "frame": [
            {
                "LU": "frequent.a",
                "Frame": "Frequency"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Self-evaluating Forms and Quoting Lisp evaluates expressions which are entered by the user.",
        "frame": []
    },
    {
        "text": "Symbols and lists evaluate to some other (usually, simpler) expression  for instance, a symbol evaluates to the value of the variable it names; (+ 2 3) evaluates to 5.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "However, most other forms evaluate to themselves: if you enter 5 into Lisp, it returns 5.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Any expression can also be marked to prevent it from being evaluated (as is necessary for symbols and lists).",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "prevent.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "This is the role of the quote special operator, or its abbreviation ' (a single quotation mark).",
        "frame": [
            {
                "LU": "mark.v",
                "Frame": "Sign"
            }
        ]
    },
    {
        "text": "For instance, usually if you enter the symbol foo you will get back the value of the corresponding variable (or an error, if there is no such variable).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "If you wish to refer to the literal symbol, you enter (quote foo) or, usually, 'foo.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "wish.v",
                "Frame": "Desiring"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "Both Common Lisp and Scheme also support the backquote operator (known as quasiquote in Scheme), entered with the ` character.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "This is almost the same as the plain quote, except it allows expressions to be evaluated and their values interpolated into a quoted list with the comma and comma-at operators.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "If the variable snue has the value (bar baz) then `(foo ,snue) evaluates to (foo (bar baz)), while `(foo ,@snue) evaluates to (foo bar baz).",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The backquote is most frequently used in defining macro expansions.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "expansion.n",
                "Frame": "Expansion"
            }
        ]
    },
    {
        "text": "Self-evaluating forms and quoted forms are Lisp's equivalent of literals.",
        "frame": [
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "It may be possible to modify the values of (mutable) literals in program code.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "For instance, if a function returns a quoted form, and the code that calls the function modifies the form, this may alter the behavior of the function on subsequent iterations.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "modify.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "subsequent.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "(defun should-be-constant () '(one two three)) (let ((stuff (should-be-constant))) (setf (third stuff) 'bizarre))\t\t; bad.",
        "frame": [
            {
                "LU": "let.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "stuff.v",
                "Frame": "Placing"
            },
            {
                "LU": "stuff.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "(should-be-constant)\t; returns (one two bizarre) Modifying a quoted form like this is generally considered bad style, and is defined by ANSI Common Lisp as erroneous (resulting in \"undefined\" behavior in compiled files, because the file-compiler can coalesce similar constants, put them in write-protected memory, etc.",
        "frame": [
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "result.v",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Lisp's formalization of quotation has been noted by Douglas Hofstadter (in Gdel, Escher, Bach) and others as an example of the philosophical idea of self-reference.",
        "frame": [
            {
                "LU": "note.v",
                "Frame": "Statement"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Scope and Closure The modern Lisp family splits over the use of dynamic or static (aka lexical) scope.",
        "frame": [
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "family.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "scope.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "Clojure, Common Lisp and Scheme make use of static scoping by default, while Newlisp, Picolisp and the embedded languages in Emacs and AutoCAD use dynamic scoping.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "List Structure of Program Code A fundamental distinction between Lisp and other languages is that in Lisp, the textual representation of a program is simply a human-readable description of the same internal data structures (linked lists, symbols, number, characters, etc.",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": ") as would be used by the underlying Lisp system.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Lisp macros operate on these structures.",
        "frame": [
            {
                "LU": "operate.v",
                "Frame": "Being_in_operation"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Because Lisp code has the same structure as lists, macros can be built with any of the list-processing functions in the language.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In short, anything that Lisp can do to a data structure, Lisp macros can do to code.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In contrast, in most other languages, the parser's output is purely internal to the language implementation and cannot be manipulated by the programmer.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Macros in C, for instance, operate on the level of the preprocessor, before the parser is invoked, and cannot re-structure the program code in the way Lisp macros can.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "operate.v",
                "Frame": "Being_in_operation"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "In simplistic Lisp implementations, this list structure is directly interpreted to run the program; a function is literally a piece of list structure which is traversed by the interpreter in executing it.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "However, most actual Lisp systems (including all conforming Common Lisp systems) also include a compiler.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "conform.v",
                "Frame": "Compliance"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "The compiler translates list structure into machine code or bytecode for execution.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Evaluation and the ReadEvalPrint Loop Lisp languages are frequently used with an interactive command line, which may be combined with an integrated development environment.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "The user types in expressions at the command line, or directs the IDE to transmit them to the Lisp system.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Lisp reads the entered expressions, evaluates them, and prints the result.",
        "frame": [
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "For this reason, the Lisp command line is called a \"readevalprint loop\", or REPL.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "The basic operation of the REPL is as follows.",
        "frame": [
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "This is a simplistic description which omits many elements of a real Lisp, such as quoting and macros.",
        "frame": [
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "The read function accepts textual S-expressions as input, and parses them into an internal data structure.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "For instance, if you type the text (+ 1 2) at the prompt, read translates this into a linked list with three elements: the symbol +, the number 1, and the number 2.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "prompt.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "It so happens that this list is also a valid piece of Lisp code; that is, it can be evaluated.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "happen.v",
                "Frame": "Event"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "This is because the car of the list names a functionthe addition operation.",
        "frame": [
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Note that a foo will be read as a single symbol.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "123 will be read as the number 123.",
        "frame": [
            {
                "LU": "will.v",
                "Frame": "Giving"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "\"123\" will be read as the string \"123\".",
        "frame": [
            {
                "LU": "string.n",
                "Frame": "Connectors"
            }
        ]
    },
    {
        "text": "The eval function evaluates the data, returning zero or more other Lisp data as a result.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Evaluation does not have to mean interpretation; some Lisp systems compile every expression to native machine code.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "native.a",
                "Frame": "Indigenous_origin"
            }
        ]
    },
    {
        "text": "It is simple, however, to describe evaluation as interpretation: To evaluate a list whose car names a function, eval first evaluates each of the arguments given in its cdr, then applies the function to the arguments.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "apply.v",
                "Frame": "Using"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "In this case, the function is addition, and applying it to the argument list (1 2) yields the answer 3.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "apply.v",
                "Frame": "Using"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "This is the result of the evaluation.",
        "frame": [
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            }
        ]
    },
    {
        "text": "The symbol foo evaluates to the value of the symbol foo.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Data like the string \"123\" evaluates to the same string.",
        "frame": [
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            }
        ]
    },
    {
        "text": "The list (quote (1 2 3)) evaluates to the list (1 2 3).",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "It is the job of the print function to represent output to the user.",
        "frame": [
            {
                "LU": "print.v",
                "Frame": "Text_creation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "For a simple result such as 3 this is trivial.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "An expression which evaluated to a piece of list structure would require that print traverse the list and print it out as an S-expression.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "print.v",
                "Frame": "Text_creation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "To implement a Lisp REPL, it is necessary only to implement these three functions and an infinite-loop function.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "(Naturally, the implementation of eval will be complicated, since it must also implement all special operators like if or lambda.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "This done, a basic REPL itself is but a single line of code: (loop (print (eval (read)))).",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "print.v",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "The Lisp REPL typically also provides input editing, an input history, error handling and an interface to the debugger.",
        "frame": [
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Lisp is usually evaluated eagerly.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "In Common Lisp, arguments are evaluated in applicative order ('leftmost innermost'), while in Scheme order of arguments is undefined, leaving room for optimization by a compiler.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Control Structures Lisp originally had very few control structures, but many more were added during the language's evolution.",
        "frame": [
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "(Lisp's original conditional operator, cond, is the precursor to later if-then-else structures.",
        "frame": [
            {
                "LU": "precursor.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Programmers in the Scheme dialect often express loops using tail recursion.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "express.v",
                "Frame": "Encoding"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Scheme's commonality in academic computer science has led some students to believe that tail recursion is the only, or the most common, way to write iterations in Lisp, but this is incorrect.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "lead.v",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "All frequently seen Lisp dialects have imperative-style iteration constructs, from Scheme's do loop to Common Lisp's complex loop expressions.",
        "frame": [
            {
                "LU": "frequently.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "Moreover, the key issue that makes this an objective rather than subjective matter is that Scheme makes specific requirements for the handling of tail calls, and consequently the reason that the use of tail recursion is generally encouraged for Scheme is that the practice is expressly supported by the language definition itself.",
        "frame": [
            {
                "LU": "key.a",
                "Frame": "Importance"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "call.n",
                "Frame": "Request"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "By contrast, ANSI Common Lisp does not require the optimization commonly referred to as tail call elimination.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "call.n",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "Consequently, the fact that tail recursive style as a casual replacement for the use of more traditional iteration constructs (such as do, dolist or loop) is discouraged in Common Lisp is not just a matter of stylistic preference, but potentially one of efficiency (since an apparent tail call in Common Lisp may not compile as a simple jump) and program correctness (since tail recursion may increase stack use in Common Lisp, risking stack overflow).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "risk.v",
                "Frame": "Being_at_risk"
            }
        ]
    },
    {
        "text": "Some Lisp control structures are special operators, equivalent to other languages' syntactic keywords.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Expressions using these operators have the same surface appearance as function calls, but differ in that the arguments are not necessarily evaluatedor, in the case of an iteration expression, may be evaluated more than once.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "In contrast to most other major programming languages, Lisp allows the programmer to implement control structures using the language itself.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Several control structures are implemented as Lisp macros, and can even be macro-expanded by the programmer who wants to know how they work.",
        "frame": [
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Both Common Lisp and Scheme have operators for non-local control flow.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "flow.v",
                "Frame": "Fluidic_motion"
            }
        ]
    },
    {
        "text": "The differences in these operators are some of the deepest differences between the two dialects.",
        "frame": [
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Scheme supports re-entrant continuations using the call/cc procedure, which allows a program to save (and later restore) a particular place in execution.",
        "frame": [
            {
                "LU": "support.v",
                "Frame": "Evidence"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "restore.v",
                "Frame": "Rejuvenation"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Common Lisp does not support re-entrant continuations, but does support several ways of handling escape continuations.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "handle.v",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "Frequently, the same algorithm can be expressed in Lisp in either an imperative or a functional style.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            }
        ]
    },
    {
        "text": "As noted above, Scheme tends to favor the functional style, using tail recursion and continuations to express control flow.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "note.v",
                "Frame": "Statement"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "favor.v",
                "Frame": "Preference"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "flow.v",
                "Frame": "Fluidic_motion"
            }
        ]
    },
    {
        "text": "However, imperative style is still quite possible.",
        "frame": [
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "The style preferred by many Common Lisp programmers may seem more familiar to programmers used to structured languages such as C, while that preferred by Schemers more closely resembles pure-functional languages such as Haskell.",
        "frame": [
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "familiar.a",
                "Frame": "Familiarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            }
        ]
    },
    {
        "text": "Because of Lisp's early heritage in list processing, it has a wide array of higher-order functions relating to iteration over sequences.",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "array.n",
                "Frame": "Diversity"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "relate.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In many cases where an explicit loop would be needed in other languages (like a for loop in C) in Lisp the same task can be accomplished with a higher-order function.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "case.n",
                "Frame": "Instance"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "(The same is true of many functional programming languages.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "A good example is a function which in Scheme is called map and in Common Lisp is called mapcar.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "Given a function and one or more lists, mapcar applies the function successively to the lists' elements in order, collecting the results in a new list: (mapcar #'+ '(1 2 3 4 5) '(10 20 30 40 50)) This applies the + function to each corresponding pair of list elements, yielding the result (11 22 33 44 55).",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "apply.v",
                "Frame": "Using"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "collect.v",
                "Frame": "Commerce_collect"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "apply.v",
                "Frame": "Using"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "yield.v",
                "Frame": "Surrendering_possession"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Examples Here are examples of Common Lisp code.",
        "frame": [
            {
                "LU": "example.n",
                "Frame": "Instance"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "The basic \"Hello world\" program: (print \"Hello world\") As the reader may have noticed from the above discussion, Lisp syntax lends itself naturally to recursion.",
        "frame": [
            {
                "LU": "print.v",
                "Frame": "Text_creation"
            },
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "notice.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "discussion.n",
                "Frame": "Discussion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Mathematical problems such as the enumeration of recursively defined sets are simple to express in this notation.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "set.n",
                "Frame": "Placing"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Evaluate a number's factorial: (defun factorial (n) (if (<= n 1) 1 (* n (factorial (- n 1))))) An alternative implementation, often faster than the previous version if the Lisp system has tail recursion optimization: (defun factorial (n &optional (acc 1)) (if (<= n 1) acc (factorial (- n 1) (* acc n)))) Contrast with an iterative version which uses Common Lisp's loop macro: (defun factorial (n) (loop for i from 1 to n for fac = 1 then (* fac i) finally (return fac))) The following function reverses a list.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "alternative.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "finally.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "(Lisp's built-in reverse function does the same thing.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": ") (defun -reverse (list) (let ((return-value '())) (dolist (e list) (push e return-value)) return-value)) Object Systems Various object systems and models have been built on top of, alongside, or into Lisp, including: The Common Lisp Object System, CLOS, is an integral part of ANSI Common Lisp.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "let.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "top.n",
                "Frame": "Occupy_rank"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "CLOS descended from New Flavors and CommonLOOPS.",
        "frame": [
            {
                "LU": "descend.v",
                "Frame": "Motion_directional"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "ANSI Common Lisp was the first standardized object-oriented programming language (1994, ANSI X3J13).",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "ObjectLisp or Object Lisp, used by Lisp Machines Incorporated and early versions of Macintosh Common Lisp LOOPS (Lisp Object-Oriented Programming System) and the later CommonLOOPS Flavors, built at MIT, and its descendant New Flavors (developed by Symbolics).",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "later.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "descendant.n",
                "Frame": "Kinship"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            }
        ]
    },
    {
        "text": "KR (short for Knowledge Representation), a constraints-based object system developed to aid the writing of Garnet, a GUI library for Common Lisp.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "KEE used an object system called UNITS and integrated it with an inference engine and a truth maintenance system (ATMS).",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "inference.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "maintenance.n",
                "Frame": "Activity_ongoing"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Conceptive C If something is better programmed in C or Objective C, that is fine Conceptive C, is for handling higher level concepts.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "handle.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "So in Conceptive C we have: concept\tobject that can change at run time idea (id)\tpointer to concept meme\t\tapply function to concept memory data So we leave Objective C syntax as it is and use normal inheritance and classes.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "class.n",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "The only difference is: id\tobject;\t\t// would define an object idea\tconcept;\t// would define a concept Concepts will work differently to objects but can be mixed in the same program.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "will.v",
                "Frame": "Documents"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Using Concepts To use a Concept is the same as using an Object in Objective-C.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Concepts can be mixed with Objects and C language can be used as  Conceptive-C is idea concept; [concept \tmeme: argument]; Syntax Conceptive-C is a thin layer on top of Objective-C, and moreover is a strict superset of C; it is possible to compile any C program with an Conceptive-C compiler, and to freely include C code within an Conceptive-C class.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "thin.a",
                "Frame": "Change_of_consistency"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "top.n",
                "Frame": "Occupy_rank"
            },
            {
                "LU": "strict.a",
                "Frame": "Strictness"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            }
        ]
    },
    {
        "text": "The syntax for implementation and classes is the same as in Objective-C.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "class.n",
                "Frame": "Categorization"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It should be possible to use an idea in a method that uses an object by: [object\t  method: (id) concept];  // The pointer to concept is passed to object Messages The Conceptive-C model of conceptual programming is based on message passing to concept instances.",
        "frame": [
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "pass.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "In Conceptive-C you send a message to a concept or an Object.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In some ways, Im still not sure if there is a language, it may be Conceptual and all be written in Objective-C.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "By Conceptual, I mean abstract idea, not in need of implementaion.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            }
        ]
    },
    {
        "text": "Which would make this really a book about using Objective-C for AI programming.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "I mean, isnt this all just Objective C.",
        "frame": []
    },
    {
        "text": "Wouldnt it be better to just define a concept as an Object and make a library that adds new classes that deals with ideas and concepts.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Interfaces and Implementations Conceptive-C requires that the interface and implementation of a class be in separately declared code blocks.",
        "frame": [
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "block.n",
                "Frame": "Hindering"
            }
        ]
    },
    {
        "text": "By convention, developers place the interface in a header file and the implementation in a code file.",
        "frame": [
            {
                "LU": "place.v",
                "Frame": "Placing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "The header files, normally suffixed.",
        "frame": []
    },
    {
        "text": "h, are similar to C header files while the implementation (method) files, normally suffixed.",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "m, can be very similar to C code files.",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "No change to files same as used in Objective-C.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Interface The interface of a class is usually defined in a header file.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "A common convention is to name the header file after the name of the class, e.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "name.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "Ball.",
        "frame": []
    },
    {
        "text": "h would contain the interface for the class Ball.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "The use of interfaces is exactly the same as in Objective-C.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Instantiation Once an Conceptive-C class is written, it can be instantiated.",
        "frame": [
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "This is done by allocating an uninitialized instance of the class (an concept).",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "An concept does not need to be initialized.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Instantiation with the default, no-parameter initializer: MyConcept *c = [MyConcept new]; Dynamic Typing Conceptive-C, like Smalltalk, can use dynamic typing: an object can be sent a message that is not specified in its interface.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This can allow for increased flexibility, as it allows an object to \"capture\" a message and send the message to a different object that can respond to the message appropriately, or likewise send the message on to another object.",
        "frame": [
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Changes from Objective-C Really the only real change is the addition of an Idea, which is a pointer to a Concept.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Concepts are abstract Objects used for implementing thinking machines.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Maybe I said its a small change, but it will work together with C and Objective C.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "So does adding Idea to our compiler change much.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "How do we implement it.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Right now, Im not sure.",
        "frame": [
            {
                "LU": "right.adv",
                "Frame": "Morality_evaluation"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "I may be doing this all wrong.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "wrong.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "As of now Concepts are an unknown.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "unknown.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "I dont know how they are implemented or what they can do yet.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "This is KISS (Keep it simple stupid) I think all I really need to define extra is a Concept and an Idea, a pointer to a Concept.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The Concept an idea points to can be changed at runtime time as the Concept is updated or renewed.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "renew.v",
                "Frame": "Activity_resume"
            }
        ]
    },
    {
        "text": "That is when our program learns something new.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "when.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "learn.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "new.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "So how does it do that.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "And what exactly are we doing.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Well we are using the compiler at run-time.",
        "frame": [
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "When our program decides it wants to learn something it has various options.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The simple option is write data to a data file, that can be read at startup or while it is running.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "Another option would be to write to a concept memory that would work similarly to the way people remember things.",
        "frame": [
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "The main problem with that is, I havent implemented conceptual memory yet.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "Machine Intelligence The option that I am talking about for Machine Learning is to run the compiler and compile new code to deal with the problem in the future.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "We can either redefine code that we have or write new code for a new problem and add it too our program.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "In FORTH language a programmer always has access to the compiler even when a program is running.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "So I m proposing that we steal this functionality and add it to a C compiler.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "propose.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "We are still going to have the problem of how do we write code that writes code.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "And we dont want to it to be able to write stuff that crashes our program, so we will need limits to what can be re-written.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "stuff.v",
                "Frame": "Placing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "crash.v",
                "Frame": "Impact"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "You dont give a child a loaded gun to play with, you might give him a toy gun.",
        "frame": [
            {
                "LU": "child.n",
                "Frame": "People_by_age"
            },
            {
                "LU": "gun.n",
                "Frame": "Weapon"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "gun.n",
                "Frame": "Weapon"
            }
        ]
    },
    {
        "text": "New Ideas Some of the things that I think will make it into Conceptive C.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Conceptual Memory is an abstract data storage with no type and  no fixed size.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "It grows and shrinks, doing automatic garbage collection as needed, like a sponge.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "A Cyberspace Computer or Virtual Computer is an abstract computer, not physical.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "It may have a defined set of registers, an address space, machine opcodes and a clock.",
        "frame": [
            {
                "LU": "address.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "It can be given a program to run.",
        "frame": [
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "It will input and out put through defined streams, portals or bitmaps.",
        "frame": [
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "A Cell is a Conceptual Cyberspace Computer, that can copy itself and run multiple copies of itself on multiple processors.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "It can send messages to other cells, concepts or objects.",
        "frame": [
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "A Word is a Concept that understands the use of itself in a sentence.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "A Sentence is a collection of words, it can be a fixed list or just a group.",
        "frame": [
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "group.n",
                "Frame": "Organization"
            }
        ]
    },
    {
        "text": "An Idea is a pointer to a Concept.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A Concept is an Object that can change itself at run time.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "A Mind Concept or Intelligence is a collection of Concepts used for thinking.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "A Dictionary Concept is a list of Words with definitions and types.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A Wikipedia or Wiki Concept is a Knowledge Database.",
        "frame": []
    },
    {
        "text": "A World Map is map of the World used to store Knowledge.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "A Body Concept is an group of Objects controlled by a Mind.",
        "frame": [
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "A Concept Bot is a question and answer conversation Bot able to access a Dictionary or Wikipedia or search the Internet.",
        "frame": [
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            }
        ]
    },
    {
        "text": "A Concept Map is a linked list of Concepts.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "A Clock Concept is something that provides a time code or can trigger events.",
        "frame": [
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "A Frame Concept will trigger events on Fame Buffer Events.",
        "frame": [
            {
                "LU": "will.v",
                "Frame": "Giving"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "A Conceptual Portal is used to input and output data to a Concept, the data can be Text, Object, Audio, Video or 2D Graphic Bitmaps or 3D Graphic Wire Frames or Objects.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Conceptual Memory could work as a dictionary, a Wikipedia, a World Map or a Digiverse.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            }
        ]
    },
    {
        "text": "Clock and Frame Concepts could be part of Portals.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Cells could swallow up Virtual Computers.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            }
        ]
    },
    {
        "text": "A Mind could be a Concept Bot.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            }
        ]
    },
    {
        "text": "A Cell has a Mind and a Body.",
        "frame": []
    },
    {
        "text": "So we get Idea, Concept, Memory, Mind, Map, Body, Portal and Cell as the Core Concepts of Conceptive C.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Sufficiency"
            }
        ]
    },
    {
        "text": "Idea An idea is a pointer to a concept.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "I've used the word idea as I am trying to promote the use of concepts and ideas as part of the programming language.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "promote.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "As we are trying to program an intelligence it will help to think of ideas and concepts as the tools to let of think and understand the problem of how do we think about something.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "let.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "In the same way that an id is a pointer to an object in objective-c.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Do we need to cast from an id to an idea.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "id = idea; idea = id; or do we need to use id = (id)idea; idea = (idea)id; This is an implementation issue.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            }
        ]
    },
    {
        "text": "it would really be id object; object MyObject; idea concept; concept MyConcept; // This would instantiate a object but store it in an concept pointer MyConcept = (idea)[[MyObject alloc] init]; or // This would instantiate a concept but store it in an object pointer MyObject = (id)[MyConcept new]; Although you shouldn't really do it the compiler should see them as equivalent pointers and not need a cast.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "cast.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "In the most narrow sense, an idea is just whatever is before the mind when one thinks.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "narrow.a",
                "Frame": "Cause_expansion"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Very often, ideas are constructed as representational images; i.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "images of some object.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "In other contexts, ideas are taken to be concepts, although abstract concepts do not necessarily appear as images.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Many philosophers consider ideas to be a fundamental ontological category of being.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "The capacity to create and understand the meaning of ideas is considered to be an essential and defining feature of human beings.",
        "frame": [
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "human.a",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "In a popular sense, an idea arises in a reflex, spontaneous manner, even without thinking or serious reflection, for example, when we talk about the idea of a person or a place.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "serious.a",
                "Frame": "Importance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Innate and Adventitious Ideas One view on the nature of ideas is that there exist some ideas (called innate ideas) which are so general and abstract, that they could not have arisen as a representation of any object of our perception, but rather were, in some sense, always in the mind before we could learn them.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "learn.v",
                "Frame": "Becoming_aware"
            }
        ]
    },
    {
        "text": "These are distinguished from adventitious ideas which are images or concepts which are accompanied by the judgment that they are caused by some object outside of the mind.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "judgment.n",
                "Frame": "Legal_rulings"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "cause.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "outside.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Another view holds that we only discover ideas in the same way that we discover the real world, from personal experiences.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "The view that humans acquire all or almost all their behavioral traits from nurture (life experiences) is known as tabula rasa (\"blank slate\").",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "acquire.v",
                "Frame": "Getting"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Most of the confusions in the way of ideas arise at least in part from the use of the term \"idea\" to cover both the representation percept and the object of conceptual thought.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            }
        ]
    },
    {
        "text": "This can be illustrated in terms of the doctrines of innate ideas, \"concrete ideas versus abstract ideas\", as well as \"simple ideas versus complex ideas\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Plato Plato was one of the earliest philosophers to provide a detailed discussion of ideas.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "discussion.n",
                "Frame": "Discussion"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "He considered the concept of idea in the realm of metaphysics and its implications for epistemology.",
        "frame": [
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "He asserted that there is a realm of Forms or Ideas, which exist independently of anyone who may have thought of these ideas.",
        "frame": [
            {
                "LU": "assert.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Material things are then imperfect and transient reflections or instantiations of the perfect and unchanging ideas.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "From this it follows that these Ideas are the principal reality (see also idealism).",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "principal.a",
                "Frame": "First_rank"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "In contrast to the individual objects of sense experience, which undergo constant change and flux, Plato held that ideas are perfect, eternal, and immutable.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "change.n",
                "Frame": "Undergo_change"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Consequently, Plato considered that knowledge of material things is not really knowledge; real knowledge can only be had of unchanging ideas.",
        "frame": [
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Ren Descartes Descartes often wrote of the meaning of idea as an image or representation, often but not necessarily \"in the mind\", which was well known in the vernacular.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Despite that Descartes is usually credited with the invention of the non-Platonic use of the term, he at first followed this vernacular use.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "b In his Meditations on First Philosophy he says, \"Some of my thoughts are like images of things, and it is to these alone that the name 'idea' properly belongs.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "He sometimes maintained that ideas were innate and uses of the term idea diverge from the original primary scholastic use.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "He provides multiple non-equivalent definitions of the term, uses it to refer to as many as six distinct kinds of entities, and divides ideas inconsistently into various genetic categories.",
        "frame": [
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "For him knowledge took the form of ideas and philosophical investigation is the deep consideration of these ideas.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "investigation.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "deep.a",
                "Frame": "Dimension"
            },
            {
                "LU": "consideration.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Many times however his thoughts of knowledge and ideas were like those of Plotinus and the Neoplatonists.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "In Neoplatonism, the Intelligence (Nous) is the true first principlethe determinate, referential \"foundation\" (arkhe)of all existents; for it is not a self-sufficient entity like the One, but rather possesses the ability or capacity to contemplate both the One, as its prior, as well as its own thoughts, which Plotinus identifies with the Platonic Ideas or Forms (eide).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "foundation.n",
                "Frame": "Body_decoration"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "possess.v",
                "Frame": "Possession"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "A non-philosophical definition of Nous is good sense (a.",
        "frame": [
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "\"common sense\").",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "Descartes is quoted as saying, \"Of all things, good sense is the most fairly distributed: everyone thinks he is so well supplied with it that even those who are the hardest to satisfy in every other respect never desire more of it than they already have.",
        "frame": [
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "fairly.adv",
                "Frame": "Fairness_evaluation"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "desire.v",
                "Frame": "Desiring"
            }
        ]
    },
    {
        "text": "\"q:Ren Descartes John Locke In striking contrast to Plato's use of idea is that of John Locke.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "strike.v",
                "Frame": "Impact"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "In his Introduction to An Essay Concerning Human Understanding, Locke defines idea as \"that term which, I think, serves best to stand for whatsoever is the object of the understanding when a man thinks, I have used it to express whatever is meant by phantasm, notion, species, or whatever it is which the mind can be employed about in thinking; and I could not avoid frequently using it.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "employ.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "He said he regarded the book necessary to examine our own abilities and see what objects our understandings were, or were not, fitted to deal with.",
        "frame": [
            {
                "LU": "regard.v",
                "Frame": "Topic"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "understanding.n",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "In his philosophy other outstanding figures followed in his footstepsHume and Kant in the 18th century, Arthur Schopenhauer in the 19th century, and Bertrand Russell, Ludwig Wittgenstein, and Karl Popper in the 20th century.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Locke always believed in good sensenot pushing things to extremes and on taking fully into account the plain facts of the matter.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "push.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "take.v",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            }
        ]
    },
    {
        "text": "He considered his common sense ideas \"good-tempered, moderate, and down-to-earth.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "David Hume Hume differs from Locke by limiting idea to the more or less vague mental reconstructions of perceptions, the perceptual process being described as an \"impression.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "limit.v",
                "Frame": "Limitation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Hume shared with Locke the basic empiricist premise that it is only from life experiences (whether their own or others') that humans' knowledge of the existence of anything outside of themselves can be ultimately derived, that they shall carry on doing what they are prompted to do by their emotional drives of varying kinds.",
        "frame": [
            {
                "LU": "share.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "outside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "shall.v",
                "Frame": "Required_event"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "prompt.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "vary.v",
                "Frame": "Similarity"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "In choosing the means to those ends, they shall follow their accustomed associations of ideas.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "choose.v",
                "Frame": "Choosing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "end.n",
                "Frame": "Death"
            },
            {
                "LU": "shall.v",
                "Frame": "Required_event"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "d Hume has contended and defended the notion that \"reason alone is merely the 'slave of the passions'.",
        "frame": [
            {
                "LU": "contend.v",
                "Frame": "Statement"
            },
            {
                "LU": "defend.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "Immanuel Kant Immanuel Kant defines an idea as opposed to a concept.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "\"Regulator ideas\" are ideals that one must tend towards, but by definition may not be completely realized.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Liberty, according to Kant, is an idea.",
        "frame": [
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The autonomy of the rational and universal subject is opposed to the determinism of the empirical subject.",
        "frame": [
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            }
        ]
    },
    {
        "text": "Kant felt that it is precisely in knowing its limits that philosophy exists.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "The business of philosophy he thought was not to give rules, but to analyze the private judgements of good common sense.",
        "frame": [
            {
                "LU": "business.n",
                "Frame": "Businesses"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "e Rudolf Steiner Whereas Kant declares limits to knowledge (\"we can never know the thing in itself\"), in his epistemological work, Rudolf Steiner sees ideas as \"objects of experience\" which the mind apprehends, much as the eye apprehends light.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "light.a",
                "Frame": "Level_of_light"
            }
        ]
    },
    {
        "text": "In Goethean Science (1883), he declares, \"Thinking.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "is no more and no less an organ of perception than the eye or ear.",
        "frame": [
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "ear.n",
                "Frame": "Body_parts"
            }
        ]
    },
    {
        "text": "Just as the eye perceives colors and the ear sounds, so thinking perceives ideas.",
        "frame": [
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "ear.n",
                "Frame": "Body_parts"
            },
            {
                "LU": "sound.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "He holds this to be the premise upon which Goethe made his natural-scientific observations.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "Wilhelm Wundt Wundt widens the term from Kant's usage to include conscious representation of some object or process of the external world.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "In so doing, he includes not only ideas of memory and imagination, but also perceptual processes, whereas other psychologists confine the term to the first two groups.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "group.n",
                "Frame": "Organization"
            }
        ]
    },
    {
        "text": "One of Wundt's main concerns was to investigate conscious processes in their own context by experiment and introspection.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "concern.n",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "investigate.v",
                "Frame": "Research"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            }
        ]
    },
    {
        "text": "He regarded both of these as exact methods, interrelated in that experimentation created optimal conditions for introspection.",
        "frame": [
            {
                "LU": "regard.v",
                "Frame": "Topic"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Where the experimental method failed, he turned to other objectively valuable aids, specifically to those products of cultural communal life which lead one to infer particular mental motives.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "fail.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "turn.v",
                "Frame": "Cause_to_move_in_place"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "valuable.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "aid.v",
                "Frame": "Assistance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "product.n",
                "Frame": "Manufacturing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Outstanding among these are speech, myth, and social custom.",
        "frame": [
            {
                "LU": "among.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "speech.n",
                "Frame": "Communication"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "custom.n",
                "Frame": "Custom"
            }
        ]
    },
    {
        "text": "Wundt designed the basic mental activity apperceptiona unifying function which should be understood as an activity of the will.",
        "frame": [
            {
                "LU": "unify.v",
                "Frame": "Amalgamation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            }
        ]
    },
    {
        "text": "Many aspects of his empirical physiological psychology are used today.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "One is his principles of mutually enhanced contrasts and of assimilation and dissimilation (i.",
        "frame": [
            {
                "LU": "enhance.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            }
        ]
    },
    {
        "text": "in color and form perception and his advocacy of objective methods of expression and of recording results, especially in language.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "record.v",
                "Frame": "Recording"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Another is the principle of heterogony of endsthat multiply motivated acts lead to unintended side effects which in turn become motives for new actions.",
        "frame": [
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "side.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "turn.n",
                "Frame": "Becoming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Charles Sanders Peirce C.",
        "frame": []
    },
    {
        "text": "Peirce published the first full statement of pragmatism in his important works \"How to Make Our Ideas Clear\" (1878) and \"The Fixation of Belief\" (1877).",
        "frame": [
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In \"How to Make Our Ideas Clear\" he proposed that a clear idea (in his study he uses concept and idea as synonymic) is defined as one, when it is apprehended such as it will be recognized wherever it is met, and no other will be mistaken for it.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "clear.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "recognize.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "If it fails of this clearness, it is said to be obscure.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "obscure.a",
                "Frame": "Obscurity"
            }
        ]
    },
    {
        "text": "He argued that to understand an idea clearly we should ask ourselves what difference its application would make to our evaluation of a proposed solution to the problem at hand.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "clearly.adv",
                "Frame": "Obviousness"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "ask.v",
                "Frame": "Request"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "application.n",
                "Frame": "Using"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Pragmatism (a term he appropriated for use in this context), he defended, was a method for ascertaining the meaning of terms (as a theory of meaning).",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "defend.v",
                "Frame": "Defending"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "ascertain.v",
                "Frame": "Coming_to_believe"
            }
        ]
    },
    {
        "text": "The originality of his ideas is in their rejection of what was accepted as a view and understanding of knowledge by scientists for some 250 years, i.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "rejection.n",
                "Frame": "Respond_to_proposal"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "scientist.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "that, he pointed, knowledge was an impersonal fact.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Peirce contended that we acquire knowledge as participants, not as spectators.",
        "frame": [
            {
                "LU": "contend.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "acquire.v",
                "Frame": "Getting"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "He felt \"the real\" is which, sooner or later, information acquired through ideas and knowledge with the application of logical reasoning would finally result in.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "application.n",
                "Frame": "Using"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "finally.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "He also published many papers on logic in relation to ideas.",
        "frame": [
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Stout and J.",
        "frame": []
    },
    {
        "text": "Baldwin G.",
        "frame": []
    },
    {
        "text": "Stout and J.",
        "frame": []
    },
    {
        "text": "Baldwin, in the Dictionary of Philosophy and Psychology, define idea as \"the reproduction with a more or less adequate image, of an object not actually present to the senses.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "They point out that an idea and a perception are by various authorities contrasted in various ways.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "\"Difference in degree of intensity\", \"comparative absence of bodily movement on the part of the subject\", \"comparative dependence on mental activity\", are suggested by psychologists as characteristic of an idea as compared with a perception.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "absence.n",
                "Frame": "Presence"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "It should be observed that an idea, in the narrower and generally accepted sense of a mental reproduction, is frequently composite.",
        "frame": [
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "frequently.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "That is, as in the example given above of the idea of chair, a great many objects, differing materially in detail, all call a single idea.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "chair.v",
                "Frame": "Leadership"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "When a man, for example, has obtained an idea of chairs in general by comparison with which he can say \"This is a chair, that is a stool\", he has what is known as an \"abstract idea\" distinct from the reproduction in his mind of any particular chair (see abstraction).",
        "frame": [
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "obtain.v",
                "Frame": "Getting"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "chair.v",
                "Frame": "Leadership"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "chair.v",
                "Frame": "Leadership"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            }
        ]
    },
    {
        "text": "Furthermore a complex idea may not have any corresponding physical object, though its particular constituent elements may severally be the reproductions of actual perceptions.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            }
        ]
    },
    {
        "text": "Thus the idea of a centaur is a complex mental picture composed of the ideas of man and horse, that of a mermaid of a woman and a fish.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "picture.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "woman.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Anthropology and the Social Sciences Diffusion studies explore the spread of ideas from culture to culture.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Some anthropological theories hold that all cultures imitate ideas from one or a few original cultures, the Adam of the Bible or several cultural circles that overlap.",
        "frame": [
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "circle.n",
                "Frame": "Shapes"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Evolutionary diffusion theory holds that cultures are influenced by one another, but that similar ideas can be developed in isolation.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In mid-20th century, social scientists began to study how and why ideas spread from one person or culture to another.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "study.v",
                "Frame": "Building_subparts"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Everett Rogers pioneered diffusion of innovations studies, using research to prove factors in adoption and profiles of adopters of ideas.",
        "frame": [
            {
                "LU": "pioneer.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "factor.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "In 1976, in his book The Selfish Gene, Richard Dawkins suggested applying biological evolutionary theories to the spread of ideas.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "apply.v",
                "Frame": "Come_into_effect"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "He coined the term meme to dibe an abstract unit of selection, equivalent to the gene in evolutionary biology.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Samuel Johnson James Boswell recorded Dr.",
        "frame": [
            {
                "LU": "record.v",
                "Frame": "Recording"
            }
        ]
    },
    {
        "text": "Samuel Johnson's opinion about ideas.",
        "frame": [
            {
                "LU": "opinion.n",
                "Frame": "Documents"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Johnson claimed that they are mental images or internal visual pictures.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "As such, they have no relation to words or the concepts which are designated by verbal names.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "designate.v",
                "Frame": "Appointing"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "He was particularly indignant against the almost universal use of the word idea in the sense of notion or opinion, when it is clear that idea can only signify something of which an image can be formed in the mind.",
        "frame": [
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "clear.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "We may have an idea or image of a mountain, a tree, a building; but we cannot surely have an idea or image of an argument or proposition.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "mountain.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Yet we hear the sages of the law 'delivering their ideas upon the question under consideration;' and the first speakers in parliament 'entirely coinciding in the idea which has been ably stated by an honourable member;'  or 'reprobating an idea unconstitutional, and fraught with the most dangerous consequences to a great and free country.",
        "frame": [
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "hear.v",
                "Frame": "Perception_experience"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "consideration.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "coincide.v",
                "Frame": "Simultaneity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "member.n",
                "Frame": "Membership"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "consequence.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "country.n",
                "Frame": "Locale_by_use"
            }
        ]
    },
    {
        "text": "Johnson called this 'modern cant.",
        "frame": []
    },
    {
        "text": "Boswell's Life of Johnson, Tuesday, 23 September 1777 Validity of Ideas In the objective worth of our ideas there remains the problem of the validity.",
        "frame": [
            {
                "LU": "September.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "As all cognition is by ideas, it is obvious that the question of the validity of our ideas in this broad sense is that of the truth of our knowledge as a whole.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "broad.a",
                "Frame": "Dimension"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Otherwise to dispute this is to take up the position of skepticism.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "dispute.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "position.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "This has often been pointed out as a means of intellectual suicide.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "mean.a",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "suicide.n",
                "Frame": "Killing"
            }
        ]
    },
    {
        "text": "Any chain of reasoning (common sense) by which we attempt to demonstrate the falsity of our ideas has to employ the very concept of ideas itself.",
        "frame": [
            {
                "LU": "chain.n",
                "Frame": "Businesses"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Then insofar as such reasoning demands assent to the conclusion, it implies belief in the validity of all the ideas employed in the premises of the argument.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conclusion.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "employ.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "To assent the fundamental mathematical and logical axioms, including that of the principle of contradiction, implies admission of the truth of the ideas expressed in these principles.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "admission.n",
                "Frame": "Statement"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "With respect to the objective worth of ideas, as involved in perception generally, the question raised is that of the existence of an independent material world comprising other human beings.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "raise.v",
                "Frame": "Building"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "human.a",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "The idealism of David Hume and John Stuart Mill would lead logically to solipsism (the denial of any others besides ourselves).",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The main foundation of all idealism and skepticism is the assumption (explicit or implicit), that the mind can never know what is outside of itself.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "foundation.n",
                "Frame": "Body_decoration"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "outside.n",
                "Frame": "Part_inner_outer"
            }
        ]
    },
    {
        "text": "This is to say that an idea as a cognition can never go outside of itself.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "outside.prep",
                "Frame": "Part_inner_outer"
            }
        ]
    },
    {
        "text": "This can be further expressed as we can never reach to and mentally apprehend anything outside of anything of what is actually a present state of our own consciousness.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "outside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "First, this is based on a prior assumption for which no real proof is or can be given Second, it is not only not self-evident, but directly contrary to what our mind affirms to be our direct intellectual experience.",
        "frame": [
            {
                "LU": "first.adv",
                "Frame": "Ordinal_numbers"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "proof.n",
                "Frame": "Evidence"
            },
            {
                "LU": "second.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "What is possible for a human mind to apprehend cannot be laid down beforehand.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "down.adv",
                "Frame": "Ingestion"
            }
        ]
    },
    {
        "text": "It must be ascertained by careful observations and by study of the process of cognition.",
        "frame": [
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "This postulates that the mind cannot apprehend or cognize any reality existing outside of itself and is not only a self-evident proposition, it is directly contrary to what such observation and the testimony of mankind affirms to be our actual intellectual experience.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "outside.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "testimony.n",
                "Frame": "Documents"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "John Stuart Mill and most extreme idealists have to admit the validity of memory and expectation.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "admit.v",
                "Frame": "Reveal_secret"
            },
            {
                "LU": "expectation.n",
                "Frame": "Expectation"
            }
        ]
    },
    {
        "text": "This is to say that in every act of memory or expectation which refers to any experience outside the present instant, our cognition is transcending the present modifications of the mind and judging about reality beyond and distinct from the present states of consciousness.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "expectation.n",
                "Frame": "Expectation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "outside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "judge.v",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            }
        ]
    },
    {
        "text": "Considering the question as specially concerned with universal concepts, only the theory of moderate realism adopted by Aristotle and Saint Thomas can claim to guarantee objective value to our ideas.",
        "frame": [
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "According to the nominalist and conceptualist theories there is no true correlate in rerum natur corresponding to the universal term.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            }
        ]
    },
    {
        "text": "Mathematics, astronomy, physics, chemistry, and the rest claim that their universal propositions are true and deal with realities.",
        "frame": [
            {
                "LU": "claim.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "It is involved in the very notion of science that the physical laws formulated by the mind do mirror the working of agents in the external universe.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The general terms of these sciences and the ideas which they signify have objective correlatives in the common natures and essences of the objects with which these sciences deal.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            }
        ]
    },
    {
        "text": "Otherwise these general statements are unreal and each science is nothing more than a consistently arranged system of barren propositions deduced from empty arbitrary definitions.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "arrange.v",
                "Frame": "Placing"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "These postulates then have no more genuine objective value than any other coherently devised scheme of artificial symbols standing for imaginary beings.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "scheme.n",
                "Frame": "Project"
            },
            {
                "LU": "stand.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "However the fruitfulness of science and the constant verifications of its predictions are incompatible with such a hypothesis.",
        "frame": [
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "verification.n",
                "Frame": "Verification"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Concept If someone is explaining a new idea to you at what point do you feel you have understood the idea.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "What will make you say Im sorry but I didnt understand what you just said.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The person explaining it, thinks he understands the idea.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "A concept is similar to an object.",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "It has data and methods that can act on that data.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "In fact at this time as there is no Conceptive C compiler, a concept is purely conceptual and can be defined using objective C as: id\t\tconcept; So it is as the same level as an object.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "so.c",
                "Frame": "Degree"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Any examples at present will use that concept as the starting point.",
        "frame": [
            {
                "LU": "present.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "When and if I implement a Conceptive-C compiler it would change to: idea \t\tconcept; So the difference is once we have a Conceptive-C compiler, we should be able to add data and methods to a concept at run time.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "so.c",
                "Frame": "Degree"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "How do we do this.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "It is not done inside an editor while editing a source file and then running a compiler and linker.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "inside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "It is done by the running program.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "So the running program needs to have a way of adding data, allocating memory and adding computer code, while it is running.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "It could be possible for the programmer to do part of this at compile time by specifying conditions that would lead to new code or data being added to a concept.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Or by having concept templates and changing the concept to a new concept to handle a problem.",
        "frame": [
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "One example would be a bot running and examining input text and creating word concepts from the text.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "examine.v",
                "Frame": "Examination"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "If we had a class or template for a noun, adverb or adjective we could create a new word using one of these classes.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "class.n",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "The problem is say the new word is \"car\".",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "A \"car\" is a noun word concept or an object.",
        "frame": [
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Which is it better to implement it as.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "The noun concept could be used to allow a bot to use it in a conversation.",
        "frame": [
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            }
        ]
    },
    {
        "text": "The object might be better for using it to control a robot radio control car or a car in a game.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "control.v",
                "Frame": "Control"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The thing is in this situation only the noun word concept is available to add the object the program would need to be re-compiled.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Our program is not likely to be in the position of having to control a radio controlled car.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "control.v",
                "Frame": "Control"
            },
            {
                "LU": "radio.v",
                "Frame": "Contacting"
            },
            {
                "LU": "control.v",
                "Frame": "Control"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            }
        ]
    },
    {
        "text": "But it may find out information about cars from searching the Internet.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "search.v",
                "Frame": "Seeking"
            }
        ]
    },
    {
        "text": "Ideally the running program should be able to store new concepts that are created while running.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "It should also be possible to run a program that would turn the stored new objects into source code.",
        "frame": [
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "turn.v",
                "Frame": "Cause_to_move_in_place"
            },
            {
                "LU": "new.a",
                "Frame": "Age"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "m and.",
        "frame": []
    },
    {
        "text": "h files, so that could be added into the programs source code.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            }
        ]
    },
    {
        "text": "The other option would be to add car to a word database, rather than adding a noun concept.",
        "frame": [
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "car.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The problem that I see is a computer program can only program code that has been foreseen or planned for by a human programmer at this time.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "plan.v",
                "Frame": "Purpose"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "At some time it may be possible for a computer program to run and define it's own goals and invent computer code to help it achieve those goals.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "invent.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "achieve.v",
                "Frame": "Accomplishment"
            }
        ]
    },
    {
        "text": "But I don't think we are near that time yet.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "near.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "What is a Concept.",
        "frame": []
    },
    {
        "text": "A concept (substantive term: conception) is a cognitive unit of meaningan abstract idea or a mental symbol sometimes defined as a \"unit of knowledge,\" built from other units which act as a concept's characteristics.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "A concept is typically associated with a corresponding representation in a language or symbology; however, some concepts do not have a linguistic representation, which can make them more difficult to understand depending on a person's native language, such as a single meaning of a term.",
        "frame": [
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            }
        ]
    },
    {
        "text": "There are prevailing theories in contemporary philosophy which attempt to explain the nature of concepts.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The representational theory of mind proposes that concepts are mental representations, while the semantic theory of concepts (originating with Frege's distinction between concept and object) holds that they are abstract objects.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "originate.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Ideas are taken to be concepts, although abstract concepts do not necessarily appear to the mind as images as some ideas do.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Many philosophers consider concepts to be a fundamental ontological category of being.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "The term \"concept\" is traced back to 155460 (Latin conceptum - \"something conceived\"), but what is today termed \"the classical theory of concepts\" is the theory of Aristotle on the definition of terms.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "trace.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "The meaning of \"concept\" is explored in mainstream information science, cognitive science, metaphysics, and philosophy of mind.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "In computer and information science contexts, especially, the term 'concept' is often used in unclear or inconsistent ways.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Origin and Acquisition of Concepts John Locke's description of a general idea corresponds to a description of a concept.",
        "frame": [
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "According to Locke, a general idea is created by abstracting, drawing away, or removing the uncommon characteristic or characteristics from several particular ideas.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "draw.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "remove.v",
                "Frame": "Undressing"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The remaining common characteristic is that which is similar to all of the different individuals.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "For example, the abstract general idea or concept that is designated by the word \"red\" is that characteristic which is common to apples, cherries, and blood.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "designate.v",
                "Frame": "Appointing"
            },
            {
                "LU": "red.a",
                "Frame": "Color"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The abstract general idea or concept that is signified by the word \"dog\" is the collection of those characteristics which are common to Airedales, Collies, and Chihuahuas.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "dog.n",
                "Frame": "Cotheme"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "In the same tradition as Locke, John Stuart Mill stated that general conceptions are formed through abstraction.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            }
        ]
    },
    {
        "text": "A general conception is the common element among the many images of members of a class.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "member.n",
                "Frame": "Membership"
            }
        ]
    },
    {
        "text": "W]hen we form a set of phenomena into a class, that is, when we compare them with one another to ascertain in what they agree, some general conception is implied in this mental operation\" (A System of Logic, Book IV, Ch.",
        "frame": [
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "II).",
        "frame": []
    },
    {
        "text": "Mill did not believe that concepts exist in the mind before the act of abstraction.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            }
        ]
    },
    {
        "text": "\"It is not a law of our intellect, that, in comparing things with each other and taking note of their agreement, we merely recognize as realized in the outward world something that we already had in our minds.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "compare.v",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "take.v",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "agreement.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The conception originally found its way to us as the result of such a comparison.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "It was obtained (in metaphysical phrase) by abstraction from individual things\".",
        "frame": [
            {
                "LU": "obtain.v",
                "Frame": "Getting"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "For Schopenhauer, empirical concepts \".",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "are mere abstractions from what is known through intuitive perception, and they have arisen from our arbitrarily thinking away or dropping of some qualities and our retention of others.",
        "frame": [
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "drop.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "(Parerga and Paralipomena, Vol.",
        "frame": []
    },
    {
        "text": "I, \"Sketch of a History of the Ideal and the Real\").",
        "frame": [
            {
                "LU": "history.n",
                "Frame": "Fields"
            }
        ]
    },
    {
        "text": "In his On the Will in Nature, \"Physiology and Pathology,\" Schopenhauer said that a concept is \"drawn off from previous images.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "off.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "by putting off their differences.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "off.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "This concept is then no longer intuitively perceptible, but is denoted and fixed merely by words.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "Nietzsche, who was heavily influenced by Schopenhauer, wrote: \"Every concept originates through our equating what is unequal.",
        "frame": [
            {
                "LU": "heavily.adv",
                "Frame": "Degree"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "originate.v",
                "Frame": "Origin"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "No leaf ever wholly equals another, and the concept 'leaf' is formed through an arbitrary abstraction from these individual differences, through forgetting the distinctions.",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "forget.v",
                "Frame": "Abandonment"
            }
        ]
    },
    {
        "text": "By contrast to the above philosophers, Immanuel Kant held that the account of the concept as an abstraction of experience is only partly correct.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            }
        ]
    },
    {
        "text": "He called those concepts that result of abstraction \"a posteriori concepts\" (meaning concepts that arise out of experience).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "An empirical or an a posteriori concept is a general representation (Vorstellung) or non-specific thought of that which is common to several specific perceived objects.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "several.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "A concept is a common feature or characteristic.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "Kant investigated the way that empirical a posteriori concepts are created.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            }
        ]
    },
    {
        "text": "The logical acts of the understanding by which concepts are generated as to their form are: Comparison, the likening of mental images to one another in relation to the unity of consciousness.",
        "frame": [
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Reflection, the going back over different mental images, how they can be comprehended in one consciousness; and finally.",
        "frame": [
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "finally.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "Abstraction or the segregation of everything else by which the mental images differ.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "differ.v",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "In order to make our mental images into concepts, one must thus be able to compare, reflect, and abstract, for these three logical operations of the understanding are essential and general conditions of generating any concept whatever.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "For example, I see a fir, a willow, and a linden.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "In firstly comparing these objects, I notice that they are different from one another in respect of trunk, branches, leaves, and the like; further, however, I reflect only on what they have in common, the trunk, the branches, the leaves themselves, and abstract from their size, shape, and so forth; thus I gain a concept of a tree.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "compare.v",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "shape.n",
                "Frame": "Shapes"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "gain.v",
                "Frame": "Getting"
            }
        ]
    },
    {
        "text": "Pure Concepts Kant declared that human minds possess pure or a priori concepts.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Instead of being abstracted from individual perceptions, like empirical concepts, they originate in the mind itself.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "He called these concepts categories, in the sense of the word that means predicate, attribute, characteristic, or quality.",
        "frame": [
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "But these pure categories are predicates of things in general, not of a particular thing.",
        "frame": [
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "According to Kant, there are 12 categories that constitute the understanding of phenomenal objects.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "constitute.v",
                "Frame": "Being_in_category"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Each category is that one predicate which is common to multiple empirical concepts.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In order to explain how an a priori concept can relate to individual phenomena, in a manner analogous to an a posteriori concept, Kant employed the technical concept of the schema.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "employ.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "technical.a",
                "Frame": "Fields"
            }
        ]
    },
    {
        "text": "Conceptual Structure It seems intuitively obvious that concepts must have some kind of structure.",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Up until recently, the dominant view of conceptual structure was a containment model, associated with the classical view of concepts.",
        "frame": [
            {
                "LU": "up.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            },
            {
                "LU": "recently.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "dominant.a",
                "Frame": "Dominate_competitor"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "According to this model, a concept is endowed with certain necessary and sufficient conditions in their description which unequivocally determine an extension.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "The containment model allows for no degrees; a thing is either in, or out, of the concept's extension.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            }
        ]
    },
    {
        "text": "By contrast, the inferential model understands conceptual structure to be determined in a graded manner, according to the tendency of the concept to be used in certain kinds of inferences.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            }
        ]
    },
    {
        "text": "As a result, concepts do not have a kind of structure that is in terms of necessary and sufficient conditions; all conditions are contingent.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            }
        ]
    },
    {
        "text": "However, some theorists claim that primitive concepts lack any structure at all.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "lack.v",
                "Frame": "Possession"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "For instance, Jerry Fodor presents his Asymmetric Dependence Theory as a way of showing how a primitive concept's content is determined by a reliable relationship between the information in mental contents and the world.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "instance.n",
                "Frame": "Instance"
            },
            {
                "LU": "present.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "reliable.a",
                "Frame": "Trust"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "These sorts of claims are referred to as \"atomistic\", because the primitive concept is treated as if it were a genuine atom.",
        "frame": [
            {
                "LU": "sort.n",
                "Frame": "Type"
            },
            {
                "LU": "claim.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "treat.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "One Possible Structure Concepts are formed by people's (or other) minds while reflecting upon their environment, subject to their sensory organs/sensors and the way such minds are in contact with their immediate and distant environment.",
        "frame": [
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "reflect.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "The location of concepts is therefore assumed to be within the mind of such an organism/mechanism, more specifically in their head or equivalent place deemed to be the organ used for thinking (system of nerves or equivalent).",
        "frame": [
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "deem.v",
                "Frame": "Categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "However Concepts can be expressed in language and externalized by writing or other means such as Wikipedia.",
        "frame": [
            {
                "LU": "can.v",
                "Frame": "Preserving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Others hold different views, such as Carl Jung, who holds that concepts may be attributed to space other than within the inside boundaries of any body or mass or material formation of living creatures.",
        "frame": [
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "formation.n",
                "Frame": "Creating"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "In fact some people even assume that inanimate object also have such property as \"a concept\" within their own solid structure.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "solid.n",
                "Frame": "Substance"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "The Dual Nature of Concepts Clearly, the location of concepts is not decided for good yet, but it looks certain that they are related to the external world or the environment, of which of course such a living and \"thinking\" creature is a part of.",
        "frame": [
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "decide.v",
                "Frame": "Deciding"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "look.v",
                "Frame": "Seeking"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "course.n",
                "Frame": "Roadways"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "Thus a concept is started from outside, in the relation of conception, hence the subject is subjected to an object and has a concept of that object in a black box usually referred to as the mind.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "outside.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "black.a",
                "Frame": "Level_of_light"
            },
            {
                "LU": "box.n",
                "Frame": "Measure_volume"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Such a content of the mind is then related to the original object that is reflected in and by the mind (for short) and it is also given another form to enable the creature to communicate about his/her/its experience of that object.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "reflect.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "In case of humans, it is usually a symbol or sign, maybe that of a language which is then also related to the external object and the internal concept in the triangle of meaning (which is the same as the triangle of reference).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "sign.n",
                "Frame": "Sign_agreement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Do not forget that as we speak of existence as inseparable from space and time, such a relationship is established in time, meaning that whoever has a concept of whatever object with whichever name will have the three inputs synchronized.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "forget.v",
                "Frame": "Abandonment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "establish.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "And should he be not alone at that location, he/she etc.",
        "frame": [
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "will also check that what/whom he sees as existing is real, \"objective\", and not \"subjective\" (prone to various errors) through a dialog with the members of his/her race or community.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "member.n",
                "Frame": "Membership"
            },
            {
                "LU": "race.n",
                "Frame": "Type"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Conceptual Content In cognitive linguistics, abstract concepts are transformations of concrete concepts derived from embodied experience.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "The mechanism of transformation is structural mapping, in which properties of two or more source domains are selectively mapped onto a blended space (Fauconnier & Turner, 1995; see conceptual blending).",
        "frame": [
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "transformation.n",
                "Frame": "Cause_change"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "domain.n",
                "Frame": "Biological_classification"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "A common class of blends are metaphors.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "This theory contrasts with the rationalist view that concepts are perceptions (or recollections, in Plato's term) of an independently existing world of ideas, in that it denies the existence of any such realm.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            }
        ]
    },
    {
        "text": "It also contrasts with the empiricist view that concepts are abstract generalizations of individual experiences, because the contingent and bodily experience is preserved in a concept, and not abstracted away.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "While the perspective is compatible with Jamesian pragmatism (above), the notion of the transformation of embodied concepts through structural mapping makes a distinct contribution to the problem of concept formation.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "transformation.n",
                "Frame": "Cause_change"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "formation.n",
                "Frame": "Creating"
            }
        ]
    },
    {
        "text": "Concepts and Metaphilosophy A long and well-established tradition philosophy posits that philosophy itself is nothing more than conceptual analysis.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "This view has its proponents in contemporary literature as well as historical.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "According to Deleuze and Guattari's What Is Philosophy.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "(1991), philosophy is the activity of creating concepts.",
        "frame": [
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "This creative activity differs from previous definitions of philosophy as simple reasoning, communication or contemplation of universals.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "Concepts are specific to philosophy: science creates \"functions\", and art \"sensations\".",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "A concept is always signed: thus, Descartes' Cogito or Kant's \"transcendental\".",
        "frame": [
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "It is a singularity, not universal, and connects itself with others concepts, on a \"plane of immanence\" traced by a particular philosophy.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "connect.v",
                "Frame": "Attaching"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "plane.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "trace.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Concepts can jump from one plane of immanence to another, combining with other concepts and therefore engaging in a \"becoming-Other.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "plane.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "combine.v",
                "Frame": "Amalgamation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "engage.v",
                "Frame": "Hostile_encounter"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Concepts in Epistemology Concepts are vital to the development of scientific knowledge.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "vital.a",
                "Frame": "Importance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "For example, it would be difficult to imagine physics without concepts like: energy, force, or acceleration.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "force.n",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "Concepts help to integrate apparently unrelated observations and phenomena into viable hypotheses and theories, the basic ingredients of science.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "hypothesis.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "ingredient.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "The concept map is a tool that is used to help researchers visualize the inter-relationships between various concepts.",
        "frame": [
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Ontology of Concepts Although the mainstream literature in cognitive science regards the concept as a kind of mental particular, it has been suggested by some theorists that concepts are real things.",
        "frame": [
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "In most radical form, the realist about concepts attempts to show that the supposedly mental processes are not mental at all; rather, they are abstract entities, which are just as real as any mundane object.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Plato was the starkest proponent of the realist thesis of universal concepts.",
        "frame": []
    },
    {
        "text": "By his view, concepts (and ideas in general) are innate ideas that were instantiations of a transcendental world of pure forms that lay behind the veil of the physical world.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "lay.v",
                "Frame": "Expertise"
            },
            {
                "LU": "behind.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "In this way, universals were explained as transcendent objects.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Needless to say this form of realism was tied deeply with Plato's ontological projects.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "This remark on Plato is not of merely historical interest.",
        "frame": [
            {
                "LU": "remark.n",
                "Frame": "Statement"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "For example, the view that numbers are Platonic objects was revived by Kurt Gdel as a result of certain puzzles that he took to arise from the phenomenological accounts.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            }
        ]
    },
    {
        "text": "Gottlob Frege, founder of the analytic tradition in philosophy, famously argued for the analysis of language in terms of sense and reference.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "For him, the sense of an expression in language describes a certain state of affairs in the world, namely, the way that some object is presented.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "present.v",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "Since many commentators view the notion of sense as identical to the notion of concept, and Frege regards senses as the linguistic representations of states of affairs in the world, it seems to follow that we may understand concepts as the manner in which we grasp the world.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "affair.n",
                "Frame": "Personal_relationship"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Accordingly, concepts (as senses) have an ontological status.",
        "frame": []
    },
    {
        "text": "According to Carl Benjamin Boyer, in the introduction to his The History of the Calculus and its Conceptual Development, concepts in calculus do not refer to perceptions.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "As long as the concepts are useful and mutually compatible, they are accepted on their own.",
        "frame": [
            {
                "LU": "as.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "long.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "For example, the concepts of the derivative and the integral are not considered to refer to spatial or temporal perceptions of the external world of experience.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Neither are they related in any way to mysterious limits in which quantities are on the verge of nascence or evanescence, that is, coming into or going out of appearance or existence.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            }
        ]
    },
    {
        "text": "The abstract concepts are now considered to be totally autonomous, even though they originated from the process of abstracting or taking away qualities from perceptions until only the common, essential attributes remained.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "totally.adv",
                "Frame": "Degree"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "take.v",
                "Frame": "Opinion"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "Conceptual Empirical Investigations Concepts, as abstract units of meaning, play a key role in the development and testing of theories.",
        "frame": [
            {
                "LU": "key.a",
                "Frame": "Key"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "testing.n",
                "Frame": "Operational_testing"
            }
        ]
    },
    {
        "text": "For example, a simple relational hypothesis can be viewed as either a conceptual hypothesis (where the abstract concepts form the meaning) or an operationalized hypothesis, which is situated in the real world by rules of interpretation.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "hypothesis.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "situate.v",
                "Frame": "Placing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "For example, take the simple hypothesis Education increases Income.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            }
        ]
    },
    {
        "text": "The abstract notion of education and income (concepts) could have many meanings.",
        "frame": [
            {
                "LU": "education.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "income.n",
                "Frame": "Earnings_and_losses"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "A conceptual hypothesis cannot be tested.",
        "frame": [
            {
                "LU": "hypothesis.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "They need to be converted into operational hypothesis or the abstract meaning of education must be derived or operationalized to something in the real world that can be measured.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "operational.a",
                "Frame": "Being_operational"
            },
            {
                "LU": "hypothesis.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "education.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Education could be measured by years of school completed or highest degree completed etc.",
        "frame": [
            {
                "LU": "education.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "school.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "degree.n",
                "Frame": "Quantity"
            }
        ]
    },
    {
        "text": "Income could be measured by hourly rate of pay or yearly salary, etc.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "rate.n",
                "Frame": "Relational_quantity"
            },
            {
                "LU": "pay.v",
                "Frame": "Commerce_pay"
            },
            {
                "LU": "yearly.a",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "The system of concepts or conceptual framework can take on many levels of complexity.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "When the conceptual framework is very complex and incorporates causality or explanation they are generally referred to as a theory.",
        "frame": [
            {
                "LU": "incorporate.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The noted philosopher of science Carl Gustav Hempel says this more eloquently: An adequate empirical interpretation turns a theoretical system into a testable theory: The hypothesis whose constituent terms have been interpreted become capable of test by reference to observable phenomena.",
        "frame": [
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "turn.v",
                "Frame": "Becoming"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Frequently the interpreted hypothesis will be derivative hypotheses of the theory; but their confirmation or disconfirmation by empirical data will then immediately strengthen or weaken also the primitive hypotheses from which they were derived.",
        "frame": [
            {
                "LU": "hypothesis.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "confirmation.n",
                "Frame": "Documents"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "strengthen.v",
                "Frame": "Cause_change_of_strength"
            },
            {
                "LU": "hypothesis.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Hempel provides a useful metaphor that describes the relationship between the conceptual framework and the framework as it is observed and perhaps tested (interpreted framework): The whole system floats, as it were, above the plane of observation and is anchored to it by rules of interpretation.",
        "frame": [
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "plane.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "These might be viewed as strings which are not part of the network but link certain points of the latter with specific places in the plane of observation.",
        "frame": [
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "plane.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "By virtue of those interpretative connections, the network can function as a scientific theory.",
        "frame": [
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Memory Conceptual Memory handles the details without being defined.",
        "frame": [
            {
                "LU": "detail.n",
                "Frame": "Statement"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "It can used to store and retrieve memories in the same way we remember things.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Usually with a key that is used as a search key for accessing the memory store.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "access.v",
                "Frame": "Having_or_lacking_access"
            }
        ]
    },
    {
        "text": "Memory is implemented as a concept.",
        "frame": [
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "It can store concepts and objects.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "idea\t\tmemory; memory\tMyMemory; MyMemory = [MyMemory new]; To use it needs a key.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            }
        ]
    },
    {
        "text": "[MyMemory\tkey: MyKey remember: MyObject] ; To access something.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "MyObject = [MyMemory key: MyKey access:]; To add a link between two keys use.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "[MyMemory key: MyKey link: \"favorite shows\"]; To find something use search, it will search the key list, then any other linked lists.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "search.v",
                "Frame": "Seeking"
            },
            {
                "LU": "key.a",
                "Frame": "Importance"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "MyObject = [MyMemory key: MyKey search:]; If you store two things with the same key, memory will store both and when you access the key you will get the first one on list.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "This would return the number of items using MyKey as a key.",
        "frame": [
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            }
        ]
    },
    {
        "text": "int MyKey = [MyMemory key: MyKey keys:] To forget something use.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "forget.v",
                "Frame": "Abandonment"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "[MyMemory key: MyKey forget:]; And it would forget last thing on list for key MyKey.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "forget.v",
                "Frame": "Abandonment"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "key.a",
                "Frame": "Key"
            }
        ]
    },
    {
        "text": "You can set up memory to work as short term or long term.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            }
        ]
    },
    {
        "text": "[MyMemory shortTerm];\t// this is the default [MyMemory longTerm]; Short Term would only remember something while the program is running.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "Long term will save it and it will be available the next time the program runs.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "next.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "To use memory as a dictionary [MyMemory key: \"idea\" remember: \"a concept or mental impression\"]; Then MyObject = [MyMemory key: \"idea\" access:]; Would return string \"a concept or mental impression\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            }
        ]
    },
    {
        "text": "The above code is trying to work in the same way as human memory.",
        "frame": [
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "It may change after some testing, first implementation of memory would work with text.",
        "frame": [
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "testing.n",
                "Frame": "Operational_testing"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "In psychology, memory is an organism's ability to store, retain, and recall information and experiences.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Traditional studies of memory began in the fields of philosophy, including techniques of artificially enhancing memory.",
        "frame": [
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "enhance.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            }
        ]
    },
    {
        "text": "During the late nineteenth and early twentieth century, scientists have put memory within the paradigm of cognitive psychology.",
        "frame": [
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "late.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "In recent decades, it has become one of the principal pillars of a branch of science called cognitive neuroscience, an interdisciplinary link between cognitive psychology and neuroscience.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "principal.a",
                "Frame": "First_rank"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Processes From an information processing perspective there are three main stages in the formation and retrieval of memory: Encoding or registration Storage Retrieval, recall or recollection Sensory Memory Sensory memory corresponds approximately to the initial 200500 milliseconds after an item is perceived.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "formation.n",
                "Frame": "Creating"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "approximately.adv",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            }
        ]
    },
    {
        "text": "The ability to look at an item, and remember what it looked like with just a second of observation, or memorisation, is an example of sensory memory.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "With very short presentations, participants often report that they seem to \"see\" more than they can actually report.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "report.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The first experiments exploring this form of sensory memory were conducted by George Sperling (1960) using the \"partial report paradigm\".",
        "frame": [
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "explore.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            }
        ]
    },
    {
        "text": "Subjects were presented with a grid of 12 letters, arranged into three rows of four.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "arrange.v",
                "Frame": "Placing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "After a brief presentation, subjects were then played either a high, medium or low tone, cuing them which of the rows to report.",
        "frame": [
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "brief.a",
                "Frame": "Telling"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "play.v",
                "Frame": "Competition"
            },
            {
                "LU": "medium.a",
                "Frame": "Size"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Based on these partial report experiments, Sperling was able to show that the capacity of sensory memory was approximately 12 items, but that it degraded very quickly (within a few hundred milliseconds).",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "approximately.adv",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "quickly.adv",
                "Frame": "Taking_time"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Because this form of memory degrades so quickly, participants would see the display, but be unable to report all of the items (12 in the \"whole report\" procedure) before they decayed.",
        "frame": [
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "so.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "quickly.adv",
                "Frame": "Taking_time"
            },
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "unable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            }
        ]
    },
    {
        "text": "This type of memory cannot be prolonged via rehearsal.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Short-Term Memory Short-term memory allows recall for a period of several seconds to a minute without rehearsal.",
        "frame": [
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "minute.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Its capacity is also very limited: George A.",
        "frame": [
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": "Miller (1956), when working at Bell Laboratories, conducted experiments showing that the store of short-term memory was 72 items (the title of his famous paper, \"The magical number 72\").",
        "frame": [
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "bell.n",
                "Frame": "Noise_makers"
            },
            {
                "LU": "conduct.v",
                "Frame": "Cotheme"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Modern estimates of the capacity of short-term memory are lower, typically on the order of 45 items, however, memory capacity can be increased through a process called chunking.",
        "frame": [
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "estimate.n",
                "Frame": "Estimating"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "lower.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "For example, in recalling a ten-digit telephone number, a person could chunk the digits into three groups: first, the area code (such as 215), then a three-digit chunk (123) and lastly a four-digit chunk (4567).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "telephone.v",
                "Frame": "Contacting"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "This method of remembering telephone numbers is far more effective than attempting to remember a string of 10 digits; this is because we are able to chunk the information into meaningful groups of numbers.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "telephone.v",
                "Frame": "Contacting"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "effective.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Herbert Simon showed that the ideal size for chunking letters and numbers, meaningful or not, was three.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "ideal.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This may be reflected in some countries in the tendency to remember telephone numbers as several chunks of three numbers with the final four-number groups, generally broken down into two groups of two.",
        "frame": [
            {
                "LU": "reflect.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "country.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "telephone.v",
                "Frame": "Contacting"
            },
            {
                "LU": "several.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "break.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Short-term memory is believed to rely mostly on an acoustic code for storing information, and to a lesser extent a visual code.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "rely.v",
                "Frame": "Reliance"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "extent.n",
                "Frame": "Quantity"
            }
        ]
    },
    {
        "text": "Conrad (1964) found that test subjects had more difficulty recalling collections of letters that were acoustically similar (e.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "E, P, D).",
        "frame": []
    },
    {
        "text": "Confusion with recalling acoustically similar letters rather than visually similar letters implies that the letters were encoded acoustically.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Conrad's (1964) study however, deals with the encoding of written text, thus while memory of written language may rely on acoustic components, generalizations to all forms of memory cannot be made.",
        "frame": [
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "rely.v",
                "Frame": "Reliance"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "However, some individuals have been reported to be able to remember large amounts of information, quickly, and be able to recall that information in seconds.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "large.a",
                "Frame": "Size"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "quickly.adv",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Long-Term Memory The storage in sensory memory and short-term memory generally have a strictly limited capacity and duration, which means that information is not retained indefinitely.",
        "frame": [
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "By contrast, long-term memory can store much larger quantities of information for potentially unlimited duration (sometimes a whole life span).",
        "frame": [
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "sometimes.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "Its capacity is immeasurably large.",
        "frame": [
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "large.a",
                "Frame": "Size"
            }
        ]
    },
    {
        "text": "For example, given a random seven-digit number we may remember it for only a few seconds before forgetting, suggesting it was stored in our short-term memory.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "suggest.v",
                "Frame": "Statement"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "On the other hand, we can remember telephone numbers for many years through repetition; this information is said to be stored in long-term memory.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "telephone.v",
                "Frame": "Contacting"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "While short-term memory encodes information acoustically, long-term memory encodes it semantically: Baddeley (1966) discovered that after 20 minutes, test subjects had the most difficulty recalling a collection of words that had similar meanings (e.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "minute.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "big, large, great, huge).",
        "frame": [
            {
                "LU": "big.a",
                "Frame": "Size"
            },
            {
                "LU": "large.a",
                "Frame": "Size"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Short-term memory is supported by transient patterns of neuronal communication, dependent on regions of the frontal lobe (especially dorsolateral prefrontal cortex) and the parietal lobe.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Long-term memories, on the other hand, are maintained by more stable and permanent changes in neural connections widely spread throughout the brain.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "change.n",
                "Frame": "Undergo_change"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "throughout.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The hippocampus is essential (for learning new information) to the consolidation of information from short-term to long-term memory, although it does not seem to store information itself.",
        "frame": [
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Without the hippocampus, new memories are unable to be stored into long-term memory, and there will be a very short attention span.",
        "frame": [
            {
                "LU": "unable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            }
        ]
    },
    {
        "text": "Furthermore, it may be involved in changing neural connections for a period of three months or more after the initial learning.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "month.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            }
        ]
    },
    {
        "text": "One of the primary functions of sleep is thought to be improving consolidation of information, as several studies have demonstrated that memory depends on getting sufficient sleep between training and test.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "demonstrate.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "training.n",
                "Frame": "Education_teaching"
            }
        ]
    },
    {
        "text": "Additionally, data obtained from neuro imaging studies have shown activation patterns in the sleeping brain which mirror those recorded during the learning of tasks from the previous day, suggesting that new memories may be solidified through such rehearsal.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "obtain.v",
                "Frame": "Getting"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "image.n",
                "Frame": "Sensation"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "record.v",
                "Frame": "Recording"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "day.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "suggest.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "solidify.v",
                "Frame": "Change_of_phase"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "Research has suggested that long-term memory storage in humans may be regulated by DNA methylation.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Working Memory In 1974 Baddeley and Hitch proposed a working memory model which replaced the concept of general short term memory with specific, active components.",
        "frame": [
            {
                "LU": "working.a",
                "Frame": "Being_operational"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "active.a",
                "Frame": "Active_substance"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "In this model, working memory consists of three basic stores: the central executive, the phonological loop and the visuo-spatial sketchpad.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "store.n",
                "Frame": "Businesses"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "executive.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "In 2000 this model was expanded with the multimodal episodic buffer.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "The central executive essentially acts as attention.",
        "frame": [
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "executive.n",
                "Frame": "Leadership"
            },
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            }
        ]
    },
    {
        "text": "It channels information to the three component processes: the phonological loop, the visuo-spatial sketchpad, and the episodic buffer.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "The phonological loop stores auditory information by silently rehearsing sounds or words in a continuous loop: the articulatory process (for example the repetition of a telephone number over and over again).",
        "frame": [
            {
                "LU": "store.n",
                "Frame": "Businesses"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "sound.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "telephone.v",
                "Frame": "Contacting"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "over.a",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "A short list of data is easier to remember.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The visuospatial sketchpad stores visual and spatial information.",
        "frame": [
            {
                "LU": "store.n",
                "Frame": "Businesses"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "It is engaged when performing spatial tasks (such as judging distances) or visual ones (such as counting the windows on a house or imagining images).",
        "frame": [
            {
                "LU": "judge.v",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "distance.n",
                "Frame": "Range"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "window.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "house.n",
                "Frame": "Provide_lodging"
            },
            {
                "LU": "imagine.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The episodic buffer is dedicated to linking information across domains to form integrated units of visual, spatial, and verbal information and chronological ordering (e.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "link.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": ", the memory of a story or a movie scene).",
        "frame": [
            {
                "LU": "scene.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "The episodic buffer is also assumed to have links to long-term memory and semantical meaning.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The working memory model explains many practical observations, such as why it is easier to do two different tasks (one verbal and one visual) than two similar tasks (e.",
        "frame": [
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": ", two visual), and the aforementioned word-length effect.",
        "frame": [
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "However, the concept of a central executive as noted here has been criticised as inadequate and vague.",
        "frame": [
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "executive.n",
                "Frame": "Leadership"
            },
            {
                "LU": "note.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Levels of Processing Craik and Lockhart (1972) proposed that it is the method and depth of processing that affects how an experience is stored in memory, rather than rehearsal.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "affect.v",
                "Frame": "Objective_influence"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Organization - Mandler (1967) \tgave participants a pack of word cards and asked them to sort them into any number of piles using any system of categorisation they liked.",
        "frame": [
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "pack.n",
                "Frame": "Measure_volume"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "like.v",
                "Frame": "Experiencer_focus"
            }
        ]
    },
    {
        "text": "When they were later asked to recall as many of the words as they could, those who used more categories remembered more words.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "This study suggested that  the organization of memory is one of its central aspects (Mandler, 2011).",
        "frame": [
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "Distinctiveness - Eysenck and Eysenck (1980) asked participants to say words in a distinctive way, e.",
        "frame": [
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "distinctive.a",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "spell the words out loud.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "loud.a",
                "Frame": "Sound_level"
            }
        ]
    },
    {
        "text": "Such participants recalled the words better than those who simply read them off a list.",
        "frame": [
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "off.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Effort - Tyler et al.",
        "frame": []
    },
    {
        "text": "(1979) had participants solve a series of anagrams, some easy (FAHTER) and some difficult (HREFAT).",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "solve.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "easy.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "The participants recalled the difficult anagrams better, presumably because they put more effort into them.",
        "frame": [
            {
                "LU": "participant.n",
                "Frame": "Participation"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "effort.n",
                "Frame": "Attempt"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Elaboration - Palmere et al.",
        "frame": []
    },
    {
        "text": "(1983) gave participants descriptive paragraphs of a fictitious African nation.",
        "frame": [
            {
                "LU": "participant.n",
                "Frame": "Participation"
            }
        ]
    },
    {
        "text": "There were some short paragraphs and some with extra sentences elaborating the main idea.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Recall was higher for the ideas in the elaborated paragraphs.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Information Type Anderson (1976) divides long-term memory into declarative (explicit) and procedural (implicit) memories.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "memory.n",
                "Frame": "Memory"
            }
        ]
    },
    {
        "text": "Declarative memory requires conscious recall, in that some conscious process must call back the information.",
        "frame": [
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "It is sometimes called explicit memory, since it consists of information that is explicitly stored and retrieved.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            }
        ]
    },
    {
        "text": "Declarative memory can be further sub-divided into semantic memory, which concerns facts taken independent of context; and episodic memory, which concerns information specific to a particular context, such as a time and place.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Semantic memory allows the encoding of abstract knowledge about the world, such as \"Paris is the capital of France\".",
        "frame": [
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "capital.n",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "Episodic memory, on the other hand, is used for more personal memories, such as the sensations, emotions, and personal associations of a particular place or time.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "particular.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Autobiographical memory - memory for particular events within one's own life - is generally viewed as either equivalent to, or a subset of, episodic memory.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Visual memory is part of memory preserving some characteristics of our senses pertaining to visual experience.",
        "frame": [
            {
                "LU": "memory.n",
                "Frame": "Memory"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "One is able to place in memory information that resembles objects, places, animals or people in sort of a mental image.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "place.v",
                "Frame": "Placing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Visual memory can result in priming and it is assumed some kind of perceptual representational system underlies this phenomenon.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "In contrast, procedural memory (or implicit memory) is not based on the conscious recall of information, but on implicit learning.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Procedural memory is primarily employed in learning motor skills and should be considered a subset of implicit memory.",
        "frame": [
            {
                "LU": "employ.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            }
        ]
    },
    {
        "text": "It is revealed when one does better in a given task due only to repetition - no new explicit memories have been formed, but one is unconsciously accessing aspects of those previous experiences.",
        "frame": [
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "access.v",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Procedural memory involved in motor learning depends on the cerebellum and basal ganglia.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "learn.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Topographic memory is the ability to orient oneself in space, to recognize and follow an itinerary, or to recognize familiar places.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "familiar.a",
                "Frame": "Personal_relationship"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Getting lost when traveling alone is an example of the failure of topographic memory.",
        "frame": [
            {
                "LU": "travel.v",
                "Frame": "Motion"
            },
            {
                "LU": "failure.n",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "memory.n",
                "Frame": "Memory"
            }
        ]
    },
    {
        "text": "This is often reported among elderly patients who are evaluated for dementia.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "elderly.a",
                "Frame": "Age"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "The disorder could be caused by multiple impairments, including difficulties with perception, orientation, and memory.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "cause.v",
                "Frame": "Causation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "Temporal Direction A further major way to distinguish different memory functions is whether the content to be remembered is in the past, retrospective memory, or whether the content is to be remembered in the future, prospective memory.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Thus, retrospective memory as a category includes semantic, episodic and autobiographical memory.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "In contrast, prospective memory is memory for future intentions, or remembering to remember (Winograd, 1988).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "intention.n",
                "Frame": "Purpose"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Prospective memory can be further broken down into event- and time-based prospective remembering.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Time-based prospective memories are triggered by a time-cue, such as going to the doctor (action) at 4pm (cue).",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Event-based prospective memories are intentions triggered by cues, such as remembering to post a letter (action) after seeing a mailbox (cue).",
        "frame": [
            {
                "LU": "intention.n",
                "Frame": "Purpose"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "Cues do not need to be related to the action (as the mailbox example is), and lists, sticky-notes, knotted handkerchiefs, or string around the finger are all examples of cues that are produced by people as a strategy to enhance prospective memory.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "knot.v",
                "Frame": "Rope_manipulation"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Physiology Brain areas involved in the neuroanatomy of memory such as the hippocampus, the amygdala, the striatum, or the mammillary bodies are thought to be involved in specific types of memory.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "type.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "For example, the hippocampus is believed to be involved in spatial learning and declarative learning, while the amygdala is thought to be involved in emotional memory.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Damage to certain areas in patients and animal models and subsequent memory deficits is a primary source of information.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "subsequent.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "However, rather than implicating a specific area, it could be that damage to adjacent areas, or to a pathway traveling through the area is actually responsible for the observed deficit.",
        "frame": [
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "damage.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "adjacent.a",
                "Frame": "Adjacency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "travel.v",
                "Frame": "Motion"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "responsible.a",
                "Frame": "Causation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Further, it is not sufficient to describe memory, and its counterpart, learning, as solely dependent on specific brain regions.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "learn.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Learning and memory are attributed to changes in neuronal synapses, thought to be mediated by long-term potentiation and long-term depression.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Hebb distinguished between short-term and long-term memory.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "He postulated that any memory that stayed in short-term storage for a long enough time would be consolidated into a long-term memory.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "stay.v",
                "Frame": "Residence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "long.a",
                "Frame": "Dimension"
            },
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "consolidate.v",
                "Frame": "Amalgamation"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Later research showed this to be false.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Research has shown that direct injections of cortisol or epinephrine help the storage of recent experiences.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "This is also true for stimulation of the amygdala.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "This proves that excitement enhances memory by the stimulation of hormones that affect the amygdala.",
        "frame": [
            {
                "LU": "prove.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "excitement.n",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Excessive or prolonged stress (with prolonged cortisol) may hurt memory storage.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            }
        ]
    },
    {
        "text": "Patients with amygdalar damage are no more likely to remember emotionally charged words than nonemotionally charged ones.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remember.v",
                "Frame": "Memory"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "The hippocampus is important for explicit memory.",
        "frame": [
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "memory.n",
                "Frame": "Memory"
            }
        ]
    },
    {
        "text": "The hippocampus is also important for memory consolidation.",
        "frame": [
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The hippocampus receives input from different parts of the cortex and sends its output out to different parts of the brain also.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The input comes from secondary and tertiary sensory areas that have processed the information a lot already.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "lot.n",
                "Frame": "Destiny"
            },
            {
                "LU": "already.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "Hippocampal damage may also cause memory loss and problems with memory storage.",
        "frame": [
            {
                "LU": "cause.v",
                "Frame": "Causation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            }
        ]
    },
    {
        "text": "Mind A Brian we know about.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "You can open up someones head and there it is, but where is the Mind.",
        "frame": [
            {
                "LU": "open.v",
                "Frame": "Openness"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "How do people think about things.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "What makes us think that we understand something.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "A Mind is a Concept used for thinking.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "We combine various objects and concepts to create a Mind Concept.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Concept of Mind The concept of mind is understood in many different ways by many different traditions, ranging from panpsychism and animism to traditional and organized religious views, as well as secular and materialist philosophies.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "tradition.n",
                "Frame": "Custom"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Most agree that minds are constituted by conscious experience and intelligent thought.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            }
        ]
    },
    {
        "text": "Common attributes of mind include perception, reason, imagination, memory, emotion, attention, and a capacity for communication.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "A rich set of unconscious processes are also included in many modern characterizations of mind.",
        "frame": [
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Theories of mind and its function are numerous.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "numerous.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Earliest recorded speculations are from the likes of Zoroaster, the Buddha, Plato, Aristotle, and other ancient Greek, Indian and, later, Islamic and medieval European philosophers.",
        "frame": [
            {
                "LU": "record.v",
                "Frame": "Recording"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "like.n",
                "Frame": "Similarity"
            },
            {
                "LU": "indian.a",
                "Frame": "Origin"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "european.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Pre-modern understandings of the mind, such as the neoplatonic \"nous\" saw it as an aspect of the soul, in the sense of being both divine and immortal, linking human thinking with the un-changing ordering principle of the cosmos itself.",
        "frame": [
            {
                "LU": "understanding.n",
                "Frame": "Awareness"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "link.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "order.v",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "Which attributes make up the mind is much debated.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "debate.v",
                "Frame": "Discussion"
            }
        ]
    },
    {
        "text": "Some psychologists argue that only the \"higher\" intellectual functions constitute mind, particularly reason and memory.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "In this view the emotionslove, hate, fear, joyare more primitive or subjective in nature and should be seen as different from the mind as such.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "fear.n",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Others argue that various rational and emotional states cannot be so separated, that they are of the same nature and origin, and should therefore be considered all part of what we call the mind.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            }
        ]
    },
    {
        "text": "In popular usage mind is frequently synonymous with thought: the private conversation with ourselves that we carry on \"inside our heads.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "inside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            }
        ]
    },
    {
        "text": "Thus we \"make up our minds,\" \"change our minds\" or are \"of two minds\" about something.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "One of the key attributes of the mind in this sense is that it is a private sphere to which no one but the owner has access.",
        "frame": [
            {
                "LU": "key.a",
                "Frame": "Key"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "owner.n",
                "Frame": "Possession"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            }
        ]
    },
    {
        "text": "No one else can \"know our mind.",
        "frame": [
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "They can only interpret what we consciously or unconsciously communicate.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "communicate.v",
                "Frame": "Communication"
            }
        ]
    },
    {
        "text": "Etymology The original meaning of Old English gemynd was the faculty of memory, not of thought in general.",
        "frame": [
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "Hence call to mind, come to mind, keep in mind, to have mind of, etc.",
        "frame": [
            {
                "LU": "call.n",
                "Frame": "Deserving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Old English had other words to express \"mind\", such as hyge \"mind, spirit\".",
        "frame": [
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "The generalization of mind to include all mental faculties, thought, volition, feeling and memory, gradually develops over the 14th and 15th centuries.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "feeling.n",
                "Frame": "Sensation"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "The meaning of \"memory\" is shared with Old Norse, which has munr.",
        "frame": [
            {
                "LU": "share.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "The word is originally from a PIE verbal root *men-, meaning \"to think, remember\", whence also Latin mens \"mind\", Sanskrit manas \"mind\" and Greek  \"mind, courage, anger\".",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Mental Faculties Thought is a mental activity which allows human beings to make sense of things in the world, and to represent and interpret them in ways that are significant, or which accord with their needs, attachments, goals, commitments, plans, ends, desires, etc.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "end.v",
                "Frame": "Cause_to_end"
            }
        ]
    },
    {
        "text": "Thinking involves the symbolic or semantic mediation of ideas or data, as when we form concepts, engage in problem solving, reasoning and making decisions.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "decision.n",
                "Frame": "Deciding"
            }
        ]
    },
    {
        "text": "Words that refer to similar concepts and processes include deliberation, cognition, ideation, discourse and imagination.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Thinking is sometimes described as a \"higher\" cognitive function and the analysis of thinking processes is a part of cognitive psychology.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "It is also deeply connected with our capacity to make and use tools; to understand cause and effect; to recognize patterns of significance; to comprehend and disclose unique contexts of experience or activity; and to respond to the world in a meaningful way.",
        "frame": [
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "recognize.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "significance.n",
                "Frame": "Probability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "Memory is the ability to preserve, retain, and subsequently recall, knowledge, information or experience.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "recall.v",
                "Frame": "Memory"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Although memory has traditionally been a persistent theme in philosophy, the late nineteenth and early twentieth centuries also saw the study of memory emerge as a subject of inquiry within the paradigms of cognitive psychology.",
        "frame": [
            {
                "LU": "theme.n",
                "Frame": "Topic"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "late.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "inquiry.n",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "In recent decades, it has become one of the pillars of a new branch of science called cognitive neuroscience, a marriage between cognitive psychology and neuroscience.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "marriage.n",
                "Frame": "Personal_relationship"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "The subject of memory has also been addressed in highly sophisticated ways in classic works of 20th century literature, notably in the novel of Marcel Proust, and in popular films, e.",
        "frame": [
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Eternal Sunshine of the Spotless Mind.",
        "frame": []
    },
    {
        "text": "Imagination is the activity of generating or evoking novel situations, images, ideas or other qualia in the mind.",
        "frame": [
            {
                "LU": "evoke.v",
                "Frame": "Evoking"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It is a characteristically subjective activity, rather than a direct or passive experience.",
        "frame": [
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "The term is technically used in psychology for the process of reviving in the mind percepts of objects formerly given in sense perception.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "revive.v",
                "Frame": "Cause_to_resume"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "formerly.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "Since this use of the term conflicts with that of ordinary language, some psychologists have preferred to describe this process as \"imaging\" or \"imagery\" or to speak of it as \"reproductive\" as opposed to \"productive\" or \"constructive\" imagination.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "ordinary.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "image.n",
                "Frame": "Sensation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Things that are imagined are said to be seen in the \"mind's eye\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "Among the many practical functions of imagination are the ability to project possible futures (or histories), to \"see\" things from another's perspective, and to change the way something is perceived, including to make decisions to respond to, or enact, what is imagined.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "decision.n",
                "Frame": "Deciding"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Consciousness in mammals (this includes humans) is an aspect of the mind generally thought to comprise qualities such as subjectivity, sentience, and the ability to perceive the relationship between oneself and one's environment.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            }
        ]
    },
    {
        "text": "It is a subject of much research in philosophy of mind, psychology, neuroscience, and cognitive science.",
        "frame": [
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "Some philosophers divide consciousness into phenomenal consciousness, which is subjective experience itself, and access consciousness, which refers to the global availability of information to processing systems in the brain.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "global.a",
                "Frame": "Political_locales"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "process.v",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Phenomenal consciousness has many different experienced qualities, often referred to as qualia.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Phenomenal consciousness is usually consciousness of something or about something, a property known as intentionality in philosophy of mind.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Mental Content Mental contents are those items which are thought of as being \"in\" the mind, and capable of being formed and manipulated by mental processes and faculties.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Examples include thoughts, concepts, memories, emotions, percepts and intentions.",
        "frame": [
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "intention.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Philosophical theories of mental content include internalism, externalism, representationalism and intentionality.",
        "frame": []
    },
    {
        "text": "Cognitive Science In animals, the brain, or encephalon (Greek for \"in the head\"), is the control center of the central nervous system, responsible for thought.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "center.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "responsible.a",
                "Frame": "Causation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            }
        ]
    },
    {
        "text": "In most animals, the brain is located in the head, protected by the skull and close to the primary sensory apparatus of vision, hearing, equilibrioception, taste and olfaction.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "locate.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "protect.v",
                "Frame": "Protecting"
            },
            {
                "LU": "close.a",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "taste.n",
                "Frame": "Give_impression"
            }
        ]
    },
    {
        "text": "While all vertebrates have a brain, most invertebrates have either a centralized brain or collections of individual ganglia.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Primitive animals such as sponges do not have a brain at all.",
        "frame": [
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Brains can be extremely complex.",
        "frame": [
            {
                "LU": "can.v",
                "Frame": "Preserving"
            }
        ]
    },
    {
        "text": "For example, the human brain contains more than 100 billion neurons, each linked to as many as 10,000 others.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Understanding the relationship between the brain and the mind  mind-body problem is one of the central issues in the history of philosophy  is a challenging problem both philosophically and scientifically.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "challenging.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "There are three major philosophical schools of thought concerning the answer: dualism, materialism, and idealism.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "Dualism holds that the mind exists independently of the brain; materialism holds that mental phenomena are identical to neuronal phenomena; and idealism holds that only mental phenomena exist.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            }
        ]
    },
    {
        "text": "The most straightforward scientific evidence that there is a strong relationship between the physical brain matter and the mind is the impact physical alterations to the brain have on the mind, such as with traumatic brain injury and psychoactive drug use.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "injury.n",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "drug.n",
                "Frame": "Cause_harm"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "In addition to the philosophical questions, the relationship between mind and brain involves a number of scientific questions, including understanding the relationship between mental activity and brain activity, the exact mechanisms by which drugs influence cognition, and the neural correlates of consciousness.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "exact.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "influence.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "Through most of history many philosophers found it inconceivable that cognition could be implemented by a physical substance such as brain tissue (that is neurons and synapses).",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Used_up"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Philosophers such as Patricia Churchland posit that the drug-mind interaction is indicative of an intimate connection between the brain and the mind, not that the two are the same entity.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "Descartes, who thought extensively about mind-brain relationships, found it possible to explain reflexes and other simple behaviors in mechanistic terms, although he did not believe that complex thought, and language in particular, could be explained by reference to the physical brain alone.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Philosophy of Mind Philosophy of mind is the branch of philosophy that studies the nature of the mind, mental events, mental functions, mental properties, consciousness and their relationship to the physical body.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "The mind-body problem, i.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "the relationship of the mind to the body, is commonly seen as the central issue in philosophy of mind, although there are other issues concerning the nature of the mind that do not involve its relation to the physical body.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Dualism and monism are the two major schools of thought that attempt to resolve the mind-body problem.",
        "frame": [
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "attempt.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Dualism is the position that mind and body are in some way separate from each other.",
        "frame": [
            {
                "LU": "position.n",
                "Frame": "Placing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "It can be traced back to Plato, Aristotle and the Samkhya and Yoga schools of Hindu philosophy, but it was most precisely formulated by Ren Descartes in the 17th century.",
        "frame": [
            {
                "LU": "trace.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Substance dualists argue that the mind is an independently existing substance, whereas Property dualists maintain that the mind is a group of independent properties that emerge from and cannot be reduced to the brain, but that it is not a distinct substance.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "reduce.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "The 20th century philosopher Martin Heidegger suggested that subjective experience and activity (i.",
        "frame": [
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "the \"mind\") cannot be made sense of in terms of Cartesian \"substances\" that bear \"properties\" at all (whether the mind itself is thought of as a distinct, separate kind of substance or not).",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This is because the nature of subjective, qualitative experience is incoherent in terms of  or semantically incommensurable with the concept of  substances that bear properties.",
        "frame": [
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "This is a fundamentally ontological argument.",
        "frame": []
    },
    {
        "text": "Mind / Body Perspectives Monism is the position that mind and body are not physiologically and ontologically distinct kinds of entities.",
        "frame": [
            {
                "LU": "position.n",
                "Frame": "Placing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This view was first advocated in Western Philosophy by Parmenides in the 5th Century BC and was later espoused by the 17th Century rationalist Baruch Spinoza.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "western.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "According to Spinoza's dual-aspect theory, mind and body are two aspects of an underlying reality which he variously described as \"Nature\" or \"God\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Physicalists argue that only the entities postulated by physical theory exist, and that the mind will eventually be explained in terms of these entities as physical theory continues to evolve.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "exist.v",
                "Frame": "Existence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "eventually.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "evolve.v",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Idealists maintain that the mind is all that exists and that the external world is either mental itself, or an illusion created by the mind.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            }
        ]
    },
    {
        "text": "Neutral monists adhere to the position that perceived things in the world can be regarded as either physical or mental depending on whether one is interested in their relationship to other things in the world or their relationship to the perceiver.",
        "frame": [
            {
                "LU": "adhere.v",
                "Frame": "Compliance"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "regard.v",
                "Frame": "Topic"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "interested.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "For example, a red spot on a wall is physical in its dependence on the wall and the pigment of which it is made, but it is mental in so far as its perceived redness depends on the workings of the visual system.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "red.a",
                "Frame": "Color"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "wall.n",
                "Frame": "Architectural_part"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "wall.n",
                "Frame": "Architectural_part"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Unlike dual-aspect theory, neutral monism does not posit a more fundamental substance of which mind and body are aspects.",
        "frame": [
            {
                "LU": "neutral.a",
                "Frame": "Partiality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "The most common monisms in the 20th and 21st centuries have all been variations of physicalism; these positions include behaviorism, the type identity theory, anomalous monism and functionalism.",
        "frame": [
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Many modern philosophers of mind adopt either a reductive or non-reductive physicalist position, maintaining in their different ways that the mind is not something separate from the body.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "These approaches have been particularly influential in the sciences, e.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "in the fields of sociobiology, computer science, evolutionary psychology and the various neurosciences.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "Other philosophers, however, adopt a non-physicalist position which challenges the notion that the mind is a purely physical construct.",
        "frame": [
            {
                "LU": "position.n",
                "Frame": "Placing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "construct.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "Reductive physicalists assert that all mental states and properties will eventually be explained by scientific accounts of physiological processes and states.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Non-reductive physicalists argue that although the brain is all there is to the mind, the predicates and vocabulary used in mental descriptions and explanations are indispensable, and cannot be reduced to the language and lower-level explanations of physical science.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "reduce.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "Continued neuroscientific progress has helped to clarify some of these issues.",
        "frame": [
            {
                "LU": "progress.n",
                "Frame": "Progression"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "However, they are far from having been resolved, and modern philosophers of mind continue to ask how (if at all) the subjective qualities and the intentionality (aboutness) of mental states and properties can be explained in naturalistic terms.",
        "frame": [
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Psychology Psychology is the scientific study of human behavior, mental functioning, and experience; noology, the study of thought.",
        "frame": [
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "As both an academic and applied discipline, Psychology involves the scientific study of mental processes such as perception, cognition, emotion, personality, as well as environmental influences, such as social and cultural influences, and interpersonal relationships, in order to devise theories of human behavior.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "discipline.v",
                "Frame": "Rewards_and_punishments"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "influence.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "influence.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "devise.v",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Psychology also refers to the application of such knowledge to various spheres of human activity, including problems of individuals' daily lives and the treatment of mental health problems.",
        "frame": [
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "application.n",
                "Frame": "Using"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "daily.a",
                "Frame": "Frequency"
            },
            {
                "LU": "treatment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "health.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Psychology differs from the other social sciences (e.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": ", anthropology, economics, political science, and sociology) due to its focus on experimentation at the scale of the individual, or individuals in small groups as opposed to large groups, institutions or societies.",
        "frame": [
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "group.n",
                "Frame": "Organization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "large.a",
                "Frame": "Size"
            },
            {
                "LU": "group.n",
                "Frame": "Organization"
            },
            {
                "LU": "society.n",
                "Frame": "Organization"
            }
        ]
    },
    {
        "text": "Historically, psychology differed from biology and neuroscience in that it was primarily concerned with mind rather than brain.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Modern psychological science incorporates physiological and neurological processes into its conceptions of perception, cognition, behavior, and mental disorders.",
        "frame": [
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "incorporate.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "Evolutionary Psychology Evolutionary psychology (EP) is an approach within psychology that examines psychological traits  such as memory, perception, or language  from a Darwinian evolutionary perspective.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "It seeks to explain how many human psychological traits are evolved adaptations, that is, the functional products of natural selection or sexual selection.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "product.n",
                "Frame": "Manufacturing"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            }
        ]
    },
    {
        "text": "Adaptationist thinking about physiological mechanisms, such as the heart, lungs, and immune system, is common in evolutionary biology.",
        "frame": [
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "heart.n",
                "Frame": "Part_orientational"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Evolutionary psychology applies the same thinking to psychology.",
        "frame": [
            {
                "LU": "apply.v",
                "Frame": "Come_into_effect"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Evolution of the Human Mind The evolution of human intelligence refers to a set of theories that attempt to explain how human intelligence has evolved.",
        "frame": [
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "attempt.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The question is closely tied to the evolution of the human brain, and to the emergence of human language.",
        "frame": [
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The timeline of human evolution spans some 7 million years, from the separation of the Pan genus until the emergence of behavioral modernity by 50,000 years ago.",
        "frame": [
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "separation.n",
                "Frame": "Forming_relationships"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            },
            {
                "LU": "ago.idio",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "Of this timeline, the first 3 million years concern Sahelanthropus, the following 2 million concern Australopithecus, while the final 2 million span the history of actual human species.",
        "frame": [
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            }
        ]
    },
    {
        "text": "Many traits of human intelligence, such as empathy, theory of mind, mourning, ritual, and the use of symbols and tools, are already apparent in great apes although in lesser sophistication than in humans.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "ritual.n",
                "Frame": "Custom"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "There is a debate between supporters of the idea of a sudden emergence of intelligence, or \"Great leap forward\" and those of a gradual or continuum hypothesis.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            }
        ]
    },
    {
        "text": "Animal intelligence Animal cognition, or cognitive ethology, is the title given to a modern approach to the mental capacities of animals.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            }
        ]
    },
    {
        "text": "It has developed out of comparative psychology, but has also been strongly influenced by the approach of ethology, behavioral ecology, and evolutionary psychology.",
        "frame": [
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Much of what used to be considered under the title of animal intelligence is now thought of under this heading.",
        "frame": [
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Animal language acquisition, attempting to discern or understand the degree to which animal cognition can be revealed by linguistics-related study, has been controversial among cognitive linguists.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "Artificial intelligence In 1950 Alan M.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Turing published \"Computing machinery and intelligence\" in Mind, in which he proposed that machines could be tested for intelligence using questions and answers.",
        "frame": [
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "This process is now named the Turing Test.",
        "frame": [
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "The term Artificial Intelligence (AI) was first used by John McCarthy who considered it to mean \"the science and engineering of making intelligent machines\".",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "It can also refer to intelligence as exhibited by an artificial (man-made, non-natural, manufactured) entity.",
        "frame": [
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "exhibit.v",
                "Frame": "Cause_to_perceive"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "AI is studied in overlapping fields of computer science, psychology, neuroscience and engineering, dealing with intelligent behavior, learning and adaptation and usually developed using customized machines or computers.",
        "frame": [
            {
                "LU": "study.v",
                "Frame": "Building_subparts"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Research in AI is concerned with producing machines to automate tasks requiring intelligent behavior.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Examples include control, planning and scheduling, the ability to answer diagnostic and consumer questions, handwriting, natural language, speech and facial recognition.",
        "frame": [
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "answer.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "speech.n",
                "Frame": "Communication"
            }
        ]
    },
    {
        "text": "As such, the study of AI has also become an engineering discipline, focused on providing solutions to real life problems, knowledge mining, software applications, strategy games like computer chess and other video games.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "discipline.v",
                "Frame": "Rewards_and_punishments"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            }
        ]
    },
    {
        "text": "One of the biggest difficulties with AI is that of comprehension.",
        "frame": [
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Many devices have been created that can do amazing things, but critics of AI claim that no actual comprehension by the AI machine has taken place.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "device.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "critic.n",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "claim.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "The debate about the nature of the mind is relevant to the development of artificial intelligence.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "If the mind is indeed a thing separate from or higher than the functioning of the brain, then hypothetically it would be much more difficult to recreate within a machine, if it were possible at all.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "If, on the other hand, the mind is no more than the aggregated functions of the brain, then it will be possible to create a machine with a recognizable mind (though possibly only with computers much different from today's), by simple virtue of the fact that such a machine already exists in the form of the human brain.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "possibly.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Meme A meme is \"an idea, behavior or style that spreads from person to person within a culture.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "A meme acts as a unit for carrying cultural ideas, symbols or practices, which can be transmitted from one mind to another through writing, speech, gestures, rituals or other imitable phenomena.",
        "frame": [
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "speech.n",
                "Frame": "Communication"
            },
            {
                "LU": "ritual.n",
                "Frame": "Custom"
            }
        ]
    },
    {
        "text": "Supporters of the concept regard memes as cultural analogues to genes in that they self-replicate, mutate and respond to selective pressures.",
        "frame": [
            {
                "LU": "regard.n",
                "Frame": "Categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "pressure.n",
                "Frame": "Attempt_suasion"
            }
        ]
    },
    {
        "text": "The word 'meme' is a shortening (modeled on 'gene') of 'mimeme' (from Ancient Greek  Greek pronunciation: [mmma] mmma, \"something imitated\", from  mimeisthai, \"to imitate\", from  mimos \"mime\") and it was coined by the British evolutionary biologist Richard Dawkins in The Selfish Gene (1976) as a concept for discussion of evolutionary principles in explaining the spread of ideas and cultural phenomena.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "discussion.n",
                "Frame": "Discussion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Examples of memes given in the book included melodies, catch-phrases, fashion and the technology of building arches.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "fashion.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Advocates of the meme idea say that memes may evolve by natural selection in a manner analogous to that of biological evolution.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "evolve.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Memes do this through the processes of variation, mutation, competition and inheritance, each of which influence a meme's reproductive success.",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "influence.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "success.n",
                "Frame": "Success_or_failure"
            }
        ]
    },
    {
        "text": "Memes spread through the behaviors that they generate in their hosts.",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "host.n",
                "Frame": "Guest_and_host"
            }
        ]
    },
    {
        "text": "Memes that propagate less prolifically may become extinct, while others may survive, spread and (for better or for worse) mutate.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Memes that replicate most effectively enjoy more success.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "success.n",
                "Frame": "Success_or_failure"
            }
        ]
    },
    {
        "text": "Some memes may replicate effectively even when they prove to be detrimental to the welfare of their hosts.",
        "frame": [
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "host.n",
                "Frame": "Guest_and_host"
            }
        ]
    },
    {
        "text": "A field of study called memetics arose in the 1990s to explore the concepts and transmission of memes in terms of an evolutionary model.",
        "frame": [
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "Criticism from a variety of fronts has challenged the notion that scholarship can examine memes empirically.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Developments in neuroimaging may however make empirical study possible.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "make.v",
                "Frame": "Type"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "Some commentators[who.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "who.UNK",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "] question the idea that one can meaningfully categorize culture in terms of discrete units.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Origins Max Stirner's 1844 The Ego and Its Own puts forth the idea that the individual is dominated by illusory concepts ('fixed ideas' or 'spooks'), which can be shaken and undermined by each individual, though he does not use the term meme for this.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "He offers examples such as nationalism and religion.",
        "frame": [
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "Historically, the notion of a unit of social evolution, and a similar term (from Greek  mneme, memory), first appeared in 1904 in a work by the German Lamarckist biologist Richard Semon titled Die Mnemischen Empfindungen in ihren Beziehungen zu den Originalempfindungen (loosely translatable as Memory-feelings in relation to original feelings).",
        "frame": [
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "german.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "According to the OED, the word mneme appears in English in 1921 in L.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Simon's translation of Semon's book: The Mneme.",
        "frame": [
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Laurent noted the use of the term mneme in Maurice Maeterlinck's The Life of the White Ant (1926), and has highlighted similarities to Dawkins' concept.",
        "frame": [
            {
                "LU": "note.v",
                "Frame": "Statement"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The analogy between culturally transmitted information and genetically transmitted information was perceived clearly enough by Luigi Luca Cavalli-Sforza and Marcus W.",
        "frame": [
            {
                "LU": "culturally.adv",
                "Frame": "Domain"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "clearly.adv",
                "Frame": "Obviousness"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Feldman to allow them to formulate and analyze quantitative models of cultural transmission and selection.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            }
        ]
    },
    {
        "text": "They published a series of papers beginning in 1973.",
        "frame": [
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The word meme originated with Dawkins' 1976 book The Selfish Gene.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "To emphasize commonality with genes, Dawkins coined the term \"meme\" by shortening \"mimeme\", which derives from the Greek word mimema (\"something imitated\").",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "emphasize.v",
                "Frame": "Convey_importance"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "shorten.v",
                "Frame": "Change_event_duration"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "Dawkins states that he did not know of the \"mneme\", and said that he wanted \"a monosyllable that sounds a bit like 'gene'\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Dawkins wrote that evolution depended not on the particular chemical basis of genetics, but only on the existence of a self-replicating unit of transmission  in the case of biological evolution, the gene.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "chemical.a",
                "Frame": "Substance"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "For Dawkins, the meme exemplified another self-replicating unit with potential significance in explaining human behavior and cultural evolution.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "potential.a",
                "Frame": "Capability"
            },
            {
                "LU": "significance.n",
                "Frame": "Probability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Dawkins used the term to refer to any cultural entity that an observer might consider a replicator.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            }
        ]
    },
    {
        "text": "He hypothesized that one could view many cultural entities as replicators, and pointed to melodies, fashions and learned skills as examples.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "view.v",
                "Frame": "Range"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "fashion.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "Memes generally replicate through exposure to humans, who have evolved as efficient copiers of information and behavior.",
        "frame": [
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Because humans do not always copy memes perfectly, and because they may refine, combine or otherwise modify them with other memes to create new memes, they can change over time.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Dawkins likened the process by which memes survive and change through the evolution of culture to the natural selection of genes in biological evolution.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Dawkins defined the meme as a unit of cultural transmission, or a unit of imitation and replication, but later definitions would vary.",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "later.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "vary.v",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "Memes, analogously to genes, vary in their aptitude to replicate; memes which are good at getting themselves copied tend to spread and remain, whereas the less good ones have a higher probability of being ignored and forgotten.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "Thus \"better\" memes are selected.",
        "frame": [
            {
                "LU": "better.v",
                "Frame": "Required_event"
            }
        ]
    },
    {
        "text": "The lack of a consistent, rigorous, and precise understanding of what typically makes up one unit of cultural transmission remains a problem in debates about memetics.",
        "frame": [
            {
                "LU": "lack.n",
                "Frame": "Possession"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "In contrast, the concept of genetics gained concrete evidence with the discovery of the biological functions of DNA.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "gain.v",
                "Frame": "Getting"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Meme transmission does not necessarily require a physical medium, unlike genetic transmission.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "medium.a",
                "Frame": "Size"
            }
        ]
    },
    {
        "text": "Transmission Life-forms can transmit information both vertically (from parent to child, via replication of genes) and horizontally (through viruses and other means).",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "parent.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "child.n",
                "Frame": "People_by_age"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "Malcolm Gladwell wrote, \"A meme is an idea that behaves like a virus--that moves through a population, taking hold in each person it infects.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "take.v",
                "Frame": "Opinion"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Memes can replicate vertically or horizontally within a single biological generation.",
        "frame": [
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "They may also lie dormant for long periods of time.",
        "frame": [
            {
                "LU": "lie.v",
                "Frame": "Posture"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Memes spread by the behaviors that they generate in their hosts.",
        "frame": [
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "host.n",
                "Frame": "Guest_and_host"
            }
        ]
    },
    {
        "text": "Imitation counts as an important characteristic in the propagation of memes.",
        "frame": [
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Imitation often involves the copying of an observed behavior of another individual, but memes may transmit from one individual to another through a copy recorded in an inanimate source, such as a book or a musical score.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "record.v",
                "Frame": "Recording"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "McNamara has suggested that memes can be thereby classified as either internal or external memes, (i-memes or e-memes).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Researchers have observed memetic copying in just a few species on Earth, including hominids, dolphins and birds (that learn how to sing by imitating their parents or neighbors).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "parent.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "Some commentators have likened the transmission of memes to the spread of contagions.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Social contagions such as fads, hysteria, copycat crime, and copycat suicide exemplify memes seen as the contagious imitation of ideas.",
        "frame": [
            {
                "LU": "crime.n",
                "Frame": "Committing_crime"
            },
            {
                "LU": "suicide.n",
                "Frame": "Killing"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Observers distinguish the contagious imitation of memes from instinctively contagious phenomena such as yawning and laughing, which they consider innate (rather than socially learned) behaviors.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Aaron Lynch described seven general patterns of meme transmission, or \"thought contagion\": Quantity of parenthood: an idea that influences the number of children one has.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "quantity.n",
                "Frame": "Quantity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "influence.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "Children respond particularly receptively to the ideas of their parents, and thus ideas that directly or indirectly encourage a higher birthrate will replicate themselves at a higher rate than those that discourage higher birthrates.",
        "frame": [
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "rate.n",
                "Frame": "Relational_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Efficiency of parenthood: an idea that increases the proportion of children who will adopt ideas of their parents.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "parent.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "Cultural separatism exemplifies one practice in which one can expect a higher rate of meme-replication  because the meme for separation creates a barrier from exposure to competing ideas.",
        "frame": [
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "expect.v",
                "Frame": "Expectation"
            },
            {
                "LU": "rate.n",
                "Frame": "Relational_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "separation.n",
                "Frame": "Forming_relationships"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Proselytic: ideas generally passed to others beyond one's own children.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "Ideas that encourage the proselytism of a meme, as seen in many religious or political movements, can replicate memes horizontally through a given generation, spreading more rapidly than parent-to-child meme-transmissions do.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "rapidly.adv",
                "Frame": "Speed_description"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Preservational: ideas that influence those that hold them to continue to hold them for a long time.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Ideas that encourage longevity in their hosts, or leave their hosts particularly resistant to abandoning or replacing these ideas, enhance the preservability of memes and afford protection from the competition or proselytism of other memes.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "abandon.v",
                "Frame": "Abandonment"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Adversative: ideas that influence those that hold them to attack or sabotage competing ideas and/or those that hold them.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "attack.v",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            }
        ]
    },
    {
        "text": "Adversative replication can give an advantage in meme transmission when the meme itself encourages aggression against other memes.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Cognitive: ideas perceived as cogent by most in the population who encounter them.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Cognitively transmitted memes depend heavily on a cluster of other ideas and cognitive traits already widely held in the population, and thus usually spread more passively than other forms of meme transmission.",
        "frame": [
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "heavily.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "Memes spread in cognitive transmission do not count as self-replicating.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "Motivational: ideas that people adopt because they perceive some self-interest in adopting them.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            }
        ]
    },
    {
        "text": "Strictly speaking, motivationally transmitted memes do not self-propagate, but this mode of transmission often occurs in association with memes self-replicated in the efficiency parental, proselytic and preservational modes.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "association.n",
                "Frame": "Organization"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Memes as Discrete Units Richard Dawkins initially defined meme as a noun that \"conveys the idea of a unit of cultural transmission, or a unit of imitation\".",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "convey.v",
                "Frame": "Bringing"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "John S.",
        "frame": []
    },
    {
        "text": "Wilkins retained the notion of meme as a kernel of cultural imitation while emphasizing the meme's evolutionary aspect, defining the meme as \"the least unit of sociocultural information relative to a selection process that has favourable or unfavourable selection bias that exceeds its endogenous tendency to change.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "emphasize.v",
                "Frame": "Convey_importance"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "relative.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "bias.n",
                "Frame": "Partiality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The meme as a unit provides a convenient means of discussing \"a piece of thought copied from person to person\", regardless if that thought contains others inside it, or forms part of a larger meme.",
        "frame": [
            {
                "LU": "discuss.v",
                "Frame": "Speak_on_topic"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "inside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "A meme could consist of a single word, or a meme could consist of the entire speech in which that word first occurred.",
        "frame": [
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "speech.n",
                "Frame": "Communication"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "This forms an analogy to the idea of a gene as a single unit of self-replicating information found on the self-replicating chromosome.",
        "frame": [
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "While the identification of memes as \"units\" conveys their nature to replicate as discrete, indivisible entities, it does not imply that thoughts somehow become quantized or that \"atomic\" ideas exist that cannot be dissected into smaller pieces.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            }
        ]
    },
    {
        "text": "A meme has no given size.",
        "frame": [
            {
                "LU": "give.v",
                "Frame": "Giving"
            }
        ]
    },
    {
        "text": "Susan Blackmore writes that melodies from Beethoven's symphonies are commonly used to illustrate the difficulty involved in delimiting memes as discrete units.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "She notes that while the first four notes of Beethoven's Fifth Symphony ( listen (helpinfo)) form a meme widely replicated as an independent unit, one can regard the entire symphony as a single meme as well.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "regard.v",
                "Frame": "Topic"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "The inability to pin an idea or cultural feature to quantifiable key units is widely acknowledge as a problem for memetics.",
        "frame": [
            {
                "LU": "inability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "key.a",
                "Frame": "Key"
            },
            {
                "LU": "acknowledge.v",
                "Frame": "Statement"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "It has been argued however that the traces of memetic processing can be quantified utilizing neuroimaging techniques which measure changes in the connectivity profiles between brain regions.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "trace.n",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "measure.n",
                "Frame": "Dimension"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Blackmore meets such criticism by stating that memes compare with genes in this respect: that while a gene has no particular size, nor can we ascribe every phenotypic feature directly to a particular gene, it has value because it encapsulates that key unit of inherited expression subject to evolutionary pressures.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "every.prep",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "key.a",
                "Frame": "Key"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "pressure.n",
                "Frame": "Attempt_suasion"
            }
        ]
    },
    {
        "text": "To illustrate, she notes evolution selects for the gene for features such as eye color; it does not select for the individual nucleotide in a strand of DNA.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "strand.n",
                "Frame": "Natural_features"
            }
        ]
    },
    {
        "text": "Memes play a comparable role in understanding the evolution of imitated behaviors.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "The 1981 book Genes, Mind, and Culture: The Coevolutionary Process by Charles J.",
        "frame": [
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Lumsden and E.",
        "frame": []
    },
    {
        "text": "Wilson proposed the theory that genes and culture co-evolve, and that the fundamental biological units of culture must correspond to neuronal networks that function as nodes of semantic memory.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "They coined their own term, \"culturgen\", which did not catch on.",
        "frame": [
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Coauthor Wilson later acknowledged the term meme as the best label for the fundamental unit of cultural inheritance in his 1998 book Consilience: The Unity of Knowledge, which elaborates upon the fundamental role of memes in unifying the natural and social sciences.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "acknowledge.v",
                "Frame": "Statement"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "label.v",
                "Frame": "Labeling"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "unify.v",
                "Frame": "Amalgamation"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "Evolutions Influences on Memes Richard Dawkins noted the three conditions that must exist for evolution to occur: variation, or the introduction of new change to existing elements; heredity or replication, or the capacity to create copies of elements; differential \"fitness\", or the opportunity for one element to be more or less suited to the environment than another.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "note.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "variation.n",
                "Frame": "Cause_change"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "opportunity.n",
                "Frame": "Opportunity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "suit.v",
                "Frame": "Suitability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Dawkins emphasizes that the process of evolution naturally occurs whenever these conditions co-exist, and that evolution does not apply only to organic elements such as genes.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "He regards memes as also having the properties necessary for evolution, and thus sees meme evolution as not simply analogous to genetic evolution, but as a real phenomenon subject to the laws of natural selection.",
        "frame": [
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            }
        ]
    },
    {
        "text": "Dawkins noted that as various ideas pass from one generation to the next, they may either enhance or detract from the survival of the people who obtain those ideas, or influence the survival of the ideas themselves.",
        "frame": [
            {
                "LU": "note.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "enhance.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "survival.n",
                "Frame": "Surviving"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "obtain.v",
                "Frame": "Getting"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "survival.n",
                "Frame": "Surviving"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "For example, a certain culture may develop unique designs and methods of tool-making that give it a competitive advantage over another culture.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "competitive.a",
                "Frame": "Competition"
            }
        ]
    },
    {
        "text": "Each tool-design thus acts somewhat similarly to a biological gene in that some populations have it and others do not, and the meme's function directly affects the presence of the design in future generations.",
        "frame": [
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "affect.v",
                "Frame": "Objective_influence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "In keeping with the thesis that in evolution one can regard organisms simply as suitable \"hosts\" for reproducing genes, Dawkins argues that one can view people as \"hosts\" for replicating memes.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "suitable.a",
                "Frame": "Suitability"
            },
            {
                "LU": "host.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reproduce.v",
                "Frame": "Duplication"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "view.v",
                "Frame": "Range"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "replicate.v",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": "Consequently, a successful meme may or may not need to provide any benefit to its host.",
        "frame": [
            {
                "LU": "successful.a",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "host.n",
                "Frame": "Guest_and_host"
            }
        ]
    },
    {
        "text": "Unlike genetic evolution, memetic evolution can show both Darwinian and Lamarckian traits.",
        "frame": [
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            }
        ]
    },
    {
        "text": "Cultural memes will have the characteristic of Lamarckian inheritance when a host aspires to replicate the given meme through inference rather than by exactly copying it.",
        "frame": [
            {
                "LU": "host.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "inference.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "exactly.adv",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": "Take for example the case of the transmission of a simple skill such as hammering a nail, a skill that a learner imitates from watching a demonstration without necessarily imitating every discrete movement modeled by the teacher in the demonstration, stroke for stroke.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "watch.v",
                "Frame": "Seeking"
            },
            {
                "LU": "demonstration.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "teacher.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "demonstration.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Susan Blackmore distinguishes the difference between the two modes of inheritance in the evolution of memes, characterizing the Darwinian mode as \"copying the instructions\" and the Lamarckian as \"copying the product.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "characterize.v",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": "Cell A Cell is just like a Virtual Computer and can run programs written in C Code or Machine Token Codes.",
        "frame": [
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The cell is the functional basic unit of life.",
        "frame": [
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "It was discovered by Robert Hooke and is the functional unit of all known living organisms.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "It is the smallest unit of life that is classified as a living thing, and is often called the building block of life.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "classify.v",
                "Frame": "Categorization"
            },
            {
                "LU": "living.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Organisms can be classified as unicellular (consisting of a single cell; including most bacteria) or multicellular (including plants and animals).",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "plant.n",
                "Frame": "Placing"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            }
        ]
    },
    {
        "text": "Humans contain about 100 trillion cells; a typical cell size is 10m and a typical cell mass is 1nanogram.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "The longest human cells are about 135m in the anterior horn in the spinal cord while granule cells in the cerebellum, the smallest, can be some 4m and the longest cell can reach from the toe to the lower brain stem (Pseudounipolar cells).",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The largest known cells are unfertilised ostrich egg cells, which weigh 3.",
        "frame": [
            {
                "LU": "known.a",
                "Frame": "Being_named"
            },
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "3 pounds.",
        "frame": [
            {
                "LU": "pound.n",
                "Frame": "Measure_mass"
            }
        ]
    },
    {
        "text": "In 1835, before the final cell theory was developed, Jan Evangelista Purkyn observed small \"granules\" while looking at the plant tissue through a microscope.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "plant.n",
                "Frame": "Placing"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "The cell theory, first developed in 1839 by Matthias Jakob Schleiden and Theodor Schwann, states that all organisms are composed of one or more cells, that all cells come from preexisting cells, that vital functions of an organism occur within cells, and that all cells contain the hereditary information necessary for regulating cell functions and for transmitting information to the next generation of cells.",
        "frame": [
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "vital.a",
                "Frame": "Importance"
            },
            {
                "LU": "occur.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "regulate.v",
                "Frame": "Control"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "generation.n",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "The word cell comes from the Latin cellula, meaning \"a small room\".",
        "frame": [
            {
                "LU": "cell.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "mean.v",
                "Frame": "Stinginess"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            }
        ]
    },
    {
        "text": "The descriptive term for the smallest living biological structure was coined by Robert Hooke in a book he published in 1665 when he compared the cork cells he saw through his microscope to the small rooms monks lived in.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "living.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "compare.v",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "through.prep",
                "Frame": "Used_up"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "live.v",
                "Frame": "Residence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Anatomy There are two types of cells: eukaryotic and prokaryotic.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Prokaryotic cells are usually independent, while eukaryotic cells are often found in multicellular organisms.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Prokaryotic Cells The prokaryote cell is simpler, and therefore smaller, than a eukaryote cell, lacking a nucleus and most of the other organelles of eukaryotes.",
        "frame": [
            {
                "LU": "lack.v",
                "Frame": "Possession"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "There are two kinds of prokaryotes: bacteria and archaea; these share a similar structure.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Nuclear material of prokaryotic cell consist of a single chromosome that is in direct contact with cytoplasm.",
        "frame": [
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "contact.n",
                "Frame": "Communication"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Here, the undefined nuclear region in the cytoplasm is called nucleoid.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Eukaryotic Cells Plants, animals, fungi, slime moulds, protozoa, & algae are all Eukaryotic.",
        "frame": [
            {
                "LU": "animal.n",
                "Frame": "Animals"
            }
        ]
    },
    {
        "text": "These cells are about 15 times wider than a typical prokaryote and can be as much as 1000 times greater in volume.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "volume.n",
                "Frame": "Text"
            }
        ]
    },
    {
        "text": "The major difference between prokaryotes and eukaryotes is that eukaryotic cells contain membrane-bound compartments in which specific metabolic activities take place.",
        "frame": [
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "activity.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Most important among these is a cell nucleus, a membrane-delineated compartment that houses the eukaryotic cell's DNA.",
        "frame": [
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "among.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "house.n",
                "Frame": "Provide_lodging"
            }
        ]
    },
    {
        "text": "This nucleus gives the eukaryote its name, which means \"true nucleus.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "Other differences include: The plasma membrane resembles that of prokaryotes in function, with minor differences in the setup.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Cell walls may or may not be present.",
        "frame": [
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            }
        ]
    },
    {
        "text": "The eukaryotic DNA is organized in one or more linear molecules, called chromosomes, which are associated with histone proteins.",
        "frame": [
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "All chromosomal DNA is stored in the cell nucleus, separated from the cytoplasm by a membrane.",
        "frame": [
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "separate.v",
                "Frame": "Differentiation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Some eukaryotic organelles such as mitochondria also contain some DNA.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Eukaryotes can move using motile cilia or flagella.",
        "frame": [
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The flagella are more complex than those of prokaryotes.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Genetic Material Two different kinds of genetic material exist: deoxyribonucleic acid (DNA) and ribonucleic acid (RNA).",
        "frame": [
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "exist.v",
                "Frame": "Existence"
            },
            {
                "LU": "acid.n",
                "Frame": "Intoxicants"
            },
            {
                "LU": "acid.n",
                "Frame": "Intoxicants"
            }
        ]
    },
    {
        "text": "Most organisms use DNA for their long-term information storage, but some viruses (e.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": ", retroviruses) have RNA as their genetic material.",
        "frame": []
    },
    {
        "text": "The biological information contained in an organism is encoded in its DNA or RNA sequence.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "RNA is also used for information transport (e.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": ", mRNA) and enzymatic functions (e.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": ", ribosomal RNA) in organisms that use DNA for the genetic code itself.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Transfer RNA (tRNA) molecules are used to add amino acids during protein translation.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "A human cell has genetic material contained in the cell nucleus (the nuclear genome) and in the mitochondria (the mitochondrial genome).",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In humans the nuclear genome is divided into 23 pairs of linear DNA molecules called chromosomes.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "divide.v",
                "Frame": "Separating"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The mitochondrial genome is a circular DNA molecule distinct from the nuclear DNA.",
        "frame": [
            {
                "LU": "circular.a",
                "Frame": "Shapes"
            },
            {
                "LU": "distinct.a",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Origin of the First Cell The origin of cells has to do with the origin of life, which began the history of life on Earth.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "There are several theories about the origin of small molecules that could lead to life in an early Earth.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "earth.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "One is that they came from meteorites.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Another is that they were created at deep-sea vents.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            }
        ]
    },
    {
        "text": "A third is that they were synthesized by lightning in a reducing atmosphere; although it is not clear if Earth had such an atmosphere.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "clear.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "There are essentially no experimental data defining what the first self-replicating forms were.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "form.n",
                "Frame": "Type"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "RNA is generally assumed the earliest self-replicating molecule, as it is capable of both storing genetic information and catalyzing chemical reactions (see RNA world hypothesis).",
        "frame": [
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "store.v",
                "Frame": "Store"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "chemical.a",
                "Frame": "Substance"
            },
            {
                "LU": "reaction.n",
                "Frame": "Response"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "But some other entity with the potential to self-replicate could have preceded RNA, like clay or peptide nucleic acid.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "potential.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "acid.n",
                "Frame": "Intoxicants"
            }
        ]
    },
    {
        "text": "Cells emerged at least 4.",
        "frame": [
            {
                "LU": "emerge.v",
                "Frame": "Departing"
            },
            {
                "LU": "at.prep",
                "Frame": "Being_employed"
            }
        ]
    },
    {
        "text": "0 billion years ago.",
        "frame": [
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "ago.idio",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "The current belief is that these cells were heterotrophs.",
        "frame": [
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Computer Cell Is made up of a Mind Concept and a Object Body, it also has the ability to copy itself.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The Mind can run a program in the same way a VIrtual Machine would.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "Part of the Body definition would be the Virtual Machine that the Mind Concept will use.",
        "frame": [
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The Body could also have the ability to move to a new network location or processor.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "Soul In attempting to construct such machines we should not be irreverently usurping His power of creating souls.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "construct.v",
                "Frame": "Building"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "Alan Turing The Conceptual Soul of the machine is used for an internal dialogue, so as our Mind concept can talk to itself and practice conversation.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            }
        ]
    },
    {
        "text": "This allows for improvements in dialogue to occur.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "occur.v",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "The Soul can also control goals and emotions and provide likes and dis-likes used in judgements and hunches.",
        "frame": [
            {
                "LU": "control.v",
                "Frame": "Control"
            },
            {
                "LU": "like.n",
                "Frame": "Similarity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The Soul Concept can be used when a Mind concept wants to practice scenarios.",
        "frame": [
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "A soul in certain spiritual, philosophical, and psychological traditions is the incorporeal essence of a person or living thing or object.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "tradition.n",
                "Frame": "Custom"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "live.v",
                "Frame": "Residence"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "There is absolutely no scientific proof of souls existing - yet many philosophical and spiritual systems still teach that humans have souls, and others teach that all living things and even inanimate objects (such as rivers) have souls.",
        "frame": [
            {
                "LU": "proof.n",
                "Frame": "Evidence"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "living.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "The latter belief is commonly called animism.",
        "frame": [
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "Soul sometimes functions as a synonym for spirit, mind or self.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            }
        ]
    },
    {
        "text": "Etymology The Modern English word soul derived from Old English swol, swel, first attested to in the 8th century poem Beowulf v.",
        "frame": [
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "2820 and in the Vespasian Psalter 77.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "50, and is cognate with other Germanic and Baltic terms for the same idea, including Gothic saiwala, Old High German sula, sla, Old Saxon sola, Old Low Franconian sla, sla, Old Norse sla as well as Lithuanian siela.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "german.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Further etymology of the Germanic word is uncertain.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "uncertain.a",
                "Frame": "Certainty"
            }
        ]
    },
    {
        "text": "A more recent suggestion connects it with a root for \"binding\", Germanic *sailian (OE slian, OHG seilen), related to the notion of being \"bound\" in death, and the practice of ritually binding or restraining the corpse of the deceased in the grave to prevent his or her return as a ghost.",
        "frame": [
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "binding.a",
                "Frame": "Being_obligatory"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "bound.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The word is probably an adaptation by early missionariesparticularly Ulfilas, apostle to the Goths during the 4th centuryof a native Germanic concept, which was a translation of Greek  psych \"life, spirit, consciousness\".",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "The Greek word is derived from a verb \"to cool, to blow\" and hence refers to the vital breath, the animating principle in humans and other animals, as opposed to soma meaning \"body\".",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "vital.a",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "It could refer to a ghost or spirit of the dead in Homer, and to a more philosophical notion of an immortal and immaterial essence left over at death since Pindar.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "leave.v",
                "Frame": "Causation"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Latin anima figured as a translation of since Terence.",
        "frame": [
            {
                "LU": "figure.v",
                "Frame": "Opinion"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Psych occurs juxtaposed to e.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "in Matthew 10:28: Authorized King James Version (KJV) \"And fear not them which kill the body, but are not able to kill the soul: but rather fear Him which is able to destroy both soul and body in hell.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "king.n",
                "Frame": "Appellations"
            },
            {
                "LU": "fear.n",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "kill.v",
                "Frame": "Killing"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "kill.v",
                "Frame": "Killing"
            },
            {
                "LU": "rather.adv",
                "Frame": "Hedging"
            },
            {
                "LU": "fear.v",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In the Septuagint (LXX) translates Hebrew nephesh, meaning \"life, vital breath\", which is in English variously translated as \"soul, self, life, creature, person, appetite, mind, living being, desire, emotion, passion\"; e.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "vital.a",
                "Frame": "Importance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "live.v",
                "Frame": "Residence"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            }
        ]
    },
    {
        "text": "in Genesis 1:20: And God created great whales, and every living creature that moveth.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Paul of Tarsus distinguishs between the Jewish notions of nephesh and ruah (spirit) (also in LXX, e.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Genesis 1:2 spiritus Dei = \"the Spirit of God\").",
        "frame": []
    },
    {
        "text": "Semantics Although the terms soul and spirit are sometimes used interchangeably, soul may denote a more worldly and less transcendent aspect of a person.",
        "frame": [
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "According to psychologist James Hillman, soul has an affinity for negative thoughts and images, whereas spirit seeks to rise above the entanglements of life and death.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "negative.a",
                "Frame": "Attitude_description"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "The words soul and psyche can also be treated synonymously, although psyche has more physical connotations, whereas soul is connected more closely to spirituality and religion.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Philosophical views The Ancient Greeks used the same word for 'alive' as for 'ensouled', indicating that the earliest surviving western philosophical view found the terms soul and aliveness were synonymous - perhaps not that having life universally presupposed the possession of a soul as in Buddhism, but that full \"aliveness\" and the soul were conceptually linked.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "western.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "possession.n",
                "Frame": "Possession"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            }
        ]
    },
    {
        "text": "Socrates and Plato Plato, drawing on the words of his teacher Socrates, considered the soul the essence of a person, being that which decides how we behave.",
        "frame": [
            {
                "LU": "draw.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "teacher.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "decide.v",
                "Frame": "Deciding"
            }
        ]
    },
    {
        "text": "He considered this essence to be an incorporeal, eternal occupant of our being.",
        "frame": [
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "occupant.n",
                "Frame": "Residence"
            }
        ]
    },
    {
        "text": "As bodies die the soul is continually reborn in subsequent bodies.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "subsequent.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "The Platonic soul comprises three parts: the logos (mind, nous, or reason) the thymos (emotion, or spiritedness, or masculine) the eros (appetitive, or desire, or feminine) Each of these has a function in a balanced, level and peaceful soul.",
        "frame": [
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "balanced.a",
                "Frame": "Precariousness"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "Aristotle Aristotle defined the soul or psyche as the essence or definition of a living being, but argued against its having a separate existence from the physical body.",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "In Aristotle's view, the primary activity of a living thing constitutes its soul; for example, the soul of an eye, if it were an independent organism, would be seeing (its purpose or final cause).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "living.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "By an imperfect analogy, an artifact, such as a knife or axe, (which has a clear purpose), if it had a soul, that soul would be the act of cutting, because 'cutting' is, in essence, what it is to be a knife.",
        "frame": [
            {
                "LU": "artifact.n",
                "Frame": "Artifact"
            },
            {
                "LU": "knife.n",
                "Frame": "Weapon"
            },
            {
                "LU": "clear.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "cut.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "knife.n",
                "Frame": "Weapon"
            }
        ]
    },
    {
        "text": "Unlike Plato and the medieval religious tradition, Aristotle did not consider the soul to be a separate, immortal occupant of the body; just as the act of cutting cannot occur without a blade, the soul ceases to exist at the death of the body.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "occupant.n",
                "Frame": "Residence"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "cut.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "In his view, the soul is the actuality of a living body.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "More precisely, the soul is the \"first actuality\" of a body, in so far as it has the capacity to be alive.",
        "frame": [
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "alive.a",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "Aristotle used his theory of the soul in many of his works; most notably De Anima (On the Soul).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Aristotle divided the intellectual faculty into two principal parts, the \"deliberative\" or \"calculative\" and the \"scientific\" or \"theoretical\".",
        "frame": [
            {
                "LU": "divide.v",
                "Frame": "Separating"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "principal.a",
                "Frame": "First_rank"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "As these are parts of the rational faculty of man, their correct activity also constitutes the \"excellences\" or \"virtues\" of the rational part of man, of which there are five: art; prudence and science, corresponding in name to the faculties themselves; nous, often translated as \"understanding\" or \"intelligence\"; and sophia, or \"wisdom\".",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "correct.a",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "excellence.n",
                "Frame": "Desirability"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Nous is rational and intuitive comprehension of either a priori or axiomatic first principles and sophia combines this understanding with science.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "Avicenna and Ibn Al-Nafis Following Aristotle, the Persian Muslim philosopher-physician, Avicenna (Ibn Sina) and Arab philosopher Ibn al-Nafis, further elaborated on the Aristotelian understanding of the soul and developed their own theories on the soul.",
        "frame": [
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "Persian.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "They both made a distinction between the soul and the spirit, and in particular, the Avicennian doctrine on the nature of the soul was influential among the Scholastics.",
        "frame": [
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            }
        ]
    },
    {
        "text": "Some of Avicenna's views on the soul included the idea that the immortality of the soul is a consequence of its nature, and not a purpose for it to fulfill.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "fulfill.v",
                "Frame": "Meet_specifications"
            }
        ]
    },
    {
        "text": "In his theory of \"The Ten Intellects\", he viewed the human soul as the tenth and final intellect.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "tenth.n",
                "Frame": "Ordinal_numbers"
            }
        ]
    },
    {
        "text": "While he was imprisoned, Avicenna wrote his famous \"Floating Man\" thought experiment to demonstrate human self-awareness and the substantiality of the soul.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "He told his readers to imagine themselves suspended in the air, isolated from all sensations, which includes no sensory contact with even their own bodies.",
        "frame": [
            {
                "LU": "reader.n",
                "Frame": "Reading_perception"
            },
            {
                "LU": "suspend.v",
                "Frame": "Activity_pause"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "air.v",
                "Frame": "Expressing_publicly"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "contact.n",
                "Frame": "Communication"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "He argues that, in this scenario, one would still have self-consciousness.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            }
        ]
    },
    {
        "text": "He thus concludes that the idea of the self is not logically dependent on any physical thing, and that the soul should not be seen in relative terms, but as a primary given, a substance.",
        "frame": [
            {
                "LU": "conclude.v",
                "Frame": "Process_end"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "relative.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "This argument was later refined and simplified by Ren Descartes in epistemic terms when he stated: \"I can abstract from the supposition of all external things, but not from the supposition of my own consciousness.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "Avicenna generally supported Aristotle's idea of the soul originating from the heart, whereas Ibn al-Nafis rejected this idea and instead argued that the soul \"is related to the entirety and not to one or a few organs\".",
        "frame": [
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "originate.v",
                "Frame": "Origin"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "He further criticized Aristotle's idea that every unique soul requires the existence of a unique source, in this case the heart.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "heart.n",
                "Frame": "Part_orientational"
            }
        ]
    },
    {
        "text": "Ibn al-Nafis concluded that \"the soul is related primarily neither to the spirit nor to any organ, but rather to the entire matter whose temperament is prepared to receive that soul\" and he defined the soul as nothing other than \"what a human indicates by saying 'I'\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Thomas Aquinas Following Aristotle and Avicenna, St.",
        "frame": [
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "Thomas Aquinas understood the soul to be the first principle, or act, of the body.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "However, his epistemological theory required that, since the intellectual soul is capable of knowing all material things, and since in order to know a material thing there must be no material thing within it, the soul was definitely not corporeal.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Therefore, the soul had an operation separate from the body and therefore could subsist without the body.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Furthermore, since the rational soul of human beings was subsistent and was not made up of matter and form, it could not be destroyed in any natural process.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The full argument for the immortality of the soul and Thomas's elaboration of Aristotelian theory is found in Question 75 of the Summa Theologica.",
        "frame": [
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Immanuel Kant In his discussions of rational psychology Immanuel Kant (17241804) identified the soul as the \"I\" in the strictest sense and that the existence of inner experience can neither be proved nor disproved.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "disprove.v",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "\"We cannot prove a priori the immateriality of the soul, but rather only so much: that all properties and actions of the soul cannot be cognized from materiality.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "It is from the \"I\", or soul, that Kant proposes transcendental rationalization, but cautions that such rationalization can only determine the limits of knowledge if it is to remain practical.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "propose.v",
                "Frame": "Statement"
            },
            {
                "LU": "caution.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "James Hillman Contemporary psychology is defined as the study of mental processes and behavior.",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "However, the word \"psychology\" literally means \"study of the soul\", and psychologist James Hillman, the founder of archetypal psychology, has been credited with \"restoring 'soul' to its psychological sense.",
        "frame": [
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "restore.v",
                "Frame": "Rejuvenation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "Although the words soul and spirit are often viewed as synonyms, Hillman argues that they can refer to antagonistic components of a person.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Hillman believes that religionespecially monotheism and monastic faithsand humanistic psychology have tended to the spirit, often at the unfortunate expense of soul.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "unfortunate.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Archetypal psychology acknowledges this third position by attuning to, and often accepting, the archetypes, dreams, myths, and even psychopathologies through which soul, in Hillman's view, expresses itself.",
        "frame": [
            {
                "LU": "acknowledge.v",
                "Frame": "Statement"
            },
            {
                "LU": "position.n",
                "Frame": "Placing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "Philosophy of Mind For a contemporary understanding of the soul/mind and the problem concerning its connection to the brain/body, consider the rejection of Descartes' mind/body dualism by Gilbert Ryle's ghost-in-the-machine argument,[clarification needed] the tenuous unassailability of Richard Swinburne's argument for the soul,[clarification needed] and the advances, which have been made in neuroscience and which are steadily uncovering the truth/falsity[vague] of the concept of an independent soul/mind.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "rejection.n",
                "Frame": "Respond_to_proposal"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The philosophies mind and of personal identity also contribute to a contemporary understanding of the mind.",
        "frame": [
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The contemporary approach does not so much attack the existence of an independent soul as render the concept less relevant.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "attack.n",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "render.v",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "The advances in neuroscience mainly serve to support the mind/brain identity hypothesis, showing the extent of the correlation between mental states and physical-brain states.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "extent.n",
                "Frame": "Quantity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "The notion of soul has less explanatory power in a western world-view which prefers the empirical explanations involving observable and locatable elements of the brain.",
        "frame": [
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "western.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Even so, there remain considerable objections to simple-identity theory.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "considerable.a",
                "Frame": "Importance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Notably, philosophers such as Thomas Nagel and David Chalmers have argued that the correlation between physical-brain states and mental states is not strong enough to support identity theory.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "strong.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Nagel (1974) argues that no amount of physical data is sufficient to provide the \"what it is like\" of first-person experience, and Chalmers (1996) argues for an \"explanatory gap\" between functions of the brain and phenomenal experience.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "gap.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "On the whole, brain/mind identity theory does poorly in accounting for mental phenomena of qualia and intentionality.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "account.v",
                "Frame": "Justifying"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "While neuroscience has done much to illuminate the functioning of the brain, much of subjective experience remains mysterious.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "Buddhism Buddhism teaches that all things are in a constant state of flux: all is changing, and no permanent state exists by itself.",
        "frame": [
            {
                "LU": "teach.v",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "This applies to human beings as much as to anything else in the cosmos.",
        "frame": [
            {
                "LU": "apply.v",
                "Frame": "Come_into_effect"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Thus, a human being has no permanent self.",
        "frame": [
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            }
        ]
    },
    {
        "text": "According to this doctrine of anatta (Pli; Sanskrit: antman)  \"no-self\" or \"no soul\"  the words \"I\" or \"me\" do not refer to any fixed thing.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "They are simply convenient terms that allow us to refer to an ever-changing entity.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "The anatta doctrine is not a kind of materialism.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "Buddhism does not deny the existence of \"immaterial\" entities, and it (at least traditionally) distinguishes bodily states from mental states.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "deny.v",
                "Frame": "Prevent_or_allow_possession"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Thus, the conventional translation of anatta as \"no-soul\" can be confusing.",
        "frame": [
            {
                "LU": "conventional.a",
                "Frame": "Typicality"
            },
            {
                "LU": "confuse.v",
                "Frame": "Experiencer_obj"
            }
        ]
    },
    {
        "text": "If the word \"soul\" simply refers to an incorporeal component in living things that can continue after death, then Buddhism does not deny the existence of the soul.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "deny.v",
                "Frame": "Prevent_or_allow_possession"
            }
        ]
    },
    {
        "text": "Instead, Buddhism denies the existence of a permanent entity that remains constant behind the changing corporeal and incorporeal components of a living being.",
        "frame": [
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "behind.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "Just as the body changes from moment to moment, so thoughts come and go.",
        "frame": [
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "so.adv",
                "Frame": "Causation"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            }
        ]
    },
    {
        "text": "And there is no permanent, underlying mind that experiences these thoughts, as in Cartesianism; rather, conscious mental states simply arise and perish with no \"thinker\" behind them.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "behind.prep",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "When the body dies, the incorporeal mental processes continue and are reborn in a new body.",
        "frame": [
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Because the mental processes are constantly changing, the being that is reborn is neither entirely different than, nor exactly the same as, the being that died.",
        "frame": [
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "However, the new being is continuous with the being that died  in the same way that the \"you\" of this moment is continuous with the \"you\" of a moment before, despite the fact that you are constantly changing.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            }
        ]
    },
    {
        "text": "Buddhist teaching holds that a notion of a permanent, abiding self is a delusion that is one of the causes of human conflict on the emotional, social, and political levels.",
        "frame": [
            {
                "LU": "teach.v",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "conflict.n",
                "Frame": "Hostile_encounter"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "They add that an understanding of anatta provides an accurate description of the human condition, and that this understanding allows us to pacify our mundane desires.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "accurate.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "condition.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            }
        ]
    },
    {
        "text": "Various schools of Buddhism have differing ideas about what continues after death.",
        "frame": [
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "The Yogacara school in Mahayana Buddhism said there are Store consciousness which continue to exist after death.",
        "frame": [
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "In some schools, particularly Tibetan Buddhism, the view is that there are three minds: very subtle mind, which does not disintegrate in death; subtle mind, which disintegrates in death and which is \"dreaming mind\" or \"unconscious mind\"; and gross mind, which does not exist when one is sleeping.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            }
        ]
    },
    {
        "text": "Therefore, gross mind less permanent than subtle mind, which does not exist in death.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "Very subtle mind, however, does continue, and when it \"catches on\", or coincides with phenomena, again, a new subtle mind emerges, with its own personality/assumptions/habits, and that entity experiences karma in the current continuum.",
        "frame": [
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Certain modern Buddhists, particularly in Western countries, rejector at least take an agnostic stance towardthe concept of rebirth or reincarnation, which they view as incompatible with the concept of anatta.",
        "frame": [
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "western.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "country.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Stephen Batchelor discusses this issue in his book, Buddhism Without Beliefs.",
        "frame": [
            {
                "LU": "discuss.v",
                "Frame": "Speak_on_topic"
            },
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Others point to research that has been conducted at the University of Virginia as proof that some people are reborn.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "conduct.v",
                "Frame": "Cotheme"
            },
            {
                "LU": "university.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "proof.n",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "Judaism The Hebrew terms nephesh, ruach (literally \"wind\"), and neshama (literally \"breath\") are used to describe the soul or spirit.",
        "frame": [
            {
                "LU": "wind.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "The soul is believed to be given by God to a person by his/her first breath, as mentioned in Genesis, \"And the LORD God formed man [of] the dust of the ground, and breathed into his nostrils the breath of life; and man became a living soul.",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "dust.v",
                "Frame": "Placing"
            },
            {
                "LU": "breathe.v",
                "Frame": "Breathing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "From this statement, the rabbinical interpretation is often that human embryos do not have souls, though the orthodox often oppose abortion as a form of birth control.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "oppose.v",
                "Frame": "Taking_sides"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            }
        ]
    },
    {
        "text": "Judaism relates the quality of one's soul to one's performance of mitzvot and reaching higher levels of understanding, and thus closeness to God.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "reach.v",
                "Frame": "Range"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A person with such closeness is called a tzadik.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "Judaism also has a concept of purity of body and soul, which requires avoidance of \"unclean\" things.",
        "frame": [
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            }
        ]
    },
    {
        "text": "Such practices mentioned in the Torah include the keeping of kashrut and daily bathing (tevilah) in a mikveh.",
        "frame": [
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "daily.a",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In biblical times, it was believed that \"impurity\" was something that could be spread by touching, and unclean people were temporarily separated from the group.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "touch.v",
                "Frame": "Impact"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "separate.v",
                "Frame": "Differentiation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "group.n",
                "Frame": "Organization"
            }
        ]
    },
    {
        "text": "Though Jewish theology does not agree on the nature of an afterlife, the soul is said to \"return to God\" after death.",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "Kabbalah and other mystic traditions go into greater detail into the nature of the soul.",
        "frame": [
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "tradition.n",
                "Frame": "Custom"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Kabbalah separates the soul into three elements: the nephesh is related to instinct, the ruach is related to morality, and the neshamah is related to intellect and the awareness of God.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Kabbalah furthermore proposed a concept of reincarnation, the gilgul.",
        "frame": []
    },
    {
        "text": "Christianity Soul carried to Heaven by William Bouguereau The Christian view of the soul is based upon the teaching of both the Old Testament and New Testament.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "christian.n",
                "Frame": "People_by_religion"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "testament.n",
                "Frame": "Documents"
            },
            {
                "LU": "testament.n",
                "Frame": "Documents"
            }
        ]
    },
    {
        "text": "The Old Testament contains the statements \"Then shall the dust return to the earth as it was: and the spirit shall return unto God who gave it\" (Ecclesiastes 12:7) and \"And the LORD God formed man [of] the dust of the ground, and breathed into his nostrils the breath of life; and man became a living soul.",
        "frame": [
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "testament.n",
                "Frame": "Documents"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "shall.v",
                "Frame": "Required_event"
            },
            {
                "LU": "dust.v",
                "Frame": "Placing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "shall.v",
                "Frame": "Required_event"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "dust.v",
                "Frame": "Placing"
            },
            {
                "LU": "breathe.v",
                "Frame": "Breathing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "In the New Testament can be found a statement by Paul the Apostle, \"And so it is written, the first man Adam was made a living soul; the last Adam [was made] a quickening spirit.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "testament.n",
                "Frame": "Documents"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "living.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "Most Christians understand the soul as an ontological reality distinct from, yet integrally connected with, the body.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Its characteristics are described in moral, spiritual, and philosophical terms.",
        "frame": [
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "moral.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "When people die, their souls will be judged by God and determined to spend an eternity in heaven or in hell.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "spend.v",
                "Frame": "Using_resource"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Though all branches of Christianity Catholics, Eastern Orthodox and Oriental Orthodox, Evangelical or mainline Protestants  teach that Jesus Christ plays a decisive role in the salvation process, the specifics of that role and the part played by individual persons or ecclesiastical rituals and relationships, is a matter of wide diversity in official church teaching, theological speculation and popular practice.",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "decisive.a",
                "Frame": "Margin_of_resolution"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "play.v",
                "Frame": "Competition"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "ritual.n",
                "Frame": "Custom"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "official.n",
                "Frame": "Leadership"
            },
            {
                "LU": "church.n",
                "Frame": "Buildings"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Some Christians believe that if one has not repented of one's sins and trusted in Jesus Christ as Lord and Saviour, one will go to hell and suffer eternal separation from God.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "sin.n",
                "Frame": "Misdeed"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "separation.n",
                "Frame": "Forming_relationships"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Variations also exist on this theme, e.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "theme.n",
                "Frame": "Topic"
            }
        ]
    },
    {
        "text": "some which hold that the unrighteous soul will be destroyed instead of suffering eternally (Annihilationism).",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "suffer.v",
                "Frame": "Catastrophe"
            }
        ]
    },
    {
        "text": "Believers will inherit eternal life in heaven and enjoy eternal fellowship with God.",
        "frame": [
            {
                "LU": "will.v",
                "Frame": "Giving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "There is also a belief that babies (including the unborn) and those with cognitive or mental impairments who have died will be received into heaven on the basis of God's grace through the sacrifice of Jesus.",
        "frame": [
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "sacrifice.n",
                "Frame": "Sacrificing_for"
            }
        ]
    },
    {
        "text": "Roman Catholic Beliefs Among Christians, there is uncertainty regarding whether human embryos have souls, and at what point between conception and birth the fetus acquires a soul and consciousness.",
        "frame": [
            {
                "LU": "roman.a",
                "Frame": "Origin"
            },
            {
                "LU": "among.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "This uncertainty is the general reasoning behind many Christians' belief that abortion should not be legal.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "behind.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "The present Catechism of the Catholic Church defines the soul as \"the innermost aspect of humans, that which is of greatest value in them, that by which they are most especially in God's image: 'soul' signifies the spiritual principle in man.",
        "frame": [
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "church.n",
                "Frame": "Buildings"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "All souls living and dead will be Judged by Jesus Christ when he comes back to earth.",
        "frame": [
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "earth.n",
                "Frame": "Locale"
            }
        ]
    },
    {
        "text": "The souls of those who die unrepentant of serious sins, or in conscious rejection of God, will at judgment day may be forever in a state called Hell.",
        "frame": [
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "serious.a",
                "Frame": "Importance"
            },
            {
                "LU": "sin.n",
                "Frame": "Misdeed"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "rejection.n",
                "Frame": "Respond_to_proposal"
            },
            {
                "LU": "judgment.n",
                "Frame": "Legal_rulings"
            },
            {
                "LU": "day.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The Catholic Church teaches that the existence of each individual soul is dependent wholly upon God: \"The doctrine of the faith affirms that the spiritual and immortal soul is created immediately by God.",
        "frame": [
            {
                "LU": "church.n",
                "Frame": "Buildings"
            },
            {
                "LU": "teach.v",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Hinduism In Hinduism, the Sanskrit words most closely corresponding to soul are \"Jeeva\", \"Atman\" and \"Purusha\", meaning the individual Self.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "The term \"soul\" is misleading as it implies an object possessed, whereas Self signifies the subject which perceives all objects.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "possess.v",
                "Frame": "Possession"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "This self is held to be distinct from the various mental faculties such as desires, thinking, understanding, reasoning and self-image (ego), all of which are considered to be part of Prakriti (nature).",
        "frame": [
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "In Bhagavad - Gita 2.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "20 Lord Krishna describes the soul in the following way: \"For the soul there is neither birth nor death at any time.",
        "frame": [
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "He has not come into being, does not come into being, and will not come into being.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "will.v",
                "Frame": "Giving"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "He is unborn, eternal, ever - existing and primeval.",
        "frame": []
    },
    {
        "text": "He is not slain when the body is slain.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "when.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Srila Prabhupada, a great Vaishnava saint of the modern time further explains: The soul does not take birth there, and the soul does not die.",
        "frame": [
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "And because the soul has no birth, he therefore has no past, present or future.",
        "frame": [
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "He is eternal, ever-existing and primeval - that is, there is no trace in history of his coming into being.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Since the quality of Atman is primarily consciousness, all sentient and insentient beings are pervaded by Atman, including plants, animals, humans and gods.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "plant.n",
                "Frame": "Placing"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            }
        ]
    },
    {
        "text": "The difference between them is the contracted or expanded state of that consciousness.",
        "frame": [
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "For example, animals and humans share in common the desire to live, fear of death, desire to procreate and to protect their families and territory and the need for sleep, but animals' consciousness is more contracted and has less possibility to expand than does human consciousness.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fear.n",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "territory.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "When the Atman becomes embodied it is called birth, when the Atman leaves a body it is called death.",
        "frame": [
            {
                "LU": "leave.v",
                "Frame": "Causation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "The Atman transmigrates from one body to another body based on karmic [performed deeds] reactions.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "deed.n",
                "Frame": "Documents"
            }
        ]
    },
    {
        "text": "Islam There is a hadith reported by Abd Allah ibn Mas'ud, in which it is stated that the soul is put into the human embryo 40 days after fertilization takes place.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "day.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "This version of hadith is supported by some other hadiths narrated by Sahih al-Bukhari and Sahih Al Muslim.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "The hadith is as follows: \"Verily the creation of every one of you is brought together in the mother's womb as a drop of semen for forty days, then it becomes a clot for the same period, then it becomes a blob of flesh for the same period.",
        "frame": [
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "bring.v",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "mother.n",
                "Frame": "Kinship"
            },
            {
                "LU": "drop.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "day.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "become.v",
                "Frame": "Becoming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "become.v",
                "Frame": "Becoming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Then the angel will be sent unto it to blow into it a SPIRIT, and the angel is ordered (to carry out) with four instructions, to write down its livelihood, the span of life, its deeds, and whether it is wretched or fortunate.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "send.v",
                "Frame": "Sending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "order.v",
                "Frame": "Law"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            }
        ]
    },
    {
        "text": "According to the Quran, Ruh (Soul) is a command from Allah (God).",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "\"They put questions to you concerning the Spirit.",
        "frame": [
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            }
        ]
    },
    {
        "text": "Say the Spirit is at my Lord's command.",
        "frame": []
    },
    {
        "text": "and of knowledge only a meagre part has been imparted to you.",
        "frame": [
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "(Qur'an 17:85) Taoism According to Chinese traditions, every person has two types of soul called hun and po, which are respectively yang and yin.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "tradition.n",
                "Frame": "Custom"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Taoism believes in ten souls, sanhunqipo  \"three hun and seven po\".",
        "frame": [
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The p is linked to the dead body and the grave, whereas the hn is linked to the ancestral tablet.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A living being that loses any of them is said to have mental illness or unconsciousness, while a dead soul may reincarnate to a disability, lower desire realms or may even be unable to reincarnate.",
        "frame": [
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "lose.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "illness.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "unable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Also, Journeys to the Under-World said there can be hundreds of divisible souls.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "hundred.num",
                "Frame": "Cardinal_numbers"
            }
        ]
    },
    {
        "text": "Zoroastrianism In theological reference to the soul, the terms \"life\" and \"death\" are viewed as emphatically more definitive than the common concepts of \"biological life\" and \"biological death\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "Because the soul is said to be transcendent of the material existence, and is said to have (potentially) eternal life, the death of the soul is likewise said to be an eternal death.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "Thus, in the concept of divine judgment, God is commonly said to have options with regard to the dispensation of souls, ranging from Heaven (i.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "judgment.n",
                "Frame": "Legal_rulings"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "regard.n",
                "Frame": "Categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "angels) to hell (i.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "demons), with various concepts in between.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Typically both Heaven and hell are said to be eternal, or at least far beyond a typical human concept of lifespan and time.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Some transhumanists believe that it will become possible to perform mind transfer, either from one human body to another, or from a human body to a computer.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Operations of this type (along with teleportation), raise philosophical questions related to the concept of the soul.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Spirituality and New Age In Helena Blavatsky's Theosophy the soul is the field of our psychological activity (thinking, emotions, memory, desires, will, and so on) as well as of the so-called paranormal or psychic phenomena (extrasensory perception, out-of-body experiences, etc.",
        "frame": [
            {
                "LU": "age.n",
                "Frame": "Age"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "However, the soul is not the highest, but a middle dimension of human beings.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "middle.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "human.a",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Higher than the soul is the spirit, which is considered to be the real self; the source of everything we call goodhappiness, wisdom, love, compassion, harmony, peace, etc.",
        "frame": [
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "love.v",
                "Frame": "Experiencer_focus"
            }
        ]
    },
    {
        "text": "While the spirit is eternal and incorruptible, the soul is not.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "The soul acts as a link between the material body and the spiritual self, and therefore shares some characteristics of both.",
        "frame": [
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "The soul can be attracted either towards the spiritual or towards the material realm, being thus the battlefield of good and evil.",
        "frame": [
            {
                "LU": "attract.v",
                "Frame": "Cause_motion"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "battlefield.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "evil.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "It is only when the soul is attracted towards the spiritual and merges with the Self that it becomes eternal and divine.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "attract.v",
                "Frame": "Cause_motion"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "become.v",
                "Frame": "Becoming"
            }
        ]
    },
    {
        "text": "Rudolf Steiner differentiated three stages of soul development, which interpenetrate one another in consciousness: an initial centering on sensations, drives, and passions, with strong conative (will) and emotional components, which he termed the \"sentient soul\"; a developing focus on internalizations of and reflections on outer experience, with strong affective (feeling) and cognitive (thinking) components, which he termed the \"intellectual\" or \"mind soul\"; and a search for factors not dependent upon personal considerations, objective truths, which he termed the \"consciousness soul\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "strong.a",
                "Frame": "Judgment_of_intensity"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "feel.v",
                "Frame": "Seeking"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "factor.n",
                "Frame": "Contingency"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Some people, who do not necessarily favor organized religions, simply label themselves as \"spiritual\" and hold that both humans and all other living creatures have souls.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "favor.v",
                "Frame": "Preference"
            },
            {
                "LU": "label.v",
                "Frame": "Labeling"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "Some further believe the entire universe has a cosmic soul as a spirit or unified consciousness.",
        "frame": [
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "Such a conception of the soul may link with the idea of an existence before and after the present one, and one could consider such a soul as the spark, or the self, the \"I\" in existence that feels and lives life.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "In Surat Shabda Yoga, the soul is considered to be an exact replica and spark of the Divine.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "exact.a",
                "Frame": "Accuracy"
            }
        ]
    },
    {
        "text": "The purpose of Surat Shabd Yoga is to realize one's True Self as soul (Self-Realisation), True Essence (Spirit-Realisation) and True Divinity (God-Realisation) while living in the physical body.",
        "frame": [
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "realize.v",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "George Gurdjieff in his Fourth Way taught that nobody is ever born with a soul.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "fourth.a",
                "Frame": "Ordinal_numbers"
            },
            {
                "LU": "teach.v",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "Rather, an individual must create a soul[vague] during the course of their life.",
        "frame": [
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "course.n",
                "Frame": "Roadways"
            }
        ]
    },
    {
        "text": "Without a soul, Gurdjieff taught that one will \"die like a dog\".",
        "frame": [
            {
                "LU": "teach.v",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "die.v",
                "Frame": "Death"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "dog.n",
                "Frame": "Cotheme"
            }
        ]
    },
    {
        "text": "Eckankar, founded by Paul Twitchell in 1965, defines Soul as the true self; the inner, most sacred part of each person.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "The Indian spiritual teacher Meher Baba also held that the nature of the soul is divine: God is indivisibly in everyone and everything.",
        "frame": [
            {
                "LU": "indian.a",
                "Frame": "Origin"
            },
            {
                "LU": "teacher.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The apparent separateness is due to ignorance.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A drop in the ocean is one with the ocean, and as soon as a bubble forms over it, it becomes separate from the ocean.",
        "frame": [
            {
                "LU": "drop.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "ocean.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "become.v",
                "Frame": "Becoming"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "ocean.n",
                "Frame": "Natural_features"
            }
        ]
    },
    {
        "text": "And when the bubble bursts, the drop is again one with the ocean.",
        "frame": [
            {
                "LU": "drop.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "ocean.n",
                "Frame": "Natural_features"
            }
        ]
    },
    {
        "text": "In the same way the soul, when it is covered by the bubble of mind, energy and matter, becomes separate from God.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "But as soon as the bubble is burst, which is when the ego-self is annihilated through love for God, it finds that it is One with God.",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "love.v",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "Science Science and medicine seek naturalistic accounts of the observable natural world.",
        "frame": [
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "medicine.n",
                "Frame": "Medical_specialties"
            },
            {
                "LU": "seek.v",
                "Frame": "Seeking"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            }
        ]
    },
    {
        "text": "This stance is known as methodological naturalism.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Much of the scientific study relating to the soul has involved investigating the soul as an object of human belief, or as a concept that shapes cognition and an understanding of the world, rather than as an entity in and of itself.",
        "frame": [
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "relate.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "When modern scientists speak of the soul outside of this cultural and psychological context, they generally treat soul as a poetic synonym for mind.",
        "frame": [
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "speak.v",
                "Frame": "Statement"
            },
            {
                "LU": "outside.prep",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Francis Crick's book, The Astonishing Hypothesis, for example, has the subtitle, \"The scientific search for the soul\".",
        "frame": [
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Crick held the position that one can learn everything knowable about the human soul by studying the workings of the human brain.",
        "frame": [
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "study.v",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "Depending on one's belief regarding the relationship between the soul and the mind, then, the findings of neuroscience may be relevant to one's understanding of the soul.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "finding.n",
                "Frame": "Documents"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Skeptic Robert T.",
        "frame": []
    },
    {
        "text": "Carroll suggests that the concept of a non-substantial substance is an oxymoron, and that the scholarship done by philosophers and psychologists based on the assumption of a non-physical entity has not furthered scientific understanding of the working of the mind.",
        "frame": [
            {
                "LU": "suggest.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "To extend the above hypothesis, one can argue that every kind of matter or energy exchange between a human biological system and its environment can be attributed to a series of complex physical and chemical transformations that occur inside the body and are largely controlled by the brain.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "exchange.n",
                "Frame": "Exchange"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "chemical.a",
                "Frame": "Substance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "inside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Hence many phenotypic, genotypic, behavioral and emotional characteristics or states of a human can be identified as bearing physio-chemical cause.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            },
            {
                "LU": "bear.v",
                "Frame": "Bringing"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "For example, solar radiation carries electromagnetic energy that causes the accumulation of the pigment melanin in skin cells, which is perceived as tanning.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "cause.v",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            }
        ]
    },
    {
        "text": "Neurochemicals (most famously endorphins) are responsible for what can be described as feelings of well being, love and pain.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "responsible.a",
                "Frame": "Causation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "love.v",
                "Frame": "Experiencer_focus"
            }
        ]
    },
    {
        "text": "Similarly, memory can be seen as an atomic reconstruction of an image in the brain at the expense of chemical energy taken in by food.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "at.prep",
                "Frame": "Being_employed"
            },
            {
                "LU": "expense.n",
                "Frame": "Expensiveness"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "food.n",
                "Frame": "Food"
            }
        ]
    },
    {
        "text": "More social or long-term characteristics such as one's beliefs may be regarded as a combination of chemical concentrations and molecular arrangements, organized in a kind of chemical recipe formulated over the course of years or millennia.",
        "frame": [
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "characteristic.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "regard.v",
                "Frame": "Topic"
            },
            {
                "LU": "combination.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "chemical.a",
                "Frame": "Substance"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            },
            {
                "LU": "course.n",
                "Frame": "Roadways"
            },
            {
                "LU": "millennium.n",
                "Frame": "Calendric_unit"
            }
        ]
    },
    {
        "text": "An early precursor of this recipe is the primordial soup.",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "precursor.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Crudely put, the soul can be defined as chemical information exhibited on living matter.",
        "frame": [
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "exhibit.v",
                "Frame": "Cause_to_perceive"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            }
        ]
    },
    {
        "text": "A strict line of causality fails to explain certain phenomenon within human experience such as free will, which have at times been attributed to the soul.",
        "frame": [
            {
                "LU": "strict.a",
                "Frame": "Strictness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "(See also: Determinism and free will) In his book Consilience, E.",
        "frame": [
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Wilson took note that sociology has identified belief in a soul as one of the universal human cultural elements.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Wilson suggested that biologists need to investigate how human genes predispose people to believe in a soul.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "investigate.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Daniel Dennett has championed the idea that the human survival strategy depends heavily on adoption of the intentional stance, a behavioral strategy that predicts the actions of others based on the expectation that they have a mind like one's own (see theory of mind).",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "survival.n",
                "Frame": "Surviving"
            },
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "heavily.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "predict.v",
                "Frame": "Expectation"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "Mirror neurons in brain regions such as Broca's area may facilitate this behavioral strategy.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The intentional stance, Dennett suggests, has proven so successful that people tend to apply it to all aspects of human experience, thus leading to animism and to other conceptualizations of soul.",
        "frame": [
            {
                "LU": "suggest.v",
                "Frame": "Statement"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "successful.a",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "lead.v",
                "Frame": "First_rank"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The word-concept Soul has a secular and non-secular aspect.",
        "frame": [
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "To integrate the two in a coherent statement Soul would be defined as: The interaction of mind, body and spirit reflecting through conscience the appropriateness of individual or collective behavior.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            },
            {
                "LU": "reflect.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Through a connection to the Soul the mind apprehends abstractions implicit in spirit whether that be of transcendent derivation or temporal analysis.",
        "frame": [
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "abstraction.n",
                "Frame": "Theft"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "Understanding Understanding (also called intellection) is a psychological process related to an abstract or physical object, such as a person, situation, or message whereby one is able to think about it and use concepts to deal adequately with that object.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "message.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "adequately.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Understanding is a relation between the knower and an object of understanding.",
        "frame": [
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "Understanding implies abilities and dispositions with respect to an object of knowledge sufficient to support intelligent behavior.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "sufficient.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "An understanding is the limit of a conceptualization.",
        "frame": []
    },
    {
        "text": "To understand something is to have conceptualized it to a given measure.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "measure.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "Yes, albeit with difficulty.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            }
        ]
    },
    {
        "text": "The easiest way to define understanding is to do so in respect of specific relationships.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            }
        ]
    },
    {
        "text": "For examples one can define the concept in the context of trust between two individuals.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "A good example is the definition proposed by a Doctoral researcher from the University of Cranfield UK.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "researcher.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "university.n",
                "Frame": "Locale_by_use"
            }
        ]
    },
    {
        "text": "In his analysis of \"understanding as an antecedents of trust in virtual organisations, Joel De Messan (2011) proposed the following explanation of Understanding.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "\"To understand someone or something, is to possess enough information about the person or thing to be able to accurately explain their unique behaviours and characteristics, accommodate their differences, or display tolerance and compassion in one's actions or judgement towards them on the basis of the insight that the information possessed provides into their reality\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "unique.a",
                "Frame": "Idiosyncrasy"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "possess.v",
                "Frame": "Possession"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "He therefore defined understanding as \"The successful sense-making or accurate synthesis of information relating to an entity (a person, an object, a concept, or a phenomenon) that permits a justified explanation of the characteristics, behaviors and events associated with the entity\".",
        "frame": [
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "successful.a",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "accurate.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "relate.v",
                "Frame": "Statement"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "permit.v",
                "Frame": "Documents"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "In this definition, Mr De Messan emphasizes that true understanding is independent of the belief of the person who understands.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "mr.n",
                "Frame": "Appellations"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "It is an absolute function of the logic applied to observations and the accuracy of ones interpretation of the facts that concern the entity.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "True understanding can only be achieved if the observer obtains and processes enough information about the entity under scrutiny to arrive at conclusions that will always remain true.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "achieve.v",
                "Frame": "Accomplishment"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "process.v",
                "Frame": "Process"
            },
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "scrutiny.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "arrive.v",
                "Frame": "Arriving"
            },
            {
                "LU": "conclusion.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "Ones understanding of something only becomes equal to real understanding when the assertions made about the thing are absolute and always true.",
        "frame": [
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "If future improvements in our logics, formulas, reasoning etc could invalidate ones current explanation of a phenomenon, then the understanding that yielded the explanation does not qualify as true understanding, or better still, is only as true as current knowledge permits.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "permit.n",
                "Frame": "Documents"
            }
        ]
    },
    {
        "text": "Hence, he argues, there are degrees of understanding as well as understanding at a point in time (a collective state of opinion) all of which ultimately seek to become true understanding.",
        "frame": [
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "ultimately.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "seek.v",
                "Frame": "Seeking"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The conclusion of this definition is that our closeness to true understanding is only as good as the information we possess, the logic of analysis we apply to the information we have and the finality of our reference point.",
        "frame": [
            {
                "LU": "conclusion.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "As this shows, it is difficult to define understanding.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "If we use the term concept as above, the question then arises as to what is a concept.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Is it an abstract thing.",
        "frame": []
    },
    {
        "text": "Is it a brain pattern or a rule.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            }
        ]
    },
    {
        "text": "Whatever definition is proposed, we can still ask how it is that we understand the thing that is featured in the definition: we can never satisfactorily define a concept, still less use it to explain understanding.",
        "frame": [
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "It may be more convenient to use an operational or behavioral definition, that is, to say that \"somebody who reacts appropriately to x understands x\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "operational.a",
                "Frame": "Being_operational"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "somebody.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "For example, one understands Swahili if one correctly obeys commands given in that language.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "command.n",
                "Frame": "Request"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "This approach, however, may not provide an adequate definition.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "A computer can easily be programmed to react appropriately to commands, but there is a disagreement as to whether or not the computer understands the language (see the Chinese room argument).",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "command.n",
                "Frame": "Request"
            },
            {
                "LU": "disagreement.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            }
        ]
    },
    {
        "text": "According to the independent socionics researcher Rostislav Persion: In the cognitive model presented by MBTI, the process of introverted thinking (Ti) is thought to represent understanding through cause and effect relationships or correlations.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            }
        ]
    },
    {
        "text": "One can construct a model of a system by observing correlations between all the relevant properties (e.",
        "frame": [
            {
                "LU": "construct.v",
                "Frame": "Building"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "observe.v",
                "Frame": "Statement"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "The output of a NAND gate relative to its inputs).",
        "frame": [
            {
                "LU": "gate.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "relative.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "This allows the person to generate truths about the system and then to apply the model to demonstrate his or her understanding.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "A mechanic for example may randomly, or algorithmically probe the inputs and outputs of a black box to understand the internal components through the use of induction.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "output.n",
                "Frame": "Labor_product"
            },
            {
                "LU": "black.a",
                "Frame": "Level_of_light"
            },
            {
                "LU": "box.n",
                "Frame": "Measure_volume"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "INTP, ISTP, ESTP, and ENTP all use Ti and are usually the best of the 16 types at understanding their material environment in a bottom-up manner.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "These types may enjoy mechanics and digital electronics because of the 1 to 1 correlation between cause and effect relationships in these fields.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Understanding is not limited to these types however as other types demonstrate an identical process, although in other planes of reality; ie.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "Social, Theological and Aesthetic.",
        "frame": []
    },
    {
        "text": "A potential reason for the association of understanding with the former personality types is due to a social phenomenon for asymmetrical distribution of gratification.",
        "frame": [
            {
                "LU": "potential.a",
                "Frame": "Capability"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "association.n",
                "Frame": "Organization"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "distribution.n",
                "Frame": "Dispersal"
            }
        ]
    },
    {
        "text": "In the field of engineering, engineers probe or study the inputs and outputs of components to understand their functionality.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "engineer.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "output.n",
                "Frame": "Labor_product"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "These components are then combined based on their functionality (similar to computer programming) to create a larger, more complex system.",
        "frame": [
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "This is the reason why engineers attempt to subdivide ideas as deep as possible to obtain the lowest level of knowledge.",
        "frame": [
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "engineer.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "deep.a",
                "Frame": "Dimension"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "obtain.v",
                "Frame": "Getting"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "This makes their models more detailed and flexible.",
        "frame": [
            {
                "LU": "make.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "It may be useful to know the formulas that govern an ideal gas, but to visualise the gas as being made up of small moving particles, which are in turn made up of even smaller particles, is true understanding.",
        "frame": [
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "ideal.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "turn.n",
                "Frame": "Becoming"
            }
        ]
    },
    {
        "text": "People who are understanding (through the use of Ti) usually value objects and people based on usefulness, as opposed to the people who use extroverted thinking (Te) who view people or things as having a worth.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "view.v",
                "Frame": "Range"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "In order to test one's understanding it is necessary to present a question that forces the individual to demonstrate the possession of a model, derived from observable examples of that model's production or potential production (in the case that such a model did not exist beforehand).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "force.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "possession.n",
                "Frame": "Possession"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "potential.a",
                "Frame": "Capability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Rote memorization can present an illusion of understanding, however when other questions are presented with modified attributes within the query, the individual cannot create a solution due to a lack of a deeper representation of reality.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "lack.n",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "Another significant point of view holds that knowledge is the simple awareness of bits of information.",
        "frame": [
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Understanding is the awareness of the connection between the individual pieces of this information.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "It is understanding which allows knowledge to be put to use.",
        "frame": [
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Therefore, understanding represents a deeper level than simple knowledge.",
        "frame": [
            {
                "LU": "represent.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "It would be difficult if not impossible to provide citation for the previous point as it is incorrect.",
        "frame": [
            {
                "LU": "difficult.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The actual order can best be clarified with a common usage example that can be applied to any task, in this case baking a cake.",
        "frame": [
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "bake.v",
                "Frame": "Apply_heat"
            }
        ]
    },
    {
        "text": "If one is explaining how to bake a cake to someone who has no previous constructs as to what exactly goes into baking a cake and the second person is able to grasp the material presented, it 'makes sense.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "bake.v",
                "Frame": "Apply_heat"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "exactly.adv",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "bake.v",
                "Frame": "Apply_heat"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "This statement that it makes sense does not imply any retention of the information beyond the immediate.",
        "frame": [
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "If one watches cooking shows and can explain unprompted without immediate previous explanation what is necessary to bake a cake, they 'understand' baking a cake.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "bake.v",
                "Frame": "Apply_heat"
            },
            {
                "LU": "bake.v",
                "Frame": "Apply_heat"
            }
        ]
    },
    {
        "text": "This does not imply they have the necessary skill set to actually bake a cake.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "skill.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "bake.v",
                "Frame": "Apply_heat"
            }
        ]
    },
    {
        "text": "If one states they have knowledge as in 'I know how to bake a cake' it carries with it the understanding they can take raw ingredients and produce edible results.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "ingredient.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "This example could extend to any common usage I can think of, such as watching construction shows, art shows, etc.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "watch.v",
                "Frame": "Seeking"
            },
            {
                "LU": "construction.n",
                "Frame": "Building"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "art.n",
                "Frame": "Craft"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            }
        ]
    },
    {
        "text": "may give you understanding of building a house, painting a picture but they do not carry with it the physical application that properly used, saying one 'knows how' does.",
        "frame": [
            {
                "LU": "house.n",
                "Frame": "Provide_lodging"
            },
            {
                "LU": "paint.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "picture.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "I believe the previous point was drawn from revised Bloom's Taxonomy in which the original taxonomy had knowledge as the first tier and the revised taxonomy had understanding listed as the second tier.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Note that neither model had both terms used together.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Furthermore said correlation is in direct contradiction to common usage that has been accepted long before the models so 'if' the models are trying to say this, they are in fact flawed.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "try.v",
                "Frame": "Attempt_means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "One final clarifying point is that of scope.",
        "frame": [
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "point.n",
                "Frame": "Locale"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "scope.n",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "Say we have someone who has watched many shows on deck building, cake making, whatever.",
        "frame": [
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "That person could have significant understanding that goes beyond the level of a handyman who builds decks in a limited set of variations.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "set.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "The handyman 'knows' how to build a deck but the first person 'understands' a wider scope potentially of deck building.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "In the final analysis, the difference between understanding and knowledge in the most widely accepted common usage is therefore a matter of application.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "In reference to Blooms Taxonomy it is a theoretical model that doesn't accurately map common usage so I would submit therefore could use further revision.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "Knowledge in common usage would be roughly synonymous with 'Application' in the model.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "Gregory Chaitin, a noted computer scientist, propounds a view that comprehension is a kind of data compression.",
        "frame": [
            {
                "LU": "scientist.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "In his essay \"The Limits of Reason\", he argues that understanding something means being able to figure out a simple set of rules that explains it.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "figure.v",
                "Frame": "Opinion"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "For example, we understand why day and night exist because we have a simple modelthe rotation of the earththat explains a tremendous amount of datachanges in brightness, temperature, and atmospheric composition of the earth.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "day.n",
                "Frame": "Location_in_time"
            },
            {
                "LU": "night.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "temperature.n",
                "Frame": "Temperature"
            }
        ]
    },
    {
        "text": "We have compressed a large amount of information by using a simple model that predicts it.",
        "frame": [
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "predict.v",
                "Frame": "Expectation"
            }
        ]
    },
    {
        "text": "Similarly, we understand the number 0.",
        "frame": [
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "33333.",
        "frame": []
    },
    {
        "text": "by thinking of it as one-third.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "The first way of representing the number requires an infinite amount of memory; but the second way can produce all the data of the first representation, but uses much less information.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Chaitin argues that comprehension is this ability to compress data.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Understanding Basic English To test Conceptive C, I have decided to write a Basic English Bot that understands basic English enough to have a simple conversation with.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "decide.v",
                "Frame": "Deciding"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "enough.n",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "We need a parser that takes input from a Terminal Portal.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Parses the input into Words and Sentences, then uses rules to answer the question that is asked and send the output back to the terminal Portal.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "answer.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "We need to build a Dictionary with all of the Basic English 850 Words in it.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Basic English (British American Scientific International Commercial) is a constructed (made-up) language to explain complex thoughts with 850 basic English words chosen by Charles Kay Ogden.",
        "frame": [
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "American.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "choose.v",
                "Frame": "Choosing"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Rules of word use The word use of Basic English is much simpler and more regular than the word use of full English.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "Not all the meanings of each word are allowed.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Ogden's rules of grammar for Basic English help people use the 850 words to talk about things and events normally.",
        "frame": [
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            }
        ]
    },
    {
        "text": "-s / -es / -ies change singular nouns into plural nouns.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "-ing / -ed change verbs into adjectives.",
        "frame": [
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "-ing / -er change verbs into nouns.",
        "frame": [
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "-ly change adjectives into adverbs.",
        "frame": [
            {
                "LU": "change.n",
                "Frame": "Undergo_change"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "-er / -est or more / most describe amounts.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "describe.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "un- change the meanings of adjectives into their opposites.",
        "frame": [
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "opposite.a",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "The opposite word order with do makes questions.",
        "frame": [
            {
                "LU": "opposite.a",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Operators and pronouns conjugate as in normal English.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Make combined words (compounds) from two nouns (for example \"milkman\") or a noun and a direction (sundown).",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "compound.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Measures, numbers, money, days, months, years, clock time, and international words are in English forms.",
        "frame": [
            {
                "LU": "money.n",
                "Frame": "Money"
            },
            {
                "LU": "day.n",
                "Frame": "Location_in_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "Date/Time: 20 May 1972 at 21:00 Use the words of an industry or science.",
        "frame": [
            {
                "LU": "May.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "industry.n",
                "Frame": "Fields"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            }
        ]
    },
    {
        "text": "For example, in this grammar, some special words are for teaching languages, and not part of Basic English: plural, conjugate, noun, adjective, adverb, qualifier, operator, pronoun, and directive.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "teach.v",
                "Frame": "Education_teaching"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Operations - 100 words These are the 100 most common words in use in English.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "come, get, give, go, keep, let, make, put, seem, take, be, do, have, say, see, send, may, will, about, across, after, against, among, at, before, between, by, down, from, in, off, on, over, through, to, under, up, with, as, for, of, till, than, a, the, all, any, every, no, other, some, such, that, this, I, he, you, who, and, because, but, or, if, though, while, how, when, where, why, again, ever, far, forward, here, near, now, out, still, then, there, together, well, almost, enough, even, little, much, not, only, quite, so, very, tomorrow, yesterday, north, south, east, west, please, yes.",
        "frame": [
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "let.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "put.v",
                "Frame": "Placing"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "down.adv",
                "Frame": "Ingestion"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "off.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "up.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            },
            {
                "LU": "near.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "little.art",
                "Frame": "Size"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "yesterday.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "east.adv",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "west.a",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "please.v",
                "Frame": "Experiencer_obj"
            }
        ]
    },
    {
        "text": "400 General Words After the most common we have the next 400 words in general use in English.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "A-F account, act, addition, adjustment, advertisement, agreement, air, amount, amusement, animal, answer, apparatus, approval, argument, art, attack, attempt, attention, attraction, authority, back, balance, base, behaviour, belief, birth, bit, bite, blood, blow, body, brass, bread, breath, brother, building, burn, burst, business, butter, canvas, care, cause, chalk, chance, change, cloth, coal, colour, comfort, committee, company, comparison, competition, condition, connection, control, cook, copper, copy, cork, cotton, cough, country, cover, crack, credit, crime, crush, cry, current, curve, damage, danger, daughter, day, death, debt, decision, degree, design, desire, destruction, detail, development, digestion, direction, discovery, discussion, disease, disgust, distance, distribution, division, doubt, drink, driving, dust, earth, edge, education, effect, end, error, event, example, exchange, existence, expansion, experience, expert, fact, fall, family, father, fear, feeling, fiction, field, fight, fire, flame, flight, flower, fold, food, force, form, friend, front, fruit G-O glass, gold, government, grain, grass, grip, group, growth, guide, harbour, harmony, hate, hearing, heat, help, history, hole, hope, hour, humour, ice, idea, impulse, increase, industry, ink, insect, instrument, insurance, interest, invention, iron, jelly, join, journey, judge, jump, kick, kiss, knowledge, land, language, laugh, law, lead, learning, leather, letter, level, lift, light, limit, linen, liquid, list, look, loss, love, machine, man, manager, mark, market, mass, meal, measure, meat, meeting, memory, metal, middle, milk, mind, mine, minute, mist, money, month, morning, mother, motion, mountain, move, music, name, nation, need, news, night, noise, note, number, observation, offer, oil, operation, opinion, order, organization, ornament, owner P-Z page, pain, paint, paper, part, paste, payment, peace, person, place, plant, play, pleasure, point, poison, polish, porter, position, powder, power, price, print, process, produce, profit, property, prose, protest, pull, punishment, purpose, push, quality, question, rain, range, rate, ray, reaction, reading, reason, record, regret, relation, religion, representative, request, respect, rest, reward, rhythm, rice, river, road, roll, room, rub, rule, run, salt, sand, scale, science, sea, seat, secretary, selection, self, sense, servant, sex, shade, shake, shame, shock, side, sign, silk, silver, sister, size, sky, sleep, slip, slope, smash, smell, smile, smoke, sneeze, snow, soap, society, son, song, sort, sound, soup, space, stage, start, statement, steam, steel, step, stitch, stone, stop, story, stretch, structure, substance, sugar, suggestion, summer, support, surprise, swim, system, talk, taste, tax, teaching, tendency, test, theory, thing, thought, thunder, time, tin, top, touch, trade, transport, trick, trouble, turn, twist, unit, use, value, verse, vessel, view, voice, walk, war, wash, waste, water, wave, wax, way, weather, week, weight, wind, wine, winter, woman, wood, wool, word, work, wound, writing, year.",
        "frame": [
            {
                "LU": "account.n",
                "Frame": "Justifying"
            },
            {
                "LU": "act.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "agreement.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "air.v",
                "Frame": "Expressing_publicly"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "approval.n",
                "Frame": "Deny_or_grant_permission"
            },
            {
                "LU": "attack.n",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            },
            {
                "LU": "authority.n",
                "Frame": "Leadership"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "bread.n",
                "Frame": "Food"
            },
            {
                "LU": "brother.n",
                "Frame": "Co-association"
            },
            {
                "LU": "burn.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "business.n",
                "Frame": "Businesses"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "chance.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "change.n",
                "Frame": "Change_tool"
            },
            {
                "LU": "condition.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "cook.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "country.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "crime.n",
                "Frame": "Committing_crime"
            },
            {
                "LU": "cry.n",
                "Frame": "Make_noise"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "curve.n",
                "Frame": "Shapes"
            },
            {
                "LU": "danger.n",
                "Frame": "Risky_situation"
            },
            {
                "LU": "daughter.n",
                "Frame": "Kinship"
            },
            {
                "LU": "day.n",
                "Frame": "Location_in_time"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "decision.n",
                "Frame": "Deciding"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "destruction.n",
                "Frame": "Destroying"
            },
            {
                "LU": "discussion.n",
                "Frame": "Discussion"
            },
            {
                "LU": "distance.n",
                "Frame": "Range"
            },
            {
                "LU": "division.n",
                "Frame": "Non-commutative_process"
            },
            {
                "LU": "doubt.n",
                "Frame": "Certainty"
            },
            {
                "LU": "drink.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "dust.v",
                "Frame": "Placing"
            },
            {
                "LU": "edge.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "education.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "exchange.n",
                "Frame": "Replacing"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "expert.n",
                "Frame": "Expertise"
            },
            {
                "LU": "fall.n",
                "Frame": "Motion_directional"
            },
            {
                "LU": "family.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "fear.n",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "feeling.n",
                "Frame": "Sensation"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "fire.n",
                "Frame": "Fire_burning"
            },
            {
                "LU": "flight.n",
                "Frame": "Ride_vehicle"
            },
            {
                "LU": "fold.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "force.n",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "form.n",
                "Frame": "Type"
            },
            {
                "LU": "friend.n",
                "Frame": "Personal_relationship"
            },
            {
                "LU": "fruit.n",
                "Frame": "Food"
            },
            {
                "LU": "gold.n",
                "Frame": "Desirability"
            },
            {
                "LU": "grass.n",
                "Frame": "Intoxicants"
            },
            {
                "LU": "grip.v",
                "Frame": "Manipulation"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "growth.n",
                "Frame": "Cause_expansion"
            },
            {
                "LU": "guide.v",
                "Frame": "Cotheme"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "hope.n",
                "Frame": "Desiring"
            },
            {
                "LU": "hour.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "increase.n",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "industry.n",
                "Frame": "Fields"
            },
            {
                "LU": "instrument.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "judge.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "land.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "lead.n",
                "Frame": "Cotheme"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "letter.n",
                "Frame": "Text"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "lift.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "light.n",
                "Frame": "Location_of_light"
            },
            {
                "LU": "liquid.n",
                "Frame": "Substance"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "look.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "love.v",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "manager.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "mark.v",
                "Frame": "Sign"
            },
            {
                "LU": "measure.n",
                "Frame": "Dimension"
            },
            {
                "LU": "meeting.n",
                "Frame": "Social_event"
            },
            {
                "LU": "metal.n",
                "Frame": "Substance"
            },
            {
                "LU": "mine.n",
                "Frame": "Weapon"
            },
            {
                "LU": "minute.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "money.n",
                "Frame": "Money"
            },
            {
                "LU": "month.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "morning.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "mother.n",
                "Frame": "Kinship"
            },
            {
                "LU": "motion.v",
                "Frame": "Gesture"
            },
            {
                "LU": "mountain.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "move.n",
                "Frame": "Body_movement"
            },
            {
                "LU": "music.n",
                "Frame": "Performing_arts"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "night.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "observation.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "oil.n",
                "Frame": "Substance"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "order.n",
                "Frame": "Request"
            },
            {
                "LU": "owner.n",
                "Frame": "Possession"
            },
            {
                "LU": "page.v",
                "Frame": "Contacting"
            },
            {
                "LU": "paint.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            },
            {
                "LU": "plant.n",
                "Frame": "Placing"
            },
            {
                "LU": "play.n",
                "Frame": "Competition"
            },
            {
                "LU": "poison.n",
                "Frame": "Toxic_substance"
            },
            {
                "LU": "position.n",
                "Frame": "Placing"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "price.n",
                "Frame": "Commerce_scenario"
            },
            {
                "LU": "print.v",
                "Frame": "Text_creation"
            },
            {
                "LU": "profit.n",
                "Frame": "Earnings_and_losses"
            },
            {
                "LU": "protest.n",
                "Frame": "Protest"
            },
            {
                "LU": "pull.n",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "rain.n",
                "Frame": "Mass_motion"
            },
            {
                "LU": "rate.n",
                "Frame": "Relational_quantity"
            },
            {
                "LU": "reaction.n",
                "Frame": "Response"
            },
            {
                "LU": "reading.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "representative.n",
                "Frame": "Leadership"
            },
            {
                "LU": "request.n",
                "Frame": "Request"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "rub.v",
                "Frame": "Placing"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "sea.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "selection.n",
                "Frame": "Choosing"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "servant.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "shock.n",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "side.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "sign.n",
                "Frame": "Sign_agreement"
            },
            {
                "LU": "sister.n",
                "Frame": "Co-association"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "smell.n",
                "Frame": "Give_impression"
            },
            {
                "LU": "smile.n",
                "Frame": "Making_faces"
            },
            {
                "LU": "smoke.v",
                "Frame": "Ingest_substance"
            },
            {
                "LU": "snow.n",
                "Frame": "Precipitation"
            },
            {
                "LU": "society.n",
                "Frame": "Organization"
            },
            {
                "LU": "song.n",
                "Frame": "Text"
            },
            {
                "LU": "sound.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "stone.v",
                "Frame": "Emptying"
            },
            {
                "LU": "stop.v",
                "Frame": "Thwarting"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "surprise.n",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "swim.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "talk.n",
                "Frame": "Statement"
            },
            {
                "LU": "taste.n",
                "Frame": "Give_impression"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "top.n",
                "Frame": "Occupy_rank"
            },
            {
                "LU": "trade.n",
                "Frame": "Change_tool"
            },
            {
                "LU": "trouble.n",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "turn.n",
                "Frame": "Becoming"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "vessel.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "voice.v",
                "Frame": "Expressing_publicly"
            },
            {
                "LU": "walk.n",
                "Frame": "Cotheme"
            },
            {
                "LU": "war.n",
                "Frame": "Hostile_encounter"
            },
            {
                "LU": "waste.v",
                "Frame": "Frugality"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "weather.n",
                "Frame": "Surviving"
            },
            {
                "LU": "wind.v",
                "Frame": "Motion"
            },
            {
                "LU": "winter.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "woman.n",
                "Frame": "People"
            },
            {
                "LU": "wound.n",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Things - 200 Picture-able Words These are words where you can think of a picture to go with them.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "picture.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "In a similar way that a child learns words by looking at pictures with the words underneath.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "child.n",
                "Frame": "Kinship"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "underneath.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "angle, ant, apple, arch, arm, army, baby, bag, ball, band, basin, basket, bath, bed, bee, bell, berry, bird, blade, board, boat, bone, book, boot, bottle, box, boy, brain, brake, branch, brick, bridge, brush, bucket, bulb, button, cake, camera, card, cart, carriage, cat, chain, cheese, chest, chin, church, circle, clock, cloud, coat, collar, comb, cord, cow, cup, curtain, cushion, dog, door, drain, drawer, dress, drop, ear, egg, engine, eye, face, farm, feather, finger, fish, flag, floor, fly, foot, fork, fowl, frame, garden, girl, glove, goat, gun, hair, hammer, hand, hat, head, heart, hook, horn, horse, hospital, house, island, jewel, kettle, key, knee, knife, knot, leaf, leg, library, line, lip, lock, map, match, monkey, moon, mouth, muscle, nail, neck, needle, nerve, net, nose, nut, office, orange, oven, parcel, pen, pencil, picture, pig, pin, pipe, plane, plate, plough, pocket, pot, potato, prison, pump, rail, rat, receipt, ring, rod, roof, root, sail, school, scissors, screw, seed, sheep, shelf, ship, shirt, shoe, skin, skirt, snake, sock, spade, sponge, spoon, spring, square, stamp, star, station, stem, stick, stocking, stomach, store, street, sun, table, tail, thread, throat, thumb, ticket, toe, tongue, tooth, town, train, tray, tree, trousers, umbrella, wall, watch, wheel, whip, whistle, window, wing, wire, worm.",
        "frame": [
            {
                "LU": "angle.v",
                "Frame": "Motion_directional"
            },
            {
                "LU": "army.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "bag.n",
                "Frame": "Measure_volume"
            },
            {
                "LU": "bed.v",
                "Frame": "Sex"
            },
            {
                "LU": "bell.n",
                "Frame": "Noise_makers"
            },
            {
                "LU": "board.n",
                "Frame": "Temporary_stay"
            },
            {
                "LU": "boat.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "box.n",
                "Frame": "Measure_volume"
            },
            {
                "LU": "boy.n",
                "Frame": "People_by_age"
            },
            {
                "LU": "bridge.n",
                "Frame": "Roadways"
            },
            {
                "LU": "brush.v",
                "Frame": "Impact"
            },
            {
                "LU": "carriage.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "cat.n",
                "Frame": "Animals"
            },
            {
                "LU": "chain.n",
                "Frame": "Businesses"
            },
            {
                "LU": "chin.n",
                "Frame": "Body_parts"
            },
            {
                "LU": "church.n",
                "Frame": "Buildings"
            },
            {
                "LU": "circle.n",
                "Frame": "Shapes"
            },
            {
                "LU": "comb.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "dog.n",
                "Frame": "Cotheme"
            },
            {
                "LU": "door.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "dress.n",
                "Frame": "Clothing"
            },
            {
                "LU": "ear.n",
                "Frame": "Body_parts"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "face.n",
                "Frame": "Facial_expression"
            },
            {
                "LU": "farm.n",
                "Frame": "Agriculture"
            },
            {
                "LU": "floor.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "foot.n",
                "Frame": "Measure_linear_extent"
            },
            {
                "LU": "garden.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "girl.n",
                "Frame": "People"
            },
            {
                "LU": "gun.n",
                "Frame": "Weapon"
            },
            {
                "LU": "hat.n",
                "Frame": "Accoutrements"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            },
            {
                "LU": "heart.n",
                "Frame": "Part_orientational"
            },
            {
                "LU": "house.n",
                "Frame": "Provide_lodging"
            },
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "knee.n",
                "Frame": "Cause_harm"
            },
            {
                "LU": "knife.n",
                "Frame": "Weapon"
            },
            {
                "LU": "match.n",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "mouth.n",
                "Frame": "Relational_natural_features"
            },
            {
                "LU": "net.n",
                "Frame": "Earnings_and_losses"
            },
            {
                "LU": "picture.n",
                "Frame": "Physical_artworks"
            },
            {
                "LU": "pin.v",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "plane.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "plate.n",
                "Frame": "Armor"
            },
            {
                "LU": "prison.n",
                "Frame": "Being_incarcerated"
            },
            {
                "LU": "rail.n",
                "Frame": "Roadways"
            },
            {
                "LU": "rat.v",
                "Frame": "Reporting"
            },
            {
                "LU": "roof.n",
                "Frame": "Architectural_part"
            },
            {
                "LU": "school.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "ship.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "stamp.v",
                "Frame": "Body_movement"
            },
            {
                "LU": "station.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "stick.n",
                "Frame": "Shapes"
            },
            {
                "LU": "stock.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "street.n",
                "Frame": "Roadways"
            },
            {
                "LU": "throat.n",
                "Frame": "Body_parts"
            },
            {
                "LU": "thumb.n",
                "Frame": "Body_parts"
            },
            {
                "LU": "train.n",
                "Frame": "Vehicle"
            },
            {
                "LU": "wall.n",
                "Frame": "Architectural_part"
            },
            {
                "LU": "wheel.n",
                "Frame": "Artifact"
            },
            {
                "LU": "window.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "wing.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "Qualities - 100 Descriptive words These are 100 Words that add a description to other words.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "For example A Black Ball.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "able, acid, angry, automatic, beautiful, black, boiling, bright, broken, brown, cheap, chemical, chief, clean, clear, common, complex, conscious, cut, deep, dependent, early, elastic, electric, equal, fat, fertile, first, fixed, flat, free, frequent, full, general, good, great, grey, hanging, happy, hard, healthy, high, hollow, important, kind, like, living, long, male, married, material, medical, military, natural, necessary, new, normal, open, parallel, past, physical, political, poor, possible, present, private, probable, quick, quiet, ready, red, regular, responsible, right, round, same, second, separate, serious, sharp, smooth, sticky, stiff, straight, strong, sudden, sweet, tall, thick, tight, tired, true, violent, waiting, warm, wet, wide, wise, yellow, young.",
        "frame": [
            {
                "LU": "acid.n",
                "Frame": "Intoxicants"
            },
            {
                "LU": "black.a",
                "Frame": "Level_of_light"
            },
            {
                "LU": "bright.a",
                "Frame": "Color_qualities"
            },
            {
                "LU": "cheap.a",
                "Frame": "Expensiveness"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            },
            {
                "LU": "chief.n",
                "Frame": "First_rank"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "cut.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "deep.a",
                "Frame": "Dimension"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "frequent.a",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "happy.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "hard.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "healthy.a",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "live.v",
                "Frame": "Residence"
            },
            {
                "LU": "male.a",
                "Frame": "Body_description_holistic"
            },
            {
                "LU": "marry.v",
                "Frame": "Forming_relationships"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "open.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "parallel.n",
                "Frame": "Similarity"
            },
            {
                "LU": "probable.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "quiet.a",
                "Frame": "Prominence"
            },
            {
                "LU": "red.a",
                "Frame": "Color"
            },
            {
                "LU": "right.a",
                "Frame": "Morality_evaluation"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "serious.a",
                "Frame": "Importance"
            },
            {
                "LU": "straight.a",
                "Frame": "Candidness"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "wait.v",
                "Frame": "Expectation"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "wise.a",
                "Frame": "Mental_property"
            },
            {
                "LU": "yellow.a",
                "Frame": "Color"
            }
        ]
    },
    {
        "text": "Qualities - 50 opposites These words are opposite to other words.",
        "frame": [
            {
                "LU": "opposite.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "opposite.a",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "awake, bad, bent, bitter, blue, certain, cold, complete, cruel, dark, dead, dear, delicate, different, dirty, dry, false, feeble, female, foolish, future, green, ill, last, late, left, loose, loud, low, mixed, narrow, old, opposite, public, rough, sad, safe, secret, short, shut, simple, slow, small, soft, solid, special, strange, thin, white, wrong.",
        "frame": [
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "cold.a",
                "Frame": "Subjective_temperature"
            },
            {
                "LU": "dear.a",
                "Frame": "Stimulus_focus"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "green.a",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "late.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "narrow.a",
                "Frame": "Cause_expansion"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "opposite.a",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "public.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "sad.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "secret.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "solid.n",
                "Frame": "Substance"
            },
            {
                "LU": "thin.a",
                "Frame": "Measurable_attributes"
            },
            {
                "LU": "wrong.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "Consciousness Consciousness is a term that refers to the relationship between the mind and the world with which it interacts.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "It has been defined as: subjectivity, awareness, the ability to experience or to feel, wakefulness, having a sense of selfhood, and the executive control system of the mind.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "executive.n",
                "Frame": "Leadership"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Despite the difficulty in definition, many philosophers believe that there is a broadly shared underlying intuition about what consciousness is.",
        "frame": [
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "share.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "As Max Velmans and Susan Schneider wrote in The Blackwell Companion to Consciousness: \"Anything that we are aware of at a given moment forms part of our consciousness, making conscious experience at once the most familiar and most mysterious aspect of our lives.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "give.v",
                "Frame": "Infecting"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "familiar.a",
                "Frame": "Personal_relationship"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "Philosophers since the time of Descartes and Locke have struggled to comprehend the nature of consciousness and pin down its essential properties.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "struggle.v",
                "Frame": "Hostile_encounter"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            }
        ]
    },
    {
        "text": "Issues of concern in the philosophy of consciousness include whether the concept is fundamentally valid; whether consciousness can ever be explained mechanistically; whether non-human consciousness exists and if so how it can be recognized; how consciousness relates to language; and whether it may ever be possible for computers or robots to be conscious.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Perhaps the thorniest issue is whether consciousness can be understood in a way that does not require a dualistic distinction between mental and physical states or properties.",
        "frame": [
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "At one time consciousness was viewed with skepticism by many scientists, but in recent years it has become a significant topic of research in psychology and neuroscience.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The primary focus is on understanding what it means biologically and psychologically for information to be present in consciousnessthat is, on determining the neural and psychological correlates of consciousness.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "The majority of experimental studies assess consciousness by asking human subjects for a verbal report of their experiences (e.",
        "frame": [
            {
                "LU": "ask.v",
                "Frame": "Request"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": ", \"tell me if you notice anything when I do this\").",
        "frame": [
            {
                "LU": "tell.v",
                "Frame": "Request"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "Issues of interest include phenomena such as subliminal perception, blindsight, denial of impairment, and altered states of consciousness produced by psychoactive drugs or spiritual or meditative techniques.",
        "frame": [
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "alter.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "drug.n",
                "Frame": "Cause_harm"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "In medicine, consciousness is assessed by observing a patient's arousal and responsiveness, and can be seen as a continuum of states ranging from full alertness and comprehension, through disorientation, delirium, loss of meaningful communication, and finally loss of movement in response to painful stimuli.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "medicine.n",
                "Frame": "Medical_specialties"
            },
            {
                "LU": "assess.v",
                "Frame": "Assessing"
            },
            {
                "LU": "observe.v",
                "Frame": "Statement"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "finally.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Issues of practical concern include how the presence of consciousness can be assessed in severely ill, comatose, or anesthetized people, and how to treat conditions in which consciousness is impaired or disrupted.",
        "frame": [
            {
                "LU": "assess.v",
                "Frame": "Assessing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Etymology and Early History The origin of the modern concept of consciousness is often attributed to John Locke's Essay Concerning Human Understanding, published in 1690.",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Locke defined consciousness as the perception of what passes in a mans own mind.",
        "frame": [
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "His essay influenced the 18th century view of consciousness, and his definition appeared in Samuel Johnson's celebrated Dictionary (1755).",
        "frame": [
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The earliest English language uses of \"conscious\" and \"consciousness\" date back, however, to the 1500s.",
        "frame": [
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "date.n",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The English word \"conscious\" originally derived from the Latin conscius (con- \"together\" + scire \"to know\"), but the Latin word did not have the same meaning as our wordit meant knowing with, in other words having joint or common knowledge with another.",
        "frame": [
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "joint.n",
                "Frame": "Prison"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "There were, however, many occurrences in Latin writings of the phrase conscius sibi, which translates literally as \"knowing with oneself\", or in other words sharing knowledge with oneself about something.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "phrase.v",
                "Frame": "Encoding"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "share.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "This phrase had the figurative meaning of knowing that one knows, as the modern English word \"conscious\" does.",
        "frame": [
            {
                "LU": "phrase.v",
                "Frame": "Encoding"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "In its earliest uses in the 1500s, the English word \"conscious\" retained the meaning of the Latin conscius.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "retain.v",
                "Frame": "Memory"
            }
        ]
    },
    {
        "text": "For example Thomas Hobbes in Leviathan wrote: \"Where two, or more men, know of one and the same fact, they are said to be Conscious of it one to another.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The Latin phrase conscius sibi, whose meaning was more closely related to the current concept of consciousness, was rendered in English as \"conscious to oneself\" or \"conscious unto oneself\".",
        "frame": [
            {
                "LU": "phrase.v",
                "Frame": "Encoding"
            },
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "For example, Archbishop Ussher wrote in 1613 of \"being so conscious unto myself of my great weakness\".",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Locke's definition from 1690 illustrates that a gradual shift in meaning had taken place.",
        "frame": [
            {
                "LU": "definition.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "shift.n",
                "Frame": "Clothing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "A related word was conscientia, which primarily means moral conscience.",
        "frame": [
            {
                "LU": "moral.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "In the literal sense, \"conscientia\" means knowledge-with, that is, shared knowledge.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "share.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The word first appears in Latin juridical texts by writers such as Cicero.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Here, conscientia is the knowledge that a witness has of the deed of someone else.",
        "frame": [
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "deed.n",
                "Frame": "Documents"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Ren Descartes (15961650) is generally taken to be the first philosopher to use \"conscientia\" in a way that does not fit this traditional meaning.",
        "frame": [
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "fit.v",
                "Frame": "Capacity"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            }
        ]
    },
    {
        "text": "Descartes used \"conscientia\" the way modern speakers would use \"conscience.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "In Search after Truth he says \"conscience or internal testimony\" (conscientia vel interno testimonio).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "testimony.n",
                "Frame": "Documents"
            }
        ]
    },
    {
        "text": "In Philosophy The philosophy of mind has given rise to many stances regarding consciousness.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "stance.n",
                "Frame": "Posture"
            },
            {
                "LU": "regard.v",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "Any attempt to impose an organization on them is bound to be somewhat arbitrary.",
        "frame": [
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Stuart Sutherland exemplified the difficulty in the entry he wrote for the 1989 version of the Macmillan Dictionary of Psychology: ConsciousnessThe having of perceptions, thoughts, and feelings; awareness.",
        "frame": [
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "entry.n",
                "Frame": "Arriving"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            }
        ]
    },
    {
        "text": "The term is impossible to define except in terms that are unintelligible without a grasp of what consciousness means.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "unintelligible.a",
                "Frame": "Grasp"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Many fall into the trap of equating consciousness with self-consciousnessto be conscious it is only necessary to be aware of the external world.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "fall.n",
                "Frame": "Motion_directional"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Consciousness is a fascinating but elusive phenomenon: it is impossible to specify what it is, what it does, or why it has evolved.",
        "frame": [
            {
                "LU": "fascinating.a",
                "Frame": "Mental_stimulus_stimulus_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Nothing worth reading has been written on it.",
        "frame": [
            {
                "LU": "reading.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            }
        ]
    },
    {
        "text": "Most writers on the philosophy of consciousness have been concerned to defend a particular point of view, and have organized their material accordingly.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "defend.v",
                "Frame": "Defending"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            }
        ]
    },
    {
        "text": "For surveys, the most common approach is to follow a historical path by associating stances with the philosophers who are most most strongly associated with them, for example Descartes, Locke, Kant, etc.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "survey.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "path.n",
                "Frame": "Roadways"
            },
            {
                "LU": "associate.v",
                "Frame": "Co-association"
            },
            {
                "LU": "stance.n",
                "Frame": "Posture"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The main alternative, followed in the present article, is to organize philosophical stances according to the answers they give to a set of basic questions about the nature and status of consciousness.",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "alternative.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "present.a",
                "Frame": "Presence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "stance.n",
                "Frame": "Posture"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Is Consciousness a Valid Concept.",
        "frame": []
    },
    {
        "text": "The most compelling argument for the existence of consciousness is that the vast majority of mankind have an overwhelming intuition that there truly is such a thing.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Skeptics argue that this intuition, in spite of its compelling quality, is false, either because the concept of consciousness is intrinsically incoherent, or because our intuitions about it are based in illusions.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Gilbert Ryle, for example, argued that traditional understanding of consciousness depends on a Cartesian dualist outlook that improperly distinguishes between mind and body, or between mind and world.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "He proposed that we speak not of minds, bodies, and the world, but of individuals, or persons, acting in the world.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Thus, by speaking of 'consciousness' we end up misleading ourselves by thinking that there is any sort of thing as consciousness separated from behavioral and linguistic understandings.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "separate.v",
                "Frame": "Differentiation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "understanding.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "More generally, many philosophers and scientists have been unhappy about the difficulty of producing a definition that does not involve circularity or fuzziness.",
        "frame": [
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Is It a Single Thing.",
        "frame": []
    },
    {
        "text": "Many philosophers have argued that consciousness is a unitary concept that is understood intuitively by the majority of people in spite of the difficulty in defining it.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            }
        ]
    },
    {
        "text": "Others, though, have argued that the level of disagreement about the meaning of the word indicates that it either means different things to different people, or else is an umbrella term encompassing a variety of distinct meanings with no simple element in common.",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "disagreement.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            }
        ]
    },
    {
        "text": "Ned Block proposed a distinction between two types of consciousness that he called phenomenal (P-consciousness) and access (A-consciousness).",
        "frame": [
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            }
        ]
    },
    {
        "text": "P-consciousness, according to Block, is simply raw experience: it is moving, colored forms, sounds, sensations, emotions and feelings with our bodies and responses at the center.",
        "frame": [
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "form.n",
                "Frame": "Type"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "center.n",
                "Frame": "Locale_by_use"
            }
        ]
    },
    {
        "text": "These experiences, considered independently of any impact on behavior, are called qualia.",
        "frame": [
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "A-consciousness, on the other hand, is the phenomenon whereby information in our minds is accessible for verbal report, reasoning, and the control of behavior.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "So, when we perceive, information about what we perceive is access conscious; when we introspect, information about our thoughts is access conscious; when we remember, information about the past is access conscious, and so on.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Although some philosophers, such as Daniel Dennett, have disputed the validity of this distinction, others have broadly accepted it.",
        "frame": [
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "David Chalmers has argued that A-consciousness can in principle be understood in mechanistic terms, but that understanding P-consciousness is much more challenging: he calls this the hard problem of consciousness.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "challenging.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "hard.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Some philosophers believe that Block's two types of consciousness are not the end of the story.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "William Lycan, for example, argued in his book Consciousness and Experience that at least eight clearly distinct types of consciousness can be identified (organism consciousness; control consciousness; consciousness of; state/event consciousness; reportability; introspective consciousness; subjective consciousness; self-consciousness)and that even this list omits several more obscure forms.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "clearly.adv",
                "Frame": "Obviousness"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "obscure.a",
                "Frame": "Obscurity"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "How does it relate to the Physical World.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "world.n",
                "Frame": "Political_locales"
            }
        ]
    },
    {
        "text": "Illustration of dualism by Ren Descartes.",
        "frame": []
    },
    {
        "text": "Inputs are passed by the sensory organs to the pineal gland and from there to the immaterial spirit.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "spirit.n",
                "Frame": "Gusto"
            }
        ]
    },
    {
        "text": "The first influential philosopher to discuss this question specifically was Descartes, and the answer he gave is known as Cartesian dualism.",
        "frame": [
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Descartes proposed that consciousness resides within an immaterial domain he called res cogitans (the realm of thought), in contrast to the domain of material things which he called res extensa (the realm of extension).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "domain.n",
                "Frame": "Biological_classification"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            }
        ]
    },
    {
        "text": "He suggested that the interaction between these two domains occurs inside the brain, perhaps in a small midline structure called the pineal gland.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "inside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Although it is widely accepted that Descartes explained the problem cogently, few later philosophers have been happy with his solution, and his ideas about the pineal gland have especially been ridiculed.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "happy.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Alternative solutions, however, have been very diverse.",
        "frame": [
            {
                "LU": "diverse.a",
                "Frame": "Diversity"
            }
        ]
    },
    {
        "text": "They can be divided broadly into two categories: dualist solutions that maintain Descartes's rigid distinction between the realm of consciousness and the realm of matter but give different answers for how the two realms relate to each other; and monist solutions that maintain that there is really only one realm of being, of which consciousness and matter are both aspects.",
        "frame": [
            {
                "LU": "divide.v",
                "Frame": "Separating"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "realm.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "Each of these categories itself contains numerous variants.",
        "frame": [
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "numerous.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "variant.n",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "The two main types of dualism are substance dualism (which holds that the mind is formed of a distinct type of substance not governed by the laws of physics) and property dualism (which holds that the laws of physics are universally valid but cannot be used to explain the mind).",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "govern.v",
                "Frame": "Leadership"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "valid.a",
                "Frame": "Being_in_effect"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The three main types of monism are physicalism (which holds that the mind consists of matter organized in a particular way), idealism (which holds that only thought truly exists and matter is merely an illusion), and neutral monism (which holds that both mind and matter are aspects of a distinct essence that is itself identical to neither of them).",
        "frame": [
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "neutral.a",
                "Frame": "Partiality"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "There are also, however, a large number of idiosyncratic theories that cannot cleanly be assigned to any of these camps.",
        "frame": [
            {
                "LU": "large.a",
                "Frame": "Size"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "camp.n",
                "Frame": "Residence"
            }
        ]
    },
    {
        "text": "Since the dawn of Newtonian science with its vision of simple mechanical principles governing the entire universe, some philosophers have been tempted by the idea that consciousness could be explained in purely physical terms.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "mechanical.a",
                "Frame": "Gizmo"
            },
            {
                "LU": "govern.v",
                "Frame": "Leadership"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The first influential writer to propose such an idea explicitly was Julien Offray de La Mettrie, in his book Man a Machine (L'homme machine).",
        "frame": [
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "writer.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "propose.v",
                "Frame": "Statement"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "His arguments, however, were very abstract.",
        "frame": [
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            }
        ]
    },
    {
        "text": "The most influential modern physical theories of consciousness are based on psychology and neuroscience.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Theories proposed by neuroscientists such as Gerald Edelman[31] and Antonio Damasio, and by philosophers such as Daniel Dennett,[33] seek to explain consciousness in terms of neural events occurring within the brain.",
        "frame": [
            {
                "LU": "seek.v",
                "Frame": "Seeking"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "occur.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Many other neuroscientists, such as Christof Koch, have explored the neural basis of consciousness without attempting to frame all-encompassing global theories.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "global.a",
                "Frame": "Political_locales"
            }
        ]
    },
    {
        "text": "At the same time, computer scientists working in the field of Artificial Intelligence have pursued the goal of creating digital computer programs that can simulate or embody consciousness.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "goal.n",
                "Frame": "Purpose"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "A few theoretical physicists have argued that classical physics is intrinsically incapable of explaining the holistic aspects of consciousness, but that quantum theory provides the missing ingredients.",
        "frame": [
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "miss.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "ingredient.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Several theorists have therefore proposed quantum mind (QM) theories of consciousness.",
        "frame": []
    },
    {
        "text": "Notable theories falling into this category include the Holonomic brain theory of Kark Pribram and David Bohm, and the Orch-OR theory formulated by Stuart Hameroff and Roger Penrose.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Some of these QM theories offer descriptions of phenomenal consciousness, as well as QM interpretations of access consciousness.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "None of the quantum mechanical theories has been confirmed by experiment, and many scientists and philosophers consider the arguments for an important role of quantum phenomena to be unconvincing.",
        "frame": [
            {
                "LU": "mechanical.a",
                "Frame": "Gizmo"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Why do people believe that other people are Conscious.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Many philosophers consider experience to be the essence of consciousness, and believe that experience can only fully be known from the inside, subjectively.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "But if consciousness is subjective and not visible from the outside, why do the vast majority of people believe that other people are conscious, but rocks and trees are not.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "visible.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "outside.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "tree.n",
                "Frame": "Plants"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This is called the problem of other minds.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "It is particularly acute for people who believe in the possibility of philosophical zombies, that is, people who think it is possible in principle to have an entity that is physically indistinguishable from a human being and behaves like a human being in every way but nevertheless lacks consciousness.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The most commonly given answer is that we attribute consciousness to other people because we see that they resemble us in appearance and behavior: we reason that if they look like us and act like us, they must be like us in other ways, including having experiences of the sort that we do.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "[40].",
        "frame": []
    },
    {
        "text": "There are, however, a variety of problems with that explanation.",
        "frame": [
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "For one thing, it seems to violate the principle of parsimony, by postulating an invisible entity that is not necessary to explain what we observe.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Some philosophers, such as Daniel Dennett in an essay titled The Unimagined Preposterousness of Zombies, argue that people who give this explanation do not really understand what they are saying.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "More broadly, philosophers who do not accept the possibility of zombies generally believe that consciousness is reflected in behavior (including verbal behavior), and that we attribute consciousness on the basis of behavior.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "accept.v",
                "Frame": "Respond_to_proposal"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "reflect.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "A more straightforward way of saying this is that we attribute experiences to people because of what they can do, including the fact that they can tell us about their experiences.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Are non-human animals are Conscious.",
        "frame": [
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "The topic of animal consciousness is beset by a number of difficulties.",
        "frame": [
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            }
        ]
    },
    {
        "text": "It poses the problem of other minds in an especially severe form, because animals, lacking language, cannot tell us about their experiences.",
        "frame": [
            {
                "LU": "pose.v",
                "Frame": "Posing_as"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "lack.v",
                "Frame": "Possession"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Also, it is difficult to reason objectively about the question, because a denial that an animal is conscious is often taken to imply that it does not feel, its life has no value, and that harming it is not morally wrong.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "reason.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "wrong.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "Descartes, for example, has sometimes been blamed for mistreatment of animals due to the fact that he believed only humans have a non-physical mind.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "blame.v",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            }
        ]
    },
    {
        "text": "Most people have a strong intuition that some animals, such as dogs, are conscious, while others, such as insects, are not; but the sources of this intuition are not obvious.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "strong.a",
                "Frame": "Judgment_of_intensity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Philosophers who consider subjective experience the essence of consciousness also generally believe, as a correlate, that the existence and nature of animal consciousness can never rigorously be known.",
        "frame": [
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Thomas Nagel spelled out this point of view in an influential essay titled What Is it Like to Be a Bat.",
        "frame": [
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "He said that an organism is conscious \"if and only if there is something that it is like to be that organism  something it is like for the organism\"; and he argued that no matter how much we know about an animal's brain and behavior, we can never really put ourselves into the mind of the animal and experience its world in the way it does itself.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Other thinkers, such as Douglas Hofstadter, dismiss this argument as incoherent.",
        "frame": []
    },
    {
        "text": "Several psychologists and ethologists have argued for the existence of animal consciousness by describing a range of behaviors that appear to show animals holding beliefs about things they cannot directly perceive  Donald Griffin's 2001 book Animal Minds reviews a substantial portion of the evidence.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "belief.n",
                "Frame": "Opinion"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "substantial.a",
                "Frame": "Size"
            },
            {
                "LU": "portion.n",
                "Frame": "Part_whole"
            }
        ]
    },
    {
        "text": "Could a Machine ever be Conscious.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            }
        ]
    },
    {
        "text": "The idea of an artifact made conscious is an ancient theme of mythology, appearing for example in the Greek myth of Pygmalion, who carved a statue that was magically brought to life, and in medieval Jewish stories of the Golem, a magically animated homunculus built of clay.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "artifact.n",
                "Frame": "Artifact"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "theme.n",
                "Frame": "Topic"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "bring.v",
                "Frame": "Causation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "However, the possibility of actually constructing a conscious machine was probably first discussed by Ada Lovelace, in a set of notes written in 1842 about the Analytical Engine invented by Charles Babbage, a precursor (never built) to modern electronic computers.",
        "frame": [
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "construct.v",
                "Frame": "Building"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "probably.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "precursor.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Lovelace was essentially dismissive of the idea that a machine such as the Analytical Engine could think in a humanlike way.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "She wrote: It is desirable to guard against the possibility of exaggerated ideas that might arise as to the powers of the Analytical Engine.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "desirable.a",
                "Frame": "Desirability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "guard.v",
                "Frame": "Be_on_alert"
            },
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The Analytical Engine has no pretensions whatever to originate anything.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "originate.v",
                "Frame": "Achieving_first"
            }
        ]
    },
    {
        "text": "It can do whatever we know how to order it to perform.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "It can follow analysis; but it has no power of anticipating any analytical relations or truths.",
        "frame": [
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            }
        ]
    },
    {
        "text": "Its province is to assist us in making available what we are already acquainted with.",
        "frame": [
            {
                "LU": "province.n",
                "Frame": "Political_locales"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "One of the most influential contributions to this question was an essay written in 1950 by pioneering computer scientist Alan Turing, titled Computing Machinery and Intelligence.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "pioneer.v",
                "Frame": "Achieving_first"
            },
            {
                "LU": "scientist.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Turing disavowed any interest in terminology, saying that even \"Can machines think.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "is too loaded with spurious connotations to be meaningful; but he proposed to replace all such questions with a specific operational test, which has become known as the Turing test.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "operational.a",
                "Frame": "Being_operational"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "To pass the test a computer must be able to imitate a human well enough to fool interrogators.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "In his essay Turing discussed a variety of possible objections, and presented a counterargument to each of them.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "present.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The Turing test is commonly cited in discussions of artificial intelligence as a proposed criterion for machine consciousness; it has provoked a great deal of philosophical debate.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            }
        ]
    },
    {
        "text": "For example, Daniel Dennett and Douglas Hofstadter argue that anything capable of passing the Turing test is necessarily conscious, while David Chalmers argues that a philosophical zombie could pass the test, yet fail to be conscious.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "pass.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Some philosophers have argued that it might be possible, at least in principle, for a machine to be conscious, but that this would not just be a matter of executing the right computer program.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "right.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "This viewpoint has most notably been advocated by John Searle, who defended it using a thought experiment that has become known as the Chinese room argument: Suppose the Turing test is conducted in Chinese rather than English, and suppose a computer program successfully passes it.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "defend.v",
                "Frame": "Defending"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "conduct.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "pass.v",
                "Frame": "Path_shape"
            }
        ]
    },
    {
        "text": "Does the system that is executing the program understand Chinese.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Searle's argument is that he could pass the Turing test in Chinese too, by executing exactly the same program as the computer, yet without understanding a word of Chinese.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "How does Searle know whether he understands Chinese.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Understanding a language is not just something you do: it feels like something to understand Chinese (or any language).",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Understanding is conscious, and therefore there is more to it than merely executing a program, even a Turing-test-passing program.",
        "frame": [
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "In the literature concerning artificial consciousness, Searle's essay has been second only to Turing's in the volume of debate it has generated.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "volume.n",
                "Frame": "Text"
            }
        ]
    },
    {
        "text": "Searle himself was vague about what extra ingredients it would take to make a machine conscious: all he proposed was that what was needed was \"causal powers\" of the sort that the brain has and that computers lack.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "ingredient.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "But other thinkers sympathetic to his basic argument have suggested that the necessary (though perhaps still not sufficient) extra conditions may include the ability to pass not just the verbal version of the Turing test, but the robotic version,[54] which requires grounding the robot's words in the robot's sensorimotor capacity to categorize and interact with the things in the world that its words are about, Turing-indistinguishably from a real person.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "ground.a",
                "Frame": "Ground_up"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Turing-scale robotics is an empirical branch of research on embodied cognition and situated cognition.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Spiritual Approaches To most philosophers, the word \"consciousness\" connotes the relationship between the mind and the world.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "To writers on spiritual or religious topics, it frequently connotes the relationship between the mind and God, or the relationship between the mind and deeper truths that are thought to be more fundamental than the physical world.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "frequently.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "Krishna consciousness, for example, is a term used to mean an intimate linkage between the mind of a worshipper and the god Krishna.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "The mystical psychiatrist Richard Maurice Bucke distinguished between three types of consciousness: Simple Consciousness, awareness of the body, possessed by many animals; Self Consciousness, awareness of being aware, possessed only by humans; and Cosmic Consciousness, awareness of the life and order of the universe, possessed only by humans who are enlightened.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Many more examples could be given.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            }
        ]
    },
    {
        "text": "The most thorough account of the spiritual approach may be Ken Wilber's book The Spectrum of Consciousness, a comparison of western and eastern ways of thinking about the mind.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "western.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Wilber described consciousness as a spectrum with ordinary awareness at one end, and more profound types of awareness at higher levels.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "ordinary.a",
                "Frame": "Typicality"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "Scientific Approaches For many decades, consciousness as a research topic was avoided by the majority of mainstream scientists, because of a general feeling that a phenomenon defined in subjective terms could not properly be studied using objective experimental methods.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "avoid.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "feeling.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Starting in the 1980s, though, an expanding community of neuroscientists and psychologists have associated themselves with a field called Consciousness Studies, giving rise to a stream of experimental work published in journals such as Consciousness and Cognition, and methodological work published in journals such as the Journal of Consciousness Studies, along with regular conferences organized by groups such as the Association for the Scientific Study of Consciousness.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "expand.v",
                "Frame": "Cause_expansion"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "stream.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "journal.n",
                "Frame": "Records"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "journal.n",
                "Frame": "Records"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "conference.n",
                "Frame": "Discussion"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "group.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "association.n",
                "Frame": "Organization"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "Modern scientific investigations into consciousness are based on psychological experiments (including, for example, the investigation of priming effects using subliminal stimuli), and on case studies of alterations in consciousness produced by trauma, illness, or drugs.",
        "frame": [
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "investigation.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "investigation.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "illness.n",
                "Frame": "Medical_conditions"
            }
        ]
    },
    {
        "text": "Broadly viewed, scientific approaches are based on two core concepts.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "core.n",
                "Frame": "Emptying"
            }
        ]
    },
    {
        "text": "The first identifies the content of consciousness with the experiences that are reported by human subjects; the second makes use of the concept of consciousness that has been developed by neurologists and other medical professionals who deal with patients whose behavior is impaired.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "professional.a",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "In either case, the ultimate goals are to develop techniques for assessing consciousness objectively in humans as well as other animals, and to understand the neural and psychological mechanisms that underlie it.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "assess.v",
                "Frame": "Assessing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Biological Function and Evolution Regarding the primary function of conscious processing, a recurring idea in recent theories is that phenomenal states somehow integrate neural activities and information-processing that would otherwise be independent.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "activity.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "This has been called the integration consensus.",
        "frame": []
    },
    {
        "text": "However, it remains unspecified which kinds of information are integrated in a conscious manner and which kinds can be integrated without consciousness.",
        "frame": [
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Nor is it explained what specific causal role conscious integration plays, nor why the same functionality cannot be achieved without consciousness.",
        "frame": [
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "play.n",
                "Frame": "Competition"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Obviously not all kinds of information are capable of being disseminated consciously (e.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": ", neural activity related to vegetative functions, reflexes, unconscious motor programs, low-level perceptual analyses, etc.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "analysis.n",
                "Frame": "Scrutiny"
            }
        ]
    },
    {
        "text": ") and many kinds of information can be disseminated and combined with other kinds without consciousness, as in intersensory interactions such as the ventriloquism effect.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "Hence it remains unclear why any of it is conscious.",
        "frame": [
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "As noted earlier, even among writers who consider consciousness to be a well-defined thing, there is widespread dispute about which animals other than humans can be said to possess it.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "note.v",
                "Frame": "Statement"
            },
            {
                "LU": "earlier.a",
                "Frame": "Temporal_subregion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "dispute.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Thus, any examination of the evolution of consciousness is faced with great difficulties.",
        "frame": [
            {
                "LU": "examination.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "face.v",
                "Frame": "Confronting_problem"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "difficulty.n",
                "Frame": "Difficulty"
            }
        ]
    },
    {
        "text": "Nevertheless, some writers have argued that consciousness can be viewed from the standpoint of evolutionary biology as an adaptation in the sense of a trait that increases fitness.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            }
        ]
    },
    {
        "text": "In his paper \"Evolution of consciousness,\" John Eccles argued that special anatomical and physical properties of the mammalian cerebral cortex gave rise to consciousness.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Bernard Baars proposed that once in place, this \"recursive\" circuitry may have provided a basis for the subsequent development of many of the functions that consciousness facilitates in higher organisms.",
        "frame": [
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "place.n",
                "Frame": "Placing"
            },
            {
                "LU": "provide.v",
                "Frame": "Supply"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "subsequent.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Other philosophers, however, have suggested that consciousness would not be necessary for any functional advantage in evolutionary processes.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "No one has given a causal explanation, they argue, of why it would not be possible for a functionally equivalent non-conscious organism (i.",
        "frame": [
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": ", a philosophical zombie) to achieve the very same survival advantages as a conscious organism.",
        "frame": [
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "survival.n",
                "Frame": "Surviving"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "If evolutionary processes are blind to the difference between function F being performed by conscious organism O and non-conscious organism O*, it is unclear what adaptive advantage consciousness could provide.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "blind.n",
                "Frame": "Front_for"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "States of Consciousness There are some states in which consciousness seems to be abolished, including sleep, coma, and death.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "There are also a variety of circumstances that can change the relationship between the mind and the world in less drastic ways, producing what are known as altered states of consciousness.",
        "frame": [
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Some altered states occur naturally; others can be produced by drugs or brain damage.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "alter.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "drug.n",
                "Frame": "Cause_harm"
            },
            {
                "LU": "damage.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "The two most widely accepted altered states are sleep and dreaming.",
        "frame": [
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            }
        ]
    },
    {
        "text": "Although dream sleep and non-dream sleep appear very similar to an outside observer, each is associated with a distinct pattern of brain activity, metabolic activity, and eye movement; each is also associated with a distinct pattern of experience and cognition.",
        "frame": [
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "outside.a",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "During ordinary non-dream sleep, people who are awakened report only vague and sketchy thoughts, and their experiences do not cohere into a continuous narrative.",
        "frame": [
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "ordinary.a",
                "Frame": "Typicality"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "During dream sleep, in contrast, people who are awakened report rich and detailed experiences in which events form a continuous progression, which may however be interrupted by bizarre or fantastic intrusions.",
        "frame": [
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "sleep.v",
                "Frame": "Sleep"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "report.n",
                "Frame": "Reporting"
            },
            {
                "LU": "rich.a",
                "Frame": "Wealthiness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "fantastic.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Thought processes during the dream state frequently show a high level of irrationality.",
        "frame": [
            {
                "LU": "process.v",
                "Frame": "Process"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "Both dream and non-dream states are associated with severe disruption of memory: it usually disappears in seconds during the non-dream state, and in minutes after awakening from a dream unless actively refreshed.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "unless.scon",
                "Frame": "Negative_conditional"
            }
        ]
    },
    {
        "text": "A variety of psychoactive drugs have notable effects on consciousness.",
        "frame": [
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "These range from a simple dulling of awareness produced by sedatives, to increases in the intensity of sensory qualities produced by stimulants, cannabis, or most notably by the class of drugs known as psychedelics.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "increase.n",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "LSD, mescaline, psilocybin, and others in this group can produce major distortions of perception, including hallucinations; some users even describe their drug-induced experiences as mystical or spiritual in quality.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The brain mechanisms underlying these effects are not well understood, but there is substantial evidence that alterations in the brain system that uses the chemical neurotransmitter serotonin play an essential role.",
        "frame": [
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "effect.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "substantial.a",
                "Frame": "Size"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            }
        ]
    },
    {
        "text": "There has been some research into physiological changes in yogis and people who practise various techniques of meditation.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "change.n",
                "Frame": "Undergo_change"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Some research with brain waves during meditation has differences between those corresponding to ordinary relaxation and those corresponding to meditation.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "wave.n",
                "Frame": "Body_movement"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "ordinary.a",
                "Frame": "Typicality"
            },
            {
                "LU": "relaxation.n",
                "Frame": "Stimulus_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "It has been disputed, however, whether there is enough evidence to count these as physiologically distinct states of consciousness.",
        "frame": [
            {
                "LU": "enough.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "evidence.n",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "count.v",
                "Frame": "Be_subset_of"
            }
        ]
    },
    {
        "text": "The most extensive study of the characteristics of altered states of consciousness was made by psychologist Charles Tart in the 1960s and 1970s.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Tart analyzed a state of consciousness as made up of a number of component processes, including exteroception (sensing the external world); interoception (sensing the body); input-processing (seeing meaning); emotions; memory; time sense; sense of identity; evaluation and cognitive processing; motor output; and interaction with the environment.",
        "frame": [
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "sense.v",
                "Frame": "Sensation"
            },
            {
                "LU": "sense.v",
                "Frame": "Sensation"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "evaluation.n",
                "Frame": "Assessing"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Each of these, in his view, could be altered in multiple ways by drugs or other manipulations.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "alter.v",
                "Frame": "Cause_change"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "drug.n",
                "Frame": "Cause_harm"
            }
        ]
    },
    {
        "text": "The components that Tart identified have not, however, been validated by empirical studies.",
        "frame": [
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Research in this area has not yet reached firm conclusions, but a recent questionnaire-based study identified eleven significant factors contributing to drug-induced states of consciousness: experience of unity; spiritual experience; blissful state; insightfulness; disembodiment; impaired control and cognition; anxiety; complex imagery; elementary imagery; audio-visual synesthesia; and changed meaning of percepts.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "reach.v",
                "Frame": "Range"
            },
            {
                "LU": "firm.n",
                "Frame": "Businesses"
            },
            {
                "LU": "conclusion.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "factor.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            }
        ]
    },
    {
        "text": "Phenomenology Phenomenology is a method of inquiry that attempts to examine the structure of consciousness in its own right, putting aside problems regarding the relationship of consciousness to the physical world.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "inquiry.n",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "attempt.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "right.n",
                "Frame": "Correctness"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "This approach was first proposed by the philosopher Edmund Husserl, and later elaborated by other philosophers and scientists.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "scientist.n",
                "Frame": "People_by_vocation"
            }
        ]
    },
    {
        "text": "Husserl's original concept gave rise to two distinct lines of inquiry, in philosophy and psychology.",
        "frame": [
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "line.n",
                "Frame": "Shapes"
            },
            {
                "LU": "inquiry.n",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In philosophy, phenomenology has largely been devoted to fundamental metaphysical questions, such as the nature of intentionality (\"aboutness\").",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "In psychology, phenomenology largely has meant attempting to investigate consciousness using the method of introspection, which means looking into one's own mind and reporting what one observes.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "investigate.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "report.v",
                "Frame": "Statement"
            },
            {
                "LU": "observe.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "This method fell into disrepute in the early twentieth century because of grave doubts about its reliability, but has been rehabilitated to some degree, especially when used in combination with techniques for examining brain activity.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "fell.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "doubt.n",
                "Frame": "Certainty"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "reliability.n",
                "Frame": "Trust"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "combination.n",
                "Frame": "Key"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "examine.v",
                "Frame": "Examination"
            }
        ]
    },
    {
        "text": "Introspectively, the world of conscious experience seems to have considerable structure.",
        "frame": [
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "considerable.a",
                "Frame": "Importance"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Immanuel Kant asserted that the world as we perceive it is organized according to a set of fundamental \"intuitions\", which include object (we perceive the world as a set of distinct things); shape; quality (color, warmth, etc.",
        "frame": [
            {
                "LU": "assert.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "shape.n",
                "Frame": "Shapes"
            }
        ]
    },
    {
        "text": "); space (distance, direction, and location); and time.",
        "frame": [
            {
                "LU": "distance.n",
                "Frame": "Range"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Some of these constructs, such as space and time, correspond to the way the world is structured by the laws of physics; for others the correspondence is not as clear.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "clear.a",
                "Frame": "Obviousness"
            }
        ]
    },
    {
        "text": "Understanding the physical basis of qualities, such as redness or pain, has been particularly challenging.",
        "frame": [
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "challenging.a",
                "Frame": "Difficulty"
            }
        ]
    },
    {
        "text": "David Chalmers has called this the hard problem of consciousness.",
        "frame": [
            {
                "LU": "hard.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Some philosophers have argued that it is intrinsically unsolvable, because qualities (\"qualia\") are ineffable; that is, they are \"raw feels\", incapable of being analyzed into component processes.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Most psychologists and neuroscientists have not accepted these arguments  nevertheless it is clear that the relationship between a physical entity such as light and a perceptual quality such as color is extraordinarily complex and indirect, as demonstrated by a variety of optical illusions such as neon color spreading.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "argument.n",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "light.n",
                "Frame": "Location_of_light"
            },
            {
                "LU": "demonstrate.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "variety.n",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "In neuroscience, a great deal of effort has gone into investigating how the perceived world of conscious awareness is constructed inside the brain.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "investigate.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "inside.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "The process is generally thought to involve two primary mechanisms: (1) hierarchical processing of sensory inputs, (2) memory.",
        "frame": [
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Signals arising from sensory organs are transmitted to the brain and then processed in a series of stages, which extract multiple types of information from the raw input.",
        "frame": [
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "extract.v",
                "Frame": "Mining"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "In the visual system, for example, sensory signals from the eyes are transmitted to the thalamus and then to the primary visual cortex; inside the cerebral cortex they are sent to areas that extract features such as three-dimensional structure, shape, color, and motion.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "signal.n",
                "Frame": "Communication"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "inside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "extract.v",
                "Frame": "Mining"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "shape.n",
                "Frame": "Shapes"
            },
            {
                "LU": "motion.v",
                "Frame": "Gesture"
            }
        ]
    },
    {
        "text": "Memory comes into play in at least two ways.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "play.n",
                "Frame": "Competition"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "at.prep",
                "Frame": "Being_employed"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "First, it allows sensory information to be evaluated in the context of previous experience.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "Second, and even more importantly, working memory allows information to be integrated over time so that it can generate a stable representation of the worldGerald Edelman expressed this point vividly by titling one of his books about consciousness The Remembered Present.",
        "frame": [
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "express.v",
                "Frame": "Sending"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Despite the large amount of information available, the most important aspects of perception remain mysterious.",
        "frame": [
            {
                "LU": "despite.prep",
                "Frame": "Concessive"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "perception.n",
                "Frame": "Sensation"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "A great deal is known about low-level signal processing in sensory systems, but the ways by which sensory systems interact with each other, with \"executive\" systems in the frontal cortex, and with the language system are very incompletely understood.",
        "frame": [
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "deal.n",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "signal.n",
                "Frame": "Communication"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "executive.n",
                "Frame": "Leadership"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "At a deeper level, there are still basic conceptual issues that remain unresolved.",
        "frame": [
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            }
        ]
    },
    {
        "text": "Many scientists have found it difficult to reconcile the fact that information is distributed across multiple brain areas with the apparent unity of consciousness: this is one aspect of the so-called binding problem.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "binding.a",
                "Frame": "Being_obligatory"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "There are also some scientists who have expressed grave reservations about the idea that the brain forms representations of the outside world at all: influential members of this group include psychologist J.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "outside.a",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "member.n",
                "Frame": "Membership"
            }
        ]
    },
    {
        "text": "Gibson and roboticist Rodney Brooks, who both argued in favor of \"intelligence without representation\".",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "favor.v",
                "Frame": "Partiality"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "Assessment In medicine, consciousness is examined using a set of procedures known as neuropsychological assessment.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "medicine.n",
                "Frame": "Medical_specialties"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "assessment.n",
                "Frame": "Examination"
            }
        ]
    },
    {
        "text": "There are two commonly used methods for assessing the level of consciousness of a patient: a simple procedure that requires minimal training, and a more complex procedure that requires substantial expertise.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "assess.v",
                "Frame": "Assessing"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "training.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "substantial.a",
                "Frame": "Size"
            }
        ]
    },
    {
        "text": "The simple procedure begins by asking whether the patient is able to move and react to physical stimuli.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "procedure.n",
                "Frame": "Means"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "ask.v",
                "Frame": "Request"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            }
        ]
    },
    {
        "text": "If so, the next question is whether the patient can respond in a meaningful way to questions and commands.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "command.n",
                "Frame": "Request"
            }
        ]
    },
    {
        "text": "If so, the patient is asked for name, current location, and current day and time.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "location.n",
                "Frame": "Locale"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "day.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "A patient who can answer all of these questions is said to be \"oriented times three\" (sometimes denoted \"Ox3\" on a medical chart), and is usually considered fully conscious.",
        "frame": [
            {
                "LU": "patient.n",
                "Frame": "Rashness"
            },
            {
                "LU": "answer.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "consider.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The more complex procedure is known as a neurological examination, and is usually carried out by a neurologist in a hospital setting.",
        "frame": [
            {
                "LU": "procedure.n",
                "Frame": "Means"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "examination.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "hospital.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "A formal neurological examination runs through a precisely delineated series of tests, beginning with tests for basic sensorimotor reflexes, and culminating with tests for sophisticated use of language.",
        "frame": [
            {
                "LU": "examination.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "test.n",
                "Frame": "Examination"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "test.n",
                "Frame": "Examination"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The outcome may be summarized using the Glasgow Coma Scale, which yields a number in the range 315, with a score of 3 indicating brain death (the lowest defined level of consciousness), and 15 indicating full consciousness.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "indicate.v",
                "Frame": "Evidence"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "indicate.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            }
        ]
    },
    {
        "text": "The Glasgow Coma Scale has three subscales, measuring the best motor response (ranging from \"no motor response\" to \"obeys commands\"), the best eye response (ranging from \"no eye opening\" to \"eyes opening spontaneously\") and the best verbal response (ranging from \"no verbal response\" to \"fully oriented\").",
        "frame": [
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "command.n",
                "Frame": "Request"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            },
            {
                "LU": "open.v",
                "Frame": "Openness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "eye.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "open.v",
                "Frame": "Openness"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "fully.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "There is also a simpler pediatric version of the scale, for children too young to be able to use language.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "The Stream of Consciousness William James is usually credited with popularizing the idea that human consciousness flows like a stream, in his Principles of Psychology of 1890.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "stream.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "According to James, the \"stream of thought\" is governed by five characteristics: \"(1) Every thought tends to be part of a personal consciousness.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "stream.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "govern.v",
                "Frame": "Leadership"
            },
            {
                "LU": "every.prep",
                "Frame": "Frequency"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "(2) Within each personal consciousness thought is always changing.",
        "frame": [
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "change.v",
                "Frame": "Change_tool"
            }
        ]
    },
    {
        "text": "(3) Within each personal consciousness thought is sensibly continuous.",
        "frame": [
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            }
        ]
    },
    {
        "text": "(4) It always appears to deal with objects independent of itself.",
        "frame": [
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "(5) It is interested in some parts of these objects to the exclusion of others\".",
        "frame": [
            {
                "LU": "interested.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "A similar concept appears in Buddhist philosophy, expressed by the Sanskrit term Citta-satna, which is usually translated as mindstream or \"mental continuum\".",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "In the Buddhist view, though, the \"mindstream\" is viewed primarily as a source of noise that distracts attention from a changeless underlying reality.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "view.n",
                "Frame": "Range"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "In the west, the primary impact of the idea has been on literature rather than science: stream of consciousness as a narrative mode means writing in a way that attempts to portray the moment-to-moment thoughts and experiences of a character.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "west.n",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "stream.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "attempt.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "This technique perhaps had its beginnings in the monologues of Shakespeare's plays, and reached its fullest development in the novels of James Joyce and Virginia Woolf, although it has also been used by many other noted writers.",
        "frame": [
            {
                "LU": "technique.n",
                "Frame": "Means"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "beginning.n",
                "Frame": "Temporal_subregion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "play.n",
                "Frame": "Competition"
            },
            {
                "LU": "reach.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "note.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "Thought Experiment This has nothing to do with Conceptive C, but it is an interesting AI problem that will make you think about how far we can go with an AI Computer Language.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "interesting.a",
                "Frame": "Mental_stimulus_stimulus_focus"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "will.v",
                "Frame": "Giving"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "As far as Chinese goes Google does a very good job of translating Chinese to English and back again.",
        "frame": [
            {
                "LU": "as.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "English.n",
                "Frame": "People_by_origin"
            }
        ]
    },
    {
        "text": "This does not imply that Google is a conscious AI computer program.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "I fall into the Why the hell should I learn Chinese just to do your thought experiment but I think you can program a computer to pass the Turing Test for AI.",
        "frame": [
            {
                "LU": "fall.v",
                "Frame": "Motion_directional"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "If you you started from Basic English vocabulary and then extended the model to handle 10,000 Words.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "I would think you would start getting fairly intelligent conversations.",
        "frame": [
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "fairly.adv",
                "Frame": "Fairness_evaluation"
            }
        ]
    },
    {
        "text": "Continuing on to 20,000 or 30,000 Words could be done, once you had a working model.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "I dont think the computer would be conscious, as far as understanding goes, I would judge its level of understanding by the quality of the replies to questions.",
        "frame": [
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "go.v",
                "Frame": "Being_named"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The Chinese Room If you can carry on an intelligent conversation using pieces of paper slid under a door, does this imply that someone or something on the other side understands what you are saying.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "piece.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "someone.n",
                "Frame": "People"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "side.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The Chinese Room is a thought experiment by John Searle which first appeared in his paper \"Minds, Brains, and Programs\", published in Behavioral and Brain Sciences in 1980.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It addresses the question: if a machine can convincingly simulate an intelligent conversation, does it necessarily understand.",
        "frame": [
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "In the experiment Searle imagines himself in a room, acting as a computer by manually executing a program that convincingly simulates the behavior of a native Chinese speaker.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "execute.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "native.a",
                "Frame": "Indigenous_origin"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "People outside the room slide Chinese characters under the door and Searle, to whom \"Chinese writing is just so many meaningless squiggles\", is able to create sensible replies, in Chinese, by following the instructions of the program; that is, by moving papers around.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "outside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "under.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "door.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "able.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "The question arises whether Searle can be said to understand Chinese in the same way that, as Searle says: according to strong AI,.",
        "frame": [
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "the appropriately programmed computer really is a mind, in the sense that computers given the right programs can be literally said to understand and have other cognitive states.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "right.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The experiment is the centerpiece of Searle's Chinese Room Argument which holds that a program cannot give a computer a \"mind\" or \"understanding\", regardless of how intelligently it may make it behave.",
        "frame": [
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "He concludes that \"programs are neither constitutive of nor sufficient for minds.",
        "frame": [
            {
                "LU": "conclude.v",
                "Frame": "Process_end"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "\"I can have any formal program you like, but I still understand nothing.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            }
        ]
    },
    {
        "text": "The Chinese room is an argument against certain claims of leading thinkers in the field of artificial intelligence, and is not concerned with the level of intelligence that an AI program can display.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "claim.n",
                "Frame": "Statement"
            },
            {
                "LU": "lead.v",
                "Frame": "Criminal_investigation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "level.n",
                "Frame": "Dimension"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Searle's argument is directed against functionalism and computationalism (philosophical positions inspired by AI), rather than the goals of applied AI research itself.",
        "frame": [
            {
                "LU": "against.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "rather.adv",
                "Frame": "Hedging"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "The argument leaves aside the question of creating an artificial mind by methods other than symbol manipulation.",
        "frame": [
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Controversial, and the subject of an entire literature of counterargument, it became Behavioral and Brain Sciences's \"most influential target article\", generating an enormous number of commentaries and responses in the ensuing decades.",
        "frame": [
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "target.n",
                "Frame": "Aiming"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Chinese Room Thought Experiment Searle's thought experiment begins with this hypothetical premise: suppose that artificial intelligence research has succeeded in constructing a computer that behaves as if it understands Chinese.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "suppose.v",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "construct.v",
                "Frame": "Building"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "It takes Chinese characters as input and, by following the instructions of a computer program, produces other Chinese characters, which it presents as output.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "produce.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "present.v",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "Suppose, says Searle, that this computer performs its task so convincingly that it comfortably passes the Turing test: it convinces a human Chinese speaker that the program is itself a live Chinese speaker.",
        "frame": [
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "task.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "so.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "To all of the questions that the person asks, it makes appropriate responses, such that any Chinese speaker would be convinced that he or she is talking to another Chinese-speaking human being.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The question Searle wants to answer is this: does the machine literally \"understand\" Chinese.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "answer.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Or is it merely simulating the ability to understand Chinese.",
        "frame": [
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Searle calls the first position \"strong AI\" (see below) and the latter \"weak AI\".",
        "frame": [
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            }
        ]
    },
    {
        "text": "Searle then supposes that he is in a closed room and has a book with an English version of the computer program, along with sufficient paper, pencils, erasers, and filing cabinets.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "Searle could receive Chinese characters through a slot in the door, process them according to the program's instructions, and produce Chinese characters as output.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "As the computer had passed the Turing test this way, it is fair, says Searle, to deduce that he would be able to do so as well, simply by running the program manually.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "fair.a",
                "Frame": "Desirability"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "Searle asserts that there is no essential difference between the role the computer plays in the first case and the role he plays in the latter.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Each is simply following a program, step-by-step, which simulates intelligent behavior.",
        "frame": [
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "And yet, Searle points out, \"I don't speak a word of Chinese.",
        "frame": [
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "point.v",
                "Frame": "Adducing"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Since he does not understand Chinese, Searle argues, we must infer that the computer does not understand Chinese either.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Searle argues that without \"understanding\" (what philosophers call \"intentionality\"), we cannot describe what the machine is doing as \"thinking\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Because it does not think, it does not have a \"mind\" in anything like the normal sense of the word, according to Searle.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Therefore, he concludes, \"strong AI\" is mistaken.",
        "frame": [
            {
                "LU": "conclude.v",
                "Frame": "Process_end"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "History Searle's argument first appeared in his paper \"Minds, Brains, and Programs\", published in Behavioral and Brain Sciences in 1980.",
        "frame": [
            {
                "LU": "history.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It eventually became the journal's \"most influential target article\", generating an enormous number of commentaries and responses in the ensuing decades.",
        "frame": [
            {
                "LU": "eventually.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "journal.n",
                "Frame": "Records"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "influential.a",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "target.n",
                "Frame": "Aiming"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Most of the discussion consists of attempts to refute it.",
        "frame": [
            {
                "LU": "discussion.n",
                "Frame": "Discussion"
            },
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "attempt.n",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "\"The overwhelming majority,\" notes BBS editor Stevan Harnad, \"still think that the Chinese Room Argument is dead wrong.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "dead.a",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "wrong.a",
                "Frame": "Morality_evaluation"
            }
        ]
    },
    {
        "text": "The sheer volume of the literature that has grown up around it inspired Pat Hayes to quip that the field of cognitive science ought to be redefined as \"the ongoing research program of showing Searle's Chinese Room Argument to be false.",
        "frame": [
            {
                "LU": "volume.n",
                "Frame": "Text"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "inspire.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "ongoing.a",
                "Frame": "Process_continue"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The paper has become \"something of a classic in cognitive science,\" according to Harnad.",
        "frame": [
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Varol Akman agrees, and has described Searle's paper as \"an exemplar of philosophical clarity and purity\".",
        "frame": [
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Computationalism Although the Chinese Room argument was originally presented in reaction to the statements of AI researchers, philosophers have come to view it as an important part of the philosophy of mind.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "reaction.n",
                "Frame": "Response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "view.v",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "It is a challenge to functionalism and the computational theory of mind, and is related to such questions as the mind-body problem, the problem of other minds, the symbol-grounding problem, and the hard problem of consciousness.",
        "frame": [
            {
                "LU": "challenge.n",
                "Frame": "Competition"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "hard.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            }
        ]
    },
    {
        "text": "Strong AI Searle identified a philosophical position he calls \"strong AI\": The appropriately programmed computer with the right inputs and outputs would thereby have a mind in exactly the same sense human beings have minds.",
        "frame": [
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "right.n",
                "Frame": "Correctness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "The definition hinges on the distinction between simulating a mind and actually having a mind.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            }
        ]
    },
    {
        "text": "Searle writes that \"according to Strong AI, the correct simulation really is a mind.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "correct.a",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "According to Weak AI, the correct simulation is a model of the mind.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "correct.a",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "The position is implicit in some of the statements of early AI researchers and analysts.",
        "frame": [
            {
                "LU": "position.n",
                "Frame": "Placing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "statement.n",
                "Frame": "Statement"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "analyst.n",
                "Frame": "Scrutiny"
            }
        ]
    },
    {
        "text": "For example, in 1955, AI founder Herbert Simon declared that \"there are now in the world machines that think, that learn and create\" and claimed that they had \"solved the venerable mind-body problem, explaining how a system composed of matter can have the properties of mind.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "John Haugeland wrote that \"AI wants only the genuine article: machines with minds, in the full and literal sense.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "This is not science fiction, but real science, based on a theoretical conception as deep as it is daring: namely, we are, at root, computers ourselves.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "deep.a",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "Searle also ascribes the following positions to advocates of strong AI: AI systems can be used to explain the mind; The study of the brain is irrelevant to the study of the mind; and The Turing test is adequate for establishing the existence of mental states.",
        "frame": [
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "establish.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "Strong AI as Functionalism In more recent presentations of the Chinese room argument, Searle has identified \"strong AI\" as \"computer functionalism\" (a term he attributes to Daniel Dennett).",
        "frame": [
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "Functionalism is a position in modern philosophy of mind that holds that we can define mental phenomena (such as beliefs, desires, and perceptions) by describing their functions in relation to each other and to the outside world.",
        "frame": [
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "desire.n",
                "Frame": "Desiring"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "outside.a",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Because a computer program can accurately represent functional relationships as relationships between symbols, a computer can have mental phenomena if it runs the right program, according to functionalism.",
        "frame": [
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "relationship.n",
                "Frame": "Cognitive_connection"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "right.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Stevan Harnad argues that Searle's depictions of strong AI can be reformulated as \"recognizable tenets of computationalism, a position (unlike 'strong AI') that is actually held by many thinkers, and hence one worth refuting.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "strong.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Computationalism is the position in the philosophy of mind which argues that the mind can be accurately described as an information-processing system.",
        "frame": [
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Each of the following, according to Harnad, is a \"tenet\" of computationalism: Mental states are computational states (which is why computers can have mental states and help to explain the mind); Computational states are implementation-independent  in other words, it is the software that determines the computational state, not the hardware (which is why the brain, being hardware, is irrelevant); and that Since implementation is unimportant, the only empirical data that matters is how the system functions; hence the Turing test is definitive.",
        "frame": [
            {
                "LU": "following.a",
                "Frame": "Relative_time"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Computers vs.",
        "frame": []
    },
    {
        "text": "Machines vs.",
        "frame": []
    },
    {
        "text": "Brains The Chinese room has exactly the same design as any modern computer.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "It has a Von Neumann architecture, which consists of a program (the book of instructions), some memory (the papers and file cabinets), a CPU which follows the instructions (the man), and a means to write symbols in memory (the pencil and eraser).",
        "frame": [
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "book.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "instruction.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "A machine with this design is known in theoretical computer science as \"Turing complete\", because it has the necessary machinery to carry out any computation that a Turing machine can do, and therefore it is capable of doing a step-by-step simulation of any other digital machine.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "complete.a",
                "Frame": "Process_completed_state"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Alan Turing writes, \"all digital computers are in a sense equivalent.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "In other words, the Chinese room can do whatever any other computer can do (albeit much, much more slowly).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "slowly.adv",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The widely accepted Church-Turing thesis holds that anything computable is computable by any Turing complete machine.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "complete.a",
                "Frame": "Completeness"
            }
        ]
    },
    {
        "text": "The Chinese room (and all modern computers) manipulates physical objects in order to carry out calculations and do simulations.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "AI researchers Allen Newell and Herbert Simon called this kind of machine a physical symbol system.",
        "frame": [
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "It is also equivalent to the formal systems used in the field of mathematical logic.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            }
        ]
    },
    {
        "text": "Searle emphasizes the fact that this kind of symbol manipulation is syntactic (borrowing a term from the study of grammar).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "study.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "The CPU manipulates the symbols using a form of syntax rules, without any knowledge of the symbol's semantics (that is, their meaning).",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Searle's argument applies specifically to computers (that is, devices that can only manipulate symbols without knowing what they mean) and not to machines in general.",
        "frame": [
            {
                "LU": "apply.v",
                "Frame": "Come_into_effect"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "manipulate.v",
                "Frame": "Manipulate_into_doing"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "Searle does not disagree that machines can have consciousness and understanding, because, as he writes, \"we are precisely such machines\".",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Searle holds that the brain is, in fact, a machine, but the brain gives rise to consciousness and understanding using machinery that is non-computational.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "rise.n",
                "Frame": "Path_shape"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Searle writes \"brains cause minds\" and that \"actual human mental phenomena [are] dependent on actual physical-chemical properties of actual human brains\", a position called \"biological naturalism\" (as opposed to alternatives like dualism, behaviorism, functionalism or identity theory).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "position.n",
                "Frame": "Posture"
            },
            {
                "LU": "alternative.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Indeed, Searle accuses \"strong AI\" of dualism, the idea that the brain and mind are made of different \"substances\".",
        "frame": [
            {
                "LU": "accuse.v",
                "Frame": "Judgment_communication"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "He writes that \"strong AI only makes sense given the dualistic assumption that, where the mind is concerned, the brain doesn't matter.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Intentionality vs.",
        "frame": []
    },
    {
        "text": "Consciousness Searle's original argument centered on 'understanding'  that is, mental states with what philosophers call 'intentionality'  and did not directly address other closely related ideas such as 'consciousness'.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "closely.adv",
                "Frame": "Attention"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "David Chalmers argued that \"it is fairly clear that consciousness is at the root of the matter\".",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "fairly.adv",
                "Frame": "Fairness_evaluation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "In more recent presentations of the Chinese Room, Searle has included 'consciousness' as part of the argument as well.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "Strong AI vs.",
        "frame": [
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "AI research Searle's argument does not limit the intelligence with which machines can behave or act; indeed, it does not address this issue directly.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            }
        ]
    },
    {
        "text": "\"The Chinese room argument.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            }
        ]
    },
    {
        "text": "assumes complete success on the part of artificial intelligence in simulating human cognition,\" Searle writes.",
        "frame": [
            {
                "LU": "complete.a",
                "Frame": "Completeness"
            },
            {
                "LU": "success.n",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This leaves open the possibility that a machine could be built that acts more intelligent than a person, but does not have a mind or intentionality in the same way that brains do.",
        "frame": [
            {
                "LU": "open.v",
                "Frame": "Openness"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Since the primary mission of artificial intelligence research is only to create useful systems that act intelligently, Searle's arguments are not usually considered an issue for AI research.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "mission.n",
                "Frame": "Being_obligated"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "Stuart Russell and Peter Norvig observe that most AI researchers \"don't care about the strong AI hypothesisas long as the program works, they don't care whether you call it a simulation of intelligence or real intelligence.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "care.v",
                "Frame": "Desiring"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "work.n",
                "Frame": "Dimension"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Searle's \"strong AI\" should not be confused with \"strong AI\" as defined by Ray Kurzweil and other futurists, who use the term to describe machine intelligence that rivals or exceeds human intelligence.",
        "frame": [
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "confuse.v",
                "Frame": "Experiencer_obj"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "define.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "rival.n",
                "Frame": "Competition"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Kurzweil is concerned primarily with the amount of intelligence displayed by the machine, whereas Searle's argument sets no limit on this, as long as it is understood that it is a simulation and not the real thing.",
        "frame": [
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "System Reply These replies attempt to answer the question: since the man in the room doesn't speak Chinese, where is the \"mind\" that does.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "answer.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "These replies address the key ontological issues of mind vs.",
        "frame": [
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "key.a",
                "Frame": "Key"
            }
        ]
    },
    {
        "text": "body and simulation vs.",
        "frame": [
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "reality.",
        "frame": []
    },
    {
        "text": "All of the replies that identify the mind in the room are versions of \"the system reply\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            }
        ]
    },
    {
        "text": "The basic \"system reply\" argues that it is the \"whole system\" which understands Chinese.",
        "frame": [
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "While the man understands only English, when he is combined with the program, scratch paper, pencils and file cabinets, they form a system that can understand Chinese.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "\"Here, understanding is not being ascribed to the mere individual; rather it is being ascribed to this whole system of which he is a part\" Searle explains.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "The fact that man does not understand Chinese is irrelevant, because it is only the system as a whole which matters.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Searle notes that (in this simple version of the systems reply) there is nothing more than a list of physical objects; it grants the power of understanding and consciousness to \"the conjunction of that person and bits of paper\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "reply.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Searle responds by simplifying the list of physical objects: he asks what happens if the man memorizes the rules and keeps track of everything in his head.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "ask.v",
                "Frame": "Request"
            },
            {
                "LU": "happen.v",
                "Frame": "Event"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            }
        ]
    },
    {
        "text": "Then the whole system consists of just one object: the man himself.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Searle argues that if the man doesn't understand Chinese then the system doesn't understand Chinese either and the fact that the man appears to understand Chinese proves nothing.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Critics of Searle's response argue that the program has allowed the man to have two minds in one head.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "head.n",
                "Frame": "Self_motion"
            }
        ]
    },
    {
        "text": "[who.",
        "frame": [
            {
                "LU": "who.UNK",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "More sophisticated versions of the system reply try to identify more precisely what \"the system\" is and they differ in exactly how they describe it.",
        "frame": [
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "reply.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "According to these replies,[who.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            }
        ]
    },
    {
        "text": "] the \"mind that speaks Chinese\" could be such things as: the \"software\", a \"program\", a \"running program\", a simulation of the \"neural correlates of consciousness\", the \"functional system\", a \"simulated mind\", an \"emergent property\", or \"a virtual mind\" (Marvin Minsky's version of the system reply, described below).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            },
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            }
        ]
    },
    {
        "text": "Virtual Mind Reply The term \"virtual\" is used in computer science to describe an object which appears to exist \"in\" a computer (or computer network) only because software is making it appear to exist.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "The objects \"inside\" computers (including files, folders, and so on) are all \"virtual\", except for the computer's electronic components.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "inside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Similarly, Minsky argues, a computer may contain a \"mind\" that is virtual in the same sense as virtual machines, virtual communities and virtual reality.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "To clarify the distinction between the simple systems reply given above and virtual mind reply, David Cole notes that two simulations could be running on one system at the same time; one speaking Chinese and one speaking Korean.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "distinction.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "reply.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "While there is only one system, there can be multiple \"virtual minds.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Searle responds that such a mind is, at best, a simulation, and writes: \"No one supposes that computer simulations of a five-alarm fire will burn the neighborhood down or that a computer simulation of a rainstorm will leave us all drenched.",
        "frame": [
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "best.v",
                "Frame": "Required_event"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "fire.n",
                "Frame": "Fire_burning"
            },
            {
                "LU": "burn.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "down.v",
                "Frame": "Being_operational"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Nicholas Fearn responds that, for some things, simulation is as good as the real thing.",
        "frame": [
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "\"When we call up the pocket calculator function on a desktop computer, the image of a pocket calculator appears on the screen.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "screen.v",
                "Frame": "Eclipse"
            }
        ]
    },
    {
        "text": "We don't complain that 'it isn't really a calculator', because the physical attributes of the device do not matter.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "The question is, is the human mind like the pocket calculator, essentially composed of information.",
        "frame": [
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Or is the mind like the rainstorm, something other than a computer, and not realizable in full by a computer simulation.",
        "frame": [
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "(The issue of simulation is also discussed in the article synthetic intelligence.",
        "frame": [
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "discuss.v",
                "Frame": "Speak_on_topic"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "These replies provide an explanation of exactly who it is that understands Chinese.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "If there is something besides the man in the room that can understand Chinese, Searle can't argue that (1) the man doesn't understand Chinese, therefore (2) nothing in the room understands Chinese.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "This, according to those who make this reply, shows that Searle's argument fails to prove that \"strong AI\" is false.",
        "frame": [
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "make.v",
                "Frame": "Building"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "However, the replies, by themselves, do not prove that strong AI is true, either: they provide no evidence that the system (or the virtual mind) understands Chinese, other than the hypothetical premise that it passes the Turing Test.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "As Searle writes \"the systems reply simply begs the question by insisting that system must understand Chinese.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "reply.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "insist.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "Finding the Meaning As far as the person in the room is concerned, the symbols are just meaningless \"squiggles.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "far.adv",
                "Frame": "Degree"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "concern.v",
                "Frame": "Emotion_directed"
            }
        ]
    },
    {
        "text": "But if the Chinese room really \"understands\" what it's saying, then the symbols must get their meaning from somewhere.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "These arguments attempt to connect the symbols to the things they symbolize.",
        "frame": [
            {
                "LU": "argument.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "symbolize.v",
                "Frame": "Representing"
            }
        ]
    },
    {
        "text": "These replies address Searle's concerns about intentionality, symbol grounding and syntax vs.",
        "frame": [
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "concern.n",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "semantics.",
        "frame": []
    },
    {
        "text": "Robot Reply Suppose that instead of a room, the program was placed into a robot that could wander around and interact with its environment.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "This would allow a \"causal connection\" between the symbols and things they represent.",
        "frame": [
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "Hans Moravec comments: 'If we could graft a robot to a reasoning program, we wouldn't need a person to provide the meaning anymore: it would come from the physical world.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "reason.v",
                "Frame": "Reasoning"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Searles reply is to suppose that, unbeknownst to the individual in the Chinese room, some of the inputs came directly from a camera mounted on a robot, and some of the outputs were used to manipulate the arms and legs of the robot.",
        "frame": [
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "individual.n",
                "Frame": "Entity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "manipulate.v",
                "Frame": "Manipulate_into_doing"
            }
        ]
    },
    {
        "text": "Nevertheless, the person in the room is still just following the rules, and does not know what the symbols mean.",
        "frame": [
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Searle writes \"he doesn't see what comes into the robot's eyes.",
        "frame": [
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "eye.n",
                "Frame": "Perception_active"
            }
        ]
    },
    {
        "text": "\"(See Mary's room for a similar thought experiment.",
        "frame": [
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            }
        ]
    },
    {
        "text": "Derived Meaning Some respond that the room, as Searle describes it, is connected to the world: through the Chinese speakers that it is \"talking\" to and through the programmers who designed the knowledge base in his file cabinet.",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "The symbols Searle manipulates are already meaningful, they're just not meaningful to him.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Searle says that the symbols only have a \"derived\" meaning, like the meaning of words in books.",
        "frame": [
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The meaning of the symbols depends on the conscious understanding of the Chinese speakers and the programmers outside the room.",
        "frame": [
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "outside.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            }
        ]
    },
    {
        "text": "The room, according to Searle, has no understanding of its own.",
        "frame": [
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            }
        ]
    },
    {
        "text": "Commonsense Knowledge Some have argued that the meanings of the symbols would come from a vast \"background\" of commonsense knowledge encoded in the program and the filing cabinets.",
        "frame": [
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This would provide a \"context\" that would give the symbols their meaning.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Searle agrees that this background exists, but he does not agree that it can be built into programs.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Hubert Dreyfus has also criticized the idea that the \"background\" can be represented symbolically.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "To each of these suggestions, Searle's response is the same: no matter how much knowledge is written into the program and no matter how the program is connected to the world, he is still in the room manipulating symbols according to rules.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "suggestion.n",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            }
        ]
    },
    {
        "text": "His actions are syntactic and this can never explain to him what the symbols stand for.",
        "frame": [
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "stand.n",
                "Frame": "Placing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Searle writes \"syntax is insufficient for semantics.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "However, for those who accept that Searle's actions simulate a mind, separate from his own, the important question is not what the symbols mean to Searle, what is important is what they mean to the virtual mind.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "While Searle is trapped in the room, the virtual mind is not: it is connected to the outside world through the Chinese speakers it speaks to, through the programmers who gave it world knowledge, and through the cameras and other sensors that roboticists can supply.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "trap.n",
                "Frame": "Trap"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "outside.a",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "supply.v",
                "Frame": "Store"
            }
        ]
    },
    {
        "text": "Brain Simulator Reply Suppose that the program simulated in fine detail the action of every neuron in the brain of a Chinese speaker.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "This strengthens the intuition that there would be no significant difference between the operation of the program and the operation of a live human brain.",
        "frame": [
            {
                "LU": "strengthen.v",
                "Frame": "Cause_change_of_strength"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "significant.a",
                "Frame": "Importance"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "Searle replies that such a simulation will not have reproduced the important features of the brain  its causal and intentional states.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "reproduce.v",
                "Frame": "Duplication"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Searle is adamant that \"human mental phenomena [are] dependent on actual physical-chemical properties of actual human brains.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            }
        ]
    },
    {
        "text": "Moreover, he argues: \"[I]magine that instead of a monolingual man in a room shuffling symbols we have the man operate an elaborate set of water pipes with valves connecting them.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "operate.v",
                "Frame": "Being_in_operation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            }
        ]
    },
    {
        "text": "When the man receives the Chinese symbols, he looks up in the program, written in English, which valves he has to turn on and off.",
        "frame": [
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "look.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "turn.v",
                "Frame": "Becoming"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "off.prep",
                "Frame": "Accuracy"
            }
        ]
    },
    {
        "text": "Each water connection corresponds to a synapse in the Chinese brain, and the whole system is rigged up so that after doing all the right firings, that is after turning on all the right faucets, the Chinese answers pop out at the output end of the series of pipes.",
        "frame": [
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "so.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "right.a",
                "Frame": "Part_orientational"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "turn.v",
                "Frame": "Becoming"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "answer.n",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "pop.v",
                "Frame": "Ingest_substance"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            }
        ]
    },
    {
        "text": "Now where is the understanding in this system.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "It takes Chinese as input, it simulates the formal structure of the synapses of the Chinese brain, and it gives Chinese as output.",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "But the man certainly doesn't understand Chinese, and neither do the water pipes, and if we are tempted to adopt what I think is the absurd view that somehow the conjunction of man and water pipes understands, remember that in principle the man can internalize the formal structure of the water pipes and do all the \"neuron firings\" in his imagination.",
        "frame": [
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "certainly.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "absurd.a",
                "Frame": "Mental_property"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "\" Searle (1980) Formal Arguments Searle has produced a more formal version of the argument of which the Chinese Room forms a part.",
        "frame": [
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "He presented the first version in 1984.",
        "frame": [
            {
                "LU": "present.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The version given below is from 1990.",
        "frame": [
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "below.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "The part of the argument which should be controversial is A3 and it is this point which the Chinese room thought experiment is intended to prove.",
        "frame": [
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "He begins with three axioms: (A1) \"Programs are formal (syntactic).",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "A program uses syntax to manipulate symbols and pays no attention to the semantics of the symbols.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "manipulate.v",
                "Frame": "Manipulate_into_doing"
            },
            {
                "LU": "attention.n",
                "Frame": "Attention"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "It knows where to put the symbols and how to move them around, but it doesn't know what they stand for or what they mean.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "put.v",
                "Frame": "Encoding"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "For the program, the symbols are just physical objects like any others.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "(A2) \"Minds have mental contents (semantics).",
        "frame": []
    },
    {
        "text": "Unlike the symbols used by a program, our thoughts have meaning: they represent things and we know what it is they represent.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "(A3) \"Syntax by itself is neither constitutive of nor sufficient for semantics.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "This is what the Chinese room argument is intended to prove: the Chinese room has syntax (because there is a man in there moving symbols around).",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The Chinese room has no semantics (because, according to Searle, there is no one or nothing in the room that understands what the symbols mean).",
        "frame": [
            {
                "LU": "chinese.a",
                "Frame": "Origin"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "accord.v",
                "Frame": "Be_in_agreement_on_action"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "room.n",
                "Frame": "Residence"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "mean.a",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Therefore, having syntax is not enough to generate semantics.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Ingestion"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "enough.adv",
                "Frame": "Sufficiency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Searle posits that these lead directly to this conclusion: (C1) Programs are neither constitutive of nor sufficient for minds.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "conclusion.n",
                "Frame": "Coming_to_believe"
            },
            {
                "LU": "sufficient.a",
                "Frame": "Sufficiency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "This should follow without controversy from the first three: Programs don't have semantics.",
        "frame": [
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Programs have only syntax, and syntax is insufficient for semantics.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Every mind has semantics.",
        "frame": []
    },
    {
        "text": "Therefore programs are not minds.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This much of the argument is intended to show that artificial intelligence will never produce a machine with a mind by writing programs that manipulate symbols.",
        "frame": [
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "The remainder of the argument addresses a different issue.",
        "frame": [
            {
                "LU": "remainder.n",
                "Frame": "Left_to_do"
            },
            {
                "LU": "address.v",
                "Frame": "Statement"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "issue.n",
                "Frame": "Emanating"
            }
        ]
    },
    {
        "text": "Is the human brain running a program.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "In other words, is the computational theory of mind correct.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "correct.a",
                "Frame": "Resolve_problem"
            }
        ]
    },
    {
        "text": "He begins with an axiom that is intended to express the basic modern scientific consensus about brains and minds: (A4) Brains cause minds.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "cause.n",
                "Frame": "Condition_symptom_relation"
            }
        ]
    },
    {
        "text": "Searle claims that we can derive \"immediately\" and \"trivially\" that: (C2) Any other system capable of causing minds would have to have causal powers (at least) equivalent to those of brains.",
        "frame": [
            {
                "LU": "claim.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Brains must have something that causes a mind to exist.",
        "frame": [
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "cause.v",
                "Frame": "Causation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Science has yet to determine exactly what it is, but it must exist, because minds exist.",
        "frame": [
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "yet.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Searle calls it \"causal powers\".",
        "frame": [
            {
                "LU": "call.v",
                "Frame": "Request"
            },
            {
                "LU": "power.n",
                "Frame": "Electricity"
            }
        ]
    },
    {
        "text": "\"Causal powers\" is whatever the brain uses to create a mind.",
        "frame": [
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "If anything else can cause a mind to exist, it must have \"equivalent causal powers\".",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "\"Equivalent causal powers\" is whatever else that could be used to make a mind.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "make.v",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "And from this he derives the further conclusions: (C3) Any artifact that produced mental phenomena, any artificial brain, would have to be able to duplicate the specific causal powers of brains, and it could not do that just by running a formal program.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "artifact.n",
                "Frame": "Artifact"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "This follows from C1 and C2: Since no program can produce a mind, and \"equivalent causal powers\" produce minds, it follows that programs do not have \"equivalent causal powers.",
        "frame": [
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "(C4) The way that human brains actually produce mental phenomena cannot be solely by virtue of running a computer program.",
        "frame": [
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "Since programs do not have \"equivalent causal powers\", \"equivalent causal powers\" produce minds, and brains produce minds, it follows that brains do not use programs to produce minds.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "follow.v",
                "Frame": "Relative_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Mind Uploading Whole brain emulation or mind uploading (sometimes called mind transfer) is the hypothetical process of transferring or copying a conscious mind from a brain to a non-biological substrate by scanning and mapping a biological brain in detail and copying its state into a computer system or another computational device.",
        "frame": [
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "transfer.v",
                "Frame": "Transfer"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "scan.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "The computer would have to run a simulation model so faithful to the original that it would behave in essentially the same way as the original brain, or for all practical purposes, indistinguishably.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "faithful.n",
                "Frame": "People_by_religion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The simulated mind is assumed to be part of a virtual reality simulated world, supported by an anatomic 3D body simulation model.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "Alternatively, the simulated mind could be assumed to reside in a computer inside (or connected to) a humanoid robot or a biological body, replacing its brain.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "reside.v",
                "Frame": "Residence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "inside.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Whole brain emulation is discussed by futurists as a \"logical endpoint\" of the topical computational neuroscience and neuroinformatics fields, both about brain simulation for medical research purposes.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            }
        ]
    },
    {
        "text": "It is discussed in artificial intelligence research publications as an approach to strong AI.",
        "frame": [
            {
                "LU": "discuss.v",
                "Frame": "Speak_on_topic"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "publication.n",
                "Frame": "Publishing"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            }
        ]
    },
    {
        "text": "Among futurists and within the transhumanist movement it is an important proposed life extension technology, originally suggested in biomedical literature in 1971.",
        "frame": [
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "extension.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "It is a central conceptual feature of numerous science fiction novels and films.",
        "frame": [
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "numerous.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "film.v",
                "Frame": "Distributed_position"
            }
        ]
    },
    {
        "text": "Whole brain emulation is considered by some scientists as a theoretical and futuristic but possible technology, although mainstream research funders and scientific journals remain skeptical.",
        "frame": [
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "journal.n",
                "Frame": "Records"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            },
            {
                "LU": "skeptical.a",
                "Frame": "Certainty"
            }
        ]
    },
    {
        "text": "Several contradictory predictions have been made about when a whole human brain can be emulated; some of the predicted dates have already passed.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "when.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "date.n",
                "Frame": "Origin"
            },
            {
                "LU": "pass.v",
                "Frame": "Path_shape"
            }
        ]
    },
    {
        "text": "Substantial mainstream research and development are however being done in relevant areas including development of faster super computers, virtual reality, brain-computer interfaces, animal brain mapping and simulation, connectomics and information extraction from dynamically functioning brains.",
        "frame": [
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The question whether an emulated brain can be a human mind is debated by philosophers, and may be viewed as impossible by those who hold a dualistic view of the human mind, which is common in many religions.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Simple Artificial Neural Network The human brain contains about 100 billion nerve cells called neurons, each individually linked to other neurons by way of connectors called axons and dendrites.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Signals at the junctures (synapses) of these connections are transmitted by the release and detection of chemicals known as neurotransmitters.",
        "frame": [
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "release.n",
                "Frame": "Publishing"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "The established neuroscientific consensus is that the human mind is largely an emergent property of the information processing of this neural network.",
        "frame": [
            {
                "LU": "establish.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            }
        ]
    },
    {
        "text": "Importantly, neuroscientists have stated that important functions performed by the mind, such as learning, memory, and consciousness, are due to purely physical and electrochemical processes in the brain and are governed by applicable laws.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "govern.v",
                "Frame": "Leadership"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "For example, Christof Koch and Giulio Tononi wrote in IEEE Spectrum: \"Consciousness is part of the natural world.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "It depends, we believe, only on mathematics and logic and on the imperfectly known laws of physics, chemistry, and biology; it does not arise from some magical or otherworldly quality.",
        "frame": [
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "The concept of mind uploading is based on this mechanistic view of the mind, and denies the vitalist view of human life and consciousness.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "Many eminent computer scientists and neuroscientists have predicted that computers will be capable of thought and even attain consciousness, including Koch and Tononi, Douglas Hofstadter, Jeff Hawkins, Marvin Minsky, Randal A.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "thought.n",
                "Frame": "Cogitation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "Koene, and Rodolfo Llinas.",
        "frame": []
    },
    {
        "text": "Such a machine intelligence capability might provide a computational substrate necessary for uploading.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "However, even though uploading is dependent upon such a general capability it is conceptually distinct from general forms of AI in that it results from dynamic reanimation of information derived from a specific human mind so that the mind retains a sense of historical identity (other forms are possible but would compromise or eliminate the life-extension feature generally associated with uploading).",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "result.n",
                "Frame": "Causation"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "compromise.v",
                "Frame": "Sacrificing_for"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "The transferred and reanimated information would become a form of artificial intelligence, sometimes called an infomorph or \"nomorph.",
        "frame": [
            {
                "LU": "transfer.v",
                "Frame": "Transfer"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Many theorists have presented models of the brain and have established a range of estimates of the amount of computing power needed for partial and complete simulations.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "establish.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "range.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Using these models, some have estimated that uploading may become possible within decades if trends such as Moore's Law continue.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "continue.v",
                "Frame": "Process_continue"
            }
        ]
    },
    {
        "text": "The prospect of uploading human consciousness in this manner raises many philosophical questions involving identity, individuality and if the soul and mind can be defined as the information content of the brain, as well as numerous problems of medical ethics and morality of the process.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "raise.v",
                "Frame": "Building"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "numerous.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Immortality/Backup In theory, if the information and processes of the mind can be disassociated from the biological body, they are no longer tied to the individual limits and lifespan of that body.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "process.n",
                "Frame": "Process"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "body.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "Furthermore, information within a brain could be partly or wholly copied or transferred to one or more other substrates (including digital storage or another brain), thereby reducing or eliminating mortality risk.",
        "frame": [
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "copy.v",
                "Frame": "Imitating"
            },
            {
                "LU": "transfer.v",
                "Frame": "Transfer"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "storage.n",
                "Frame": "Storing"
            },
            {
                "LU": "reduce.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "eliminate.v",
                "Frame": "Killing"
            },
            {
                "LU": "mortality.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "This general proposal appears to have been first made in the biomedical literature in 1971 by biogerontologist George M.",
        "frame": [
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "proposal.n",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "literature.n",
                "Frame": "Fields"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Martin of the University of Washington.",
        "frame": [
            {
                "LU": "university.n",
                "Frame": "Locale_by_use"
            }
        ]
    },
    {
        "text": "Speedup A computer-based intelligence such as an upload could potentially think much faster than a human even if it were no more intelligent.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "human.a",
                "Frame": "People"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Human neurons exchange electrochemical signals with a maximum speed of about 150 meters per second, whereas the speed of light is about 300 million meters per second, about two million times faster.",
        "frame": [
            {
                "LU": "exchange.v",
                "Frame": "Exchange"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "maximum.a",
                "Frame": "Extreme_value"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "second.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "light.n",
                "Frame": "Location_of_light"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "second.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "million.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Also, neurons can generate a maximum of about 200 to 1000 action potentials or \"spikes\" per second, whereas the number of signals per second in modern[when.",
        "frame": [
            {
                "LU": "maximum.n",
                "Frame": "Extreme_value"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "potential.n",
                "Frame": "Capability"
            },
            {
                "LU": "second.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "signal.n",
                "Frame": "Communication"
            },
            {
                "LU": "second.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "modern.a",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "] computer chips is about 3 GHz (about 20 million times greater) and expected to increase by at least a factor 100.",
        "frame": [
            {
                "LU": "chip.n",
                "Frame": "Part_piece"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "factor.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "Therefore, even if the computer components responsible for simulating a brain were not significantly smaller than a biological brain, and even if the temperature of these components was not significantly lower, Eliezer Yudkowsky of the Singularity Institute for Artificial Intelligence calculates a theoretical upper bound for the speed of a future artificial neural network.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "temperature.n",
                "Frame": "Temperature"
            },
            {
                "LU": "component.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "bound.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            }
        ]
    },
    {
        "text": "It could in theory run about 1 million times faster than a real brain, experiencing about a year of subjective time in only 31 seconds of real time.",
        "frame": [
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "However, in practice this massively parallel implementation would require separate computational units for each of the hundred billion neurons and each of the hundred trillion synapses.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "practice.n",
                "Frame": "Businesses"
            },
            {
                "LU": "parallel.n",
                "Frame": "Similarity"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "hundred.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "hundred.num",
                "Frame": "Cardinal_numbers"
            }
        ]
    },
    {
        "text": "That requires an enormously large computer or artificial neural network in comparison with today's super-computers.",
        "frame": [
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "In a less futuristic implementation, time-sharing would allow several neurons to be emulated sequentially by the same computational unit.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Thus the size of the computer would be restricted, but the speedup would be lower.",
        "frame": []
    },
    {
        "text": "Assuming that cortical minicolumns organized into hypercolumns are the computational units, mammal brains can be emulated by today's super computers, but with slower speed than in a biological brain.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "organize.v",
                "Frame": "Making_arrangements"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Multiple / Parallel Existence Another concept explored in science fiction is the idea of more than one running \"copy\" of a human mind existing at once.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "exist.v",
                "Frame": "Existence"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Such copies could potentially allow an \"individual\" to experience many things at once, and later integrate the experiences of all copies into a central mentality at some point in the future, effectively allowing a single sentient being to \"be many places at once\" and \"do many things at once\"; this concept has been explored in fiction.",
        "frame": [
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "copy.n",
                "Frame": "Imitating"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "central.a",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Such partial and complete copies of a sentient being raise interesting questions regarding identity and individuality.",
        "frame": [
            {
                "LU": "partial.a",
                "Frame": "Partiality"
            },
            {
                "LU": "complete.a",
                "Frame": "Completeness"
            },
            {
                "LU": "interesting.a",
                "Frame": "Mental_stimulus_stimulus_focus"
            },
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "Computational Capacity Futurist Ray Kurzweil's projected supercomputer processing power based on Moore's law exponential development of computing capacity.",
        "frame": [
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": "Here the computational capacity doubling time is assumed to be 1.",
        "frame": [
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "double.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "2 years.",
        "frame": [
            {
                "LU": "year.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "Advocates of mind uploading point to Moore's law to support the notion that the necessary computing power is expected to become available within a few decades.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "few.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "decade.n",
                "Frame": "Measure_duration"
            }
        ]
    },
    {
        "text": "However, the actual computational requirements for running an uploaded human mind are very difficult to quantify, potentially rendering such an argument specious.",
        "frame": [
            {
                "LU": "actual.a",
                "Frame": "Actually_occurring_entity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "render.v",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "Regardless of the techniques used to capture or recreate the function of a human mind, the processing demands are likely to be immense, due to the large number of neurons in the human brain along with the considerable complexity of each neuron.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "immense.a",
                "Frame": "Size"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "considerable.a",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "In 2004, Henry Markram, lead researcher of the \"Blue Brain Project\", has stated that \"it is not [their] goal to build an intelligent neural network\", based solely on the computational demands such a project would have.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "lead.a",
                "Frame": "First_rank"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "goal.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "It will be very difficult because, in the brain, every molecule is a powerful computer and we would need to simulate the structure and function of trillions upon trillions of molecules as well as all the rules that govern how they interact.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "all.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "You would literally need computers that are trillions of times bigger and faster than anything existing today.",
        "frame": [
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Five years later, after successful simulation of part of a rat brain, the same scientist was much more bold and optimistic.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "successful.a",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "rat.v",
                "Frame": "Reporting"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "scientist.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "optimistic.a",
                "Frame": "Attitude_description"
            }
        ]
    },
    {
        "text": "In 2009, when he was director of the Blue Brain Project, he claimed that a detailed, functional artificial human brain can be built within the next 10 years Simulation Model Scale A high-level cognitive AI model of the brain architecture is not required for brain emulation.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "director.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Simple neuron model: Black-box dynamic non-linear signal processing system Metabolism model: The movement of positively-charged ions through the ion channels controls the membrane electrical action potential in an axon.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "signal.n",
                "Frame": "Communication"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "potential.n",
                "Frame": "Capability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Since the function of the human mind, and how it might arise from the working of the brain's neural network, are poorly understood issues, mind uploading relies on the idea of neural network emulation.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "arise.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            }
        ]
    },
    {
        "text": "Rather than having to understand the high-level psychological processes and large-scale structures of the brain, and model them using classical artificial intelligence methods and cognitive psychology models, the low-level structure of the underlying neural network is captured, mapped and emulated with a computer system.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "In computer science terminology, rather than analyzing and reverse engineering the behavior of the algorithms and data structures that resides in the brain, a blueprint of its source code is translated to another programming language.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "reside.v",
                "Frame": "Residence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "The human mind and the personal identity then, theoretically, is generated by the emulated neural network in an identical fashion to it being generated by the biological neural network.",
        "frame": [
            {
                "LU": "identity.n",
                "Frame": "Identicality"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "fashion.n",
                "Frame": "Trendiness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            }
        ]
    },
    {
        "text": "On the other hand, a molecule-scale simulation of the brain is not expected to be required, provided that the functioning of the neurons is not affected by quantum mechanical processes.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "expect.v",
                "Frame": "Expectation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "affect.v",
                "Frame": "Objective_influence"
            },
            {
                "LU": "mechanical.a",
                "Frame": "Gizmo"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "The neural network emulation approach only requires that the functioning and interaction of neurons and synapses are understood.",
        "frame": [
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "It is expected that it is sufficient with a black-box signal processing model of how the neurons respond to nerve impulses (electrical as well as chemical synaptic transmission).",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "signal.n",
                "Frame": "Communication"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "electrical.a",
                "Frame": "Electricity"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            }
        ]
    },
    {
        "text": "A sufficiently complex and accurate model of the neurons is required.",
        "frame": [
            {
                "LU": "accurate.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            }
        ]
    },
    {
        "text": "A traditional artificial neural network model, for example multi-layer perceptron network model, is not considered as sufficient.",
        "frame": [
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "sufficient.a",
                "Frame": "Sufficiency"
            }
        ]
    },
    {
        "text": "A dynamic spiking neural network model is required, which reflects that the neuron fires only when a membrane potential reaches a certain level.",
        "frame": [
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            },
            {
                "LU": "reflect.v",
                "Frame": "Cogitation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "potential.n",
                "Frame": "Capability"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "It is likely that the model must include delays, non-linear functions and differential equations describing the relation between electrophysical parameters such as electrical currents, voltages, membrane states (ion channel states) and neuromodulators.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "relation.n",
                "Frame": "Relation"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            }
        ]
    },
    {
        "text": "Since learning and long-term memory are believed to result from strengthening or weakening the synapses via a mechanism known as synaptic plasticity or synaptic adaptation, the model should include this mechanism.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "strengthen.v",
                "Frame": "Cause_change_of_strength"
            },
            {
                "LU": "weaken.v",
                "Frame": "Cause_change_of_strength"
            },
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "The response of sensory receptors to various stimuli must also be modeled.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Furthermore, the model may have to include metabolism, i.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "how the neurons are affected by hormones and other chemical substances that may cross the blood-brain barrier.",
        "frame": [
            {
                "LU": "affect.v",
                "Frame": "Objective_influence"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "chemical.n",
                "Frame": "Substance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "may.v",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "It is considered likely that the model must include currently unknown neuromodulators, neurotransmitters and ion channels.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "unknown.a",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "It is considered unlikely that the simulation model has to include protein interaction, which would make it computationally complex.",
        "frame": [
            {
                "LU": "unlikely.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "make.v",
                "Frame": "Type"
            }
        ]
    },
    {
        "text": "A digital computer simulation model of an analog system such as the brain is an approximation that introduces random quantization errors and distortion.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "However, the biological neurons also suffer from randomness and limited precision, for example due to background noise.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "The errors of the discrete model can be made smaller than the randomness of the biological brain by choosing a sufficiently high variable resolution and sample rate, and sufficiently accurate models of non-linearities.",
        "frame": [
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "choose.v",
                "Frame": "Choosing"
            },
            {
                "LU": "variable.n",
                "Frame": "Contingency"
            },
            {
                "LU": "rate.n",
                "Frame": "Relational_quantity"
            },
            {
                "LU": "accurate.a",
                "Frame": "Accuracy"
            }
        ]
    },
    {
        "text": "The computational power and computer memory must however be sufficient to run such large simulations, preferably in real time.",
        "frame": [
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Scanning and Mapping Scale of an Individual When modelling and simulating the brain of a specific individual, a brain map or connectivity database showing the connections between the neurons must be extracted from an anatomic model of the brain.",
        "frame": [
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "This network map should show the connectivity of the whole nervous system, including the spinal cord, sensory receptors, and muscle cells.",
        "frame": [
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "Destructive scanning of the human brain including synaptic details is possible as of end of 2010.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "detail.n",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "A full brain map should also reflect the synaptic strength (the \"weight\") of each connection.",
        "frame": [
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "strength.n",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            }
        ]
    },
    {
        "text": "It is unclear if the current technology allows that.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "It is proposed that short-term memory and working memory is prolonged or repeated firing of neurons, as well as intra-neural dynamic processes.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "work.v",
                "Frame": "Being_employed"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "process.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Since the electrical and chemical signal state of the synapses and neurons may be hard to extract, the uploading might result in that the uploaded mind perceives a memory loss of the events immediately before the time of brain scanning.",
        "frame": [
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "electrical.a",
                "Frame": "Electricity"
            },
            {
                "LU": "chemical.a",
                "Frame": "Substance"
            },
            {
                "LU": "signal.n",
                "Frame": "Communication"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "hard.a",
                "Frame": "Difficulty"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "extract.v",
                "Frame": "Mining"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "A full brain map would occupy less than 2 x 1016 bytes (20000 TB) and would store the addresses of the connected neurons, the synapse type and the synapse \"weight\" for each of the brains' 1015 synapses.",
        "frame": [
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "address.n",
                "Frame": "Statement"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Serial Sectioning of a Brain A possible method for mind uploading is serial sectioning, in which the brain tissue and perhaps other parts of the nervous system are frozen and then scanned and analyzed layer by layer, thus capturing the structure of the neurons and their interconnections.",
        "frame": [
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "scan.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "capture.v",
                "Frame": "Taking_captive"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "The exposed surface of frozen nerve tissue would be scanned and recorded, and then the surface layer of tissue removed.",
        "frame": [
            {
                "LU": "scan.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "record.v",
                "Frame": "Recording"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "surface.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "layer.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "While this would be a very slow and labor intensive process, research is currently underway to automate the collection and microscopy of serial sections.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "slow.a",
                "Frame": "Taking_time"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "underway.a",
                "Frame": "Process_continue"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "section.n",
                "Frame": "Separating"
            }
        ]
    },
    {
        "text": "The scans would then be analyzed, and a model of the neural net recreated in the system that the mind was being uploaded into.",
        "frame": [
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "net.n",
                "Frame": "Earnings_and_losses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "There are uncertainties with this approach using current microscopy techniques.",
        "frame": [
            {
                "LU": "uncertainty.n",
                "Frame": "Certainty"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "approach.n",
                "Frame": "Means"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "If it is possible to replicate neuron function from its visible structure alone, then the resolution afforded by a scanning electron microscope would suffice for such a technique.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "visible.a",
                "Frame": "Obviousness"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "scan.v",
                "Frame": "Scrutiny"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "However, as the function of brain tissue is partially determined by molecular events (particularly at synapses, but also at other places on the neuron's cell membrane), this may not suffice for capturing and simulating neuron functions.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "event.n",
                "Frame": "Event"
            },
            {
                "LU": "place.n",
                "Frame": "Locale"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "capture.v",
                "Frame": "Taking_captive"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "It may be possible to extend the techniques of serial sectioning and to capture the internal molecular makeup of neurons, through the use of sophisticated immunohistochemistry staining methods which could then be read via confocal laser scanning microscopy.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "scan.v",
                "Frame": "Scrutiny"
            }
        ]
    },
    {
        "text": "However, as the physiological genesis of 'mind' is not currently known, this method may not be able to access all of the necessary biochemical information to recreate a human brain with sufficient fidelity.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "necessary.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "Brain Imaging It may also be possible to create functional 3D maps of the brain activity, using advanced neuroimaging technology, such as functional MRI (fMRI, for mapping change in blood flow), Magnetoencephalography (MEG, for mapping of electrical currents), or combinations of multiple methods, to build a detailed three-dimensional model of the brain using non-invasive and non-destructive methods.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "advanced.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "change.n",
                "Frame": "Change_tool"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "flow.v",
                "Frame": "Fluidic_motion"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "combination.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Today, fMRI is often combined with MEG for creating functional maps of human cortex during more complex cognitive tasks, as the methods complement each other.",
        "frame": [
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "during.prep",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "Even though current imaging technology lacks the spatial resolution needed to gather the information needed for such a scan, important recent and future developments are predicted to substantially improve both spatial and temporal resolutions of existing technologies.",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "current.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "image.n",
                "Frame": "Sensation"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "gather.v",
                "Frame": "Come_together"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "future.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "development.n",
                "Frame": "Event"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "improve.v",
                "Frame": "Progression"
            },
            {
                "LU": "technology.n",
                "Frame": "Artifact"
            }
        ]
    },
    {
        "text": "Brain-Computer Interface (BCI) Brain-computer interfaces (BCI) (also known as neuro-computer interfaces, direct neuron interfaces or cerebral interfaces) constitute one of the hypothetical technologies for the reading of information in the dynamically functioning brain.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "constitute.v",
                "Frame": "Being_in_category"
            },
            {
                "LU": "technology.n",
                "Frame": "Artifact"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reading.n",
                "Frame": "Linguistic_meaning"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The production of this or a similar device may be essential to the possibility of mind uploading a living human subject.",
        "frame": [
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "essential.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "subject.n",
                "Frame": "Experimentation"
            }
        ]
    },
    {
        "text": "Neuroinformatics An artificial neural network described as being \"as big and as complex as half of a mouse brain\" was run on an IBM blue gene supercomputer by a University of Nevada research team in 2007.",
        "frame": [
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "big.a",
                "Frame": "Size"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "university.n",
                "Frame": "Locale_by_use"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            },
            {
                "LU": "team.n",
                "Frame": "Team"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "A simulated time of one second took ten seconds of computer time.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "The researchers said they had seen \"biologically consistent\" nerve impulses flowed through the virtual cortex.",
        "frame": [
            {
                "LU": "have.v",
                "Frame": "Have_associated"
            },
            {
                "LU": "flow.v",
                "Frame": "Fluidic_motion"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "However, the simulation lacked the structures seen in real mice brains, and they intend to improve the accuracy of the neuron model.",
        "frame": [
            {
                "LU": "lack.v",
                "Frame": "Possession"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "improve.v",
                "Frame": "Progression"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            }
        ]
    },
    {
        "text": "Blue Brain is a project, launched in May 2005 by IBM and the Swiss Federal Institute of Technology in Lausanne, with the aim to create a computer simulation of a mammalian cortical column, down to the molecular level.",
        "frame": [
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "launch.v",
                "Frame": "Shoot_projectiles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "federal.a",
                "Frame": "Political_locales"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "aim.n",
                "Frame": "Aiming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "down.adv",
                "Frame": "Ingestion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "The project uses a supercomputer based on IBM's Blue Gene design to simulate the electrical behavior of neurons based upon their synaptic connectivity and complement of intrinsic membrane currents.",
        "frame": [
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "design.n",
                "Frame": "Coming_up_with"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            },
            {
                "LU": "complement.n",
                "Frame": "Rest"
            }
        ]
    },
    {
        "text": "The initial goal of the project, completed in December 2006, was the simulation of a rat neocortical column, which can be considered the smallest functional unit of the neocortex (the part of the brain thought to be responsible for higher functions such as conscious thought), containing 10,000 neurons (and 108 synapses).",
        "frame": [
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "goal.n",
                "Frame": "Purpose"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "December.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "rat.v",
                "Frame": "Reporting"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "conscious.a",
                "Frame": "Awareness"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "Between 1995 and 2005, Henry Markram mapped the types of neurons and their connections in such a column.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In November 2007, the project reported the end of the first phase, delivering a data-driven process for creating, validating, and researching the neocortical column.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "November.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "phase.n",
                "Frame": "Thermodynamic_phase"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "research.v",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "The project seeks to eventually reveal aspects of human cognition and various psychiatric disorders caused by malfunctioning neurons, such as autism, and to understand how pharmacological agents affect network behavior.",
        "frame": [
            {
                "LU": "project.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "eventually.adv",
                "Frame": "Time_vector"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "cause.v",
                "Frame": "Condition_symptom_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "understand.v",
                "Frame": "Awareness"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "An organization called the Brain Preservation Foundation was founded in 2010 and is offering a Brain Preservation Technology prize to promote exploration of brain preservation technology in service of humanity.",
        "frame": [
            {
                "LU": "foundation.n",
                "Frame": "Body_decoration"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "promote.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "preservation.n",
                "Frame": "Preserving"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "service.n",
                "Frame": "Public_services"
            }
        ]
    },
    {
        "text": "The Prize, currently $106,000, will be awarded in two parts, 25% to the first international team to preserve a whole mouse brain, and 75% to the first team to preserve a whole large animal brain in a manner that could also be adopted for humans in a hospital or hospice setting immediately upon clinical death.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "international.a",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "team.n",
                "Frame": "Team"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "team.n",
                "Frame": "Team"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "animal.n",
                "Frame": "Animals"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "hospital.n",
                "Frame": "Buildings"
            },
            {
                "LU": "death.n",
                "Frame": "Death"
            }
        ]
    },
    {
        "text": "Ultimately the goal of this prize is to generate a whole brain map which may be used in support of separate efforts to upload and possibly 'reboot' a mind in virtual space.",
        "frame": [
            {
                "LU": "ultimately.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "goal.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "effort.n",
                "Frame": "Attempt"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "possibly.adv",
                "Frame": "Likelihood"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Legal, Political and Economical Issues It may be difficult to ensure the protection of human rights in simulated worlds.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "right.n",
                "Frame": "Correctness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "For example, social science researchers might be tempted to expose simulated minds, or whole isolated societies of simulated minds, to controlled experiments in which many copies of the same minds are exposed (serially or simultaneously) to different test conditions.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "social.n",
                "Frame": "Social_event"
            },
            {
                "LU": "science.n",
                "Frame": "Craft"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "society.n",
                "Frame": "Organization"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "simultaneously.adv",
                "Frame": "Simultaneity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "The only limited physical resource to be expected in a simulated world is the computational capacity, and thus the speed and complexity of the simulation.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": "Wealthy or privileged individuals in a society of uploads might thus experience more subjective time than others in the same real time, or may be able to run multiple copies of themselves or others, and thus produce more service and become even more wealthy.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "society.n",
                "Frame": "Organization"
            },
            {
                "LU": "experience.v",
                "Frame": "Expertise"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "service.n",
                "Frame": "Public_services"
            }
        ]
    },
    {
        "text": "Others may suffer from computational resource starvation and show a slow motion behavior.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "slow.a",
                "Frame": "Taking_time"
            },
            {
                "LU": "motion.v",
                "Frame": "Gesture"
            },
            {
                "LU": "behavior.n",
                "Frame": "Conduct"
            }
        ]
    },
    {
        "text": "Copying vs.",
        "frame": []
    },
    {
        "text": "Moving Another philosophical issue with mind uploading is whether an uploaded mind is really the \"same\" sentience, or simply an exact copy with the same memories and personality; or, indeed, what the difference could be between such a copy and the original (see the Swampman thought experiment).",
        "frame": [
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "exact.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "difference.n",
                "Frame": "Similarity"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "experiment.n",
                "Frame": "Experimentation"
            }
        ]
    },
    {
        "text": "This issue is especially complex if the original remains essentially unchanged by the procedure, thereby resulting in an obvious copy which could potentially have rights separate from the unaltered, obvious original.",
        "frame": [
            {
                "LU": "issue.n",
                "Frame": "Supply"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "remain.v",
                "Frame": "Existence"
            },
            {
                "LU": "unchanged.a",
                "Frame": "Change_post-state"
            },
            {
                "LU": "result.v",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "right.n",
                "Frame": "Correctness"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Most projected brain scanning technologies, such as serial sectioning of the brain, would necessarily be destructive, and the original brain would not survive the brain scanning procedure.",
        "frame": [
            {
                "LU": "technology.n",
                "Frame": "Artifact"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "procedure.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "But if it can be kept intact, the computer-based consciousness could be a copy of the still-living biological person.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "It is in that case implicit that copying a consciousness could be as feasible as literally moving it into one or several copies, since these technologies generally involve simulation of a human brain in a computer of some sort, and digital files such as computer programs can be copied precisely.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "copy.v",
                "Frame": "Imitating"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "technology.n",
                "Frame": "Artifact"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "copy.v",
                "Frame": "Duplication"
            }
        ]
    },
    {
        "text": "It is usually assumed that once the versions are exposed to different sensory inputs, their experiences would begin to diverge, but all their memories up until the moment of the copying would remain the same.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "until.prep",
                "Frame": "Time_vector"
            },
            {
                "LU": "remain.v",
                "Frame": "Left_to_do"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "The problem is made even more serious by the possibility of creating a potentially infinite number of initially identical copies of the original person, which would of course all exist simultaneously as distinct beings.",
        "frame": [
            {
                "LU": "problem.n",
                "Frame": "Predicament"
            },
            {
                "LU": "serious.a",
                "Frame": "Importance"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "course.n",
                "Frame": "Roadways"
            },
            {
                "LU": "simultaneously.adv",
                "Frame": "Simultaneity"
            },
            {
                "LU": "distinct.a",
                "Frame": "Distinctiveness"
            }
        ]
    },
    {
        "text": "The most parsimonious view of this phenomenon is that the two (or more) minds would share memories of their past but from the point of duplication would simply be distinct minds (although this is complicated by merging).",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "although.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "Many complex variations are possible.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "Depending on computational capacity, the simulation may run at faster or slower simulation time as compared to the elapsed physical time, resulting in that the simulated mind would perceive that the physical world is running in slow motion or fast motion respectively, while biological persons will see the simulated mind in fast or slow motion respectively.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "capacity.n",
                "Frame": "Capability"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "compare.v",
                "Frame": "Evaluative_comparison"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "result.v",
                "Frame": "Causation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "slow.a",
                "Frame": "Taking_time"
            },
            {
                "LU": "motion.v",
                "Frame": "Gesture"
            },
            {
                "LU": "motion.v",
                "Frame": "Gesture"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "slow.v",
                "Frame": "Hindering"
            },
            {
                "LU": "motion.v",
                "Frame": "Gesture"
            }
        ]
    },
    {
        "text": "A brain simulation can be started, paused, backed-up and rerun from a saved backup state at any time.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "state.n",
                "Frame": "Statement"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "The simulated mind would in the latter case forget everything that has happened after the instant of backup, and perhaps not even be aware that it is repeating itself.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "An older version of a simulated mind may meet a younger version and share experiences with it.",
        "frame": [
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            }
        ]
    },
    {
        "text": "Bekenstein Bound The Bekenstein bound is an upper limit on information that can be contained within a given finite region of space which has a finite amount of energy or, conversely, the maximum amount of information required to perfectly describe a given physical system down to the quantum level.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "within.prep",
                "Frame": "Within_distance"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "maximum.a",
                "Frame": "Extreme_value"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "down.adv",
                "Frame": "Ingestion"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "An average human brain has a weight of 1.",
        "frame": []
    },
    {
        "text": "5 kg and a volume of 1260 cm3.",
        "frame": [
            {
                "LU": "volume.n",
                "Frame": "Text"
            }
        ]
    },
    {
        "text": "The energy (E = mc2) will be 1.",
        "frame": []
    },
    {
        "text": "348131017 J and if the brain is approximate to a sphere then the radius (V = 4r3/3) will be 6.",
        "frame": [
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "70030102 m.",
        "frame": []
    },
    {
        "text": "The Bekenstein bound (I  2rE cln 2 ) for an average human brain would be 2.",
        "frame": [
            {
                "LU": "bound.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "589911042 bit and represents an upper bound on the information needed to perfectly recreate the average human brain down to the quantum level.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "down.adv",
                "Frame": "Ingestion"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            }
        ]
    },
    {
        "text": "This implies that the number of different states (=2I) of the human brain (and of the mind if the physicalism is true) is at most 107.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "796401041.",
        "frame": []
    },
    {
        "text": "However, as described above, many mind uploading advocates expect that quantum-level models and molecule-scale simulation of the neurons will not be needed, so the Bekenstein bound only represents a maximum upper limit.",
        "frame": [
            {
                "LU": "above.prep",
                "Frame": "Directional_locative_relation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "bound.v",
                "Frame": "Likelihood"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "represent.v",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "maximum.a",
                "Frame": "Extreme_value"
            }
        ]
    },
    {
        "text": "The Hippocampus of a human adult brain has been estimated to store a limit of up to 2.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "5 petabyte of binary data equivalent.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Followers of the Ralian religion advocate mind uploading in the process of human cloning to achieve eternal life.",
        "frame": [
            {
                "LU": "advocate.v",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "achieve.v",
                "Frame": "Accomplishment"
            }
        ]
    },
    {
        "text": "Living inside of a computer is also seen by followers as an eminent possibility.",
        "frame": [
            {
                "LU": "inside.n",
                "Frame": "Part_inner_outer"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "possibility.n",
                "Frame": "Likelihood"
            }
        ]
    },
    {
        "text": "However, mind uploading is also advocated by a number of secular researchers in neuroscience and artificial intelligence, such as Marvin Minsky.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "In 1993, Joe Strout created a small web site called the Mind Uploading Home Page, and began advocating the idea in cryonics circles and elsewhere on the net.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "home.n",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "advocate.v",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "circle.n",
                "Frame": "Shapes"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "net.n",
                "Frame": "Earnings_and_losses"
            }
        ]
    },
    {
        "text": "That site has not been actively updated in recent years, but it has spawned other sites including MindUploading.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": "org, run by Randal A.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Koene, Ph.",
        "frame": []
    },
    {
        "text": ", who also moderates a mailing list on the topic.",
        "frame": [
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "These advocates see mind uploading as a medical procedure which could eventually save countless lives.",
        "frame": [
            {
                "LU": "see.v",
                "Frame": "Relational_political_locales"
            },
            {
                "LU": "procedure.n",
                "Frame": "Means"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "eventually.adv",
                "Frame": "Time_vector"
            }
        ]
    },
    {
        "text": "Many transhumanists look forward to the development and deployment of mind uploading technology, with transhumanists such as Nick Bostrom predicting that it will become possible within the 21st century due to technological trends such as Moore's Law.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "deployment.n",
                "Frame": "Arranging"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "century.n",
                "Frame": "Measure_duration"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "law.n",
                "Frame": "Law"
            }
        ]
    },
    {
        "text": "The book Beyond Humanity: CyberEvolution and Future Minds by Gregory S.",
        "frame": [
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "Paul & Earl D.",
        "frame": []
    },
    {
        "text": "Cox, is about the eventual (and, to the authors, almost inevitable) evolution of computers into sentient beings, but also deals with human mind transfer.",
        "frame": [
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "evolution.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "transfer.n",
                "Frame": "Change_tool"
            }
        ]
    },
    {
        "text": "Richard Doyle's Wetwares: Experiments in PostVital Living deals extensively with uploading from the perspective of distributed embodiment, arguing for example that humans are currently part of the \"artificial life phenotype.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "argue.v",
                "Frame": "Quarreling"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Doyle's vision reverses the polarity on uploading, with artificial life forms such as uploads actively seeking out biological embodiment as part of their reproductive strategy.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "seek.v",
                "Frame": "Seeking"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Raymond Kurzweil, a prominent advocate of transhumanism and the likelihood of a technological singularity, has suggested that the easiest path to human-level artificial intelligence may lie in \"reverse-engineering the human brain\", which he usually uses to refer to the creation of a new intelligence based on the general \"principles of operation\" of the brain, but he also sometimes uses the term to refer to the notion of uploading individual human minds based on highly detailed scans and simulations.",
        "frame": [
            {
                "LU": "advocate.v",
                "Frame": "Attempt_suasion"
            },
            {
                "LU": "likelihood.n",
                "Frame": "Likelihood"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "path.n",
                "Frame": "Roadways"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "lie.v",
                "Frame": "Posture"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "individual.n",
                "Frame": "People"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "This idea is discussed on pp.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "discuss.v",
                "Frame": "Speak_on_topic"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            }
        ]
    },
    {
        "text": "198203 of his book The Singularity is Near, for example.",
        "frame": [
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            }
        ]
    },
    {
        "text": "Bots Internet bots, also known as web robots, WWW robots or simply bots, are software applications that run automated tasks over the Internet.",
        "frame": [
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            }
        ]
    },
    {
        "text": "Typically, bots perform tasks that are both simple and structurally repetitive, at a much higher rate than would be possible for a human alone.",
        "frame": [
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "much.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "rate.n",
                "Frame": "Relational_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "The largest use of bots is in web spidering, in which an automated script fetches, analyzes and files information from web servers at many times the speed of a human.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "Each server can have a file called robots.",
        "frame": [
            {
                "LU": "file.v",
                "Frame": "Placing"
            }
        ]
    },
    {
        "text": "txt, containing rules for the spidering of that server that the bot is supposed to obey.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "rule.n",
                "Frame": "Leadership"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "obey.v",
                "Frame": "Compliance"
            }
        ]
    },
    {
        "text": "Chatter Bot A chatter robot, chatterbot, chatbot, or chat bot is a computer program designed to simulate an intelligent conversation with one or more human users via auditory or textual methods, primarily for engaging in small talk.",
        "frame": [
            {
                "LU": "chat.n",
                "Frame": "Chatting"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "engage.v",
                "Frame": "Hostile_encounter"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "talk.n",
                "Frame": "Discussion"
            }
        ]
    },
    {
        "text": "The primary aim of such simulation has been to fool the user into thinking that the program's output has been produced by a human (the Turing test).",
        "frame": [
            {
                "LU": "primary.a",
                "Frame": "First_rank"
            },
            {
                "LU": "aim.n",
                "Frame": "Aiming"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "think.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Programs playing this role are sometimes referred to as Artificial Conversational Entities, talk bots or chatterboxes.",
        "frame": [
            {
                "LU": "play.v",
                "Frame": "Competition"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "talk.n",
                "Frame": "Discussion"
            }
        ]
    },
    {
        "text": "In addition, however, chatterbots are often integrated into dialog systems for various practical purposes such as online help, personalised service, or information acquisition.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "service.n",
                "Frame": "Public_services"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Some chatterbots use sophisticated natural language processing systems, but many simply scan for keywords within the input and pull a reply with the most matching keywords, or the most similar wording pattern, from a textual database.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "pull.v",
                "Frame": "Experience_bodily_harm"
            },
            {
                "LU": "reply.n",
                "Frame": "Communication_response"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "similar.a",
                "Frame": "Similarity"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            }
        ]
    },
    {
        "text": "The term \"ChatterBot\" was originally coined by Michael Mauldin (Creator of the first Verbot, Julia) in 1994 to describe these conversational programs.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            }
        ]
    },
    {
        "text": "In 1950, Alan Turing published his famous article \"Computing Machinery and Intelligence\", which proposed what is now called the Turing test as a criterion of intelligence.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "This criterion depends on the ability of a computer program to impersonate a human in a real-time written conversation with a human judge, sufficiently well that the judge is unable to distinguish reliablyon the basis of the conversational content alonebetween the program and a real human.",
        "frame": [
            {
                "LU": "depend.v",
                "Frame": "Contingency"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "judge.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "judge.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "unable.a",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "ELIZA The notoriety of Turing's proposed test stimulated great interest in Joseph Weizenbaum's program ELIZA, published in 1966, which seemed to be able to fool users into believing that they were conversing with a real human.",
        "frame": [
            {
                "LU": "notoriety.n",
                "Frame": "Fame"
            },
            {
                "LU": "great.a",
                "Frame": "Desirability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "believe.v",
                "Frame": "Awareness"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            }
        ]
    },
    {
        "text": "However Weizenbaum himself did not claim that ELIZA was genuinely intelligent, and the Introduction to his paper presented it more as a debunking exercise: [In] artificial intelligence.",
        "frame": [
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "machines are made to behave in wondrous ways, often sufficient to dazzle even the most experienced observer.",
        "frame": [
            {
                "LU": "machine.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "But once a particular program is unmasked, once its inner workings are explained.",
        "frame": [
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            },
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "once.adv",
                "Frame": "Event_instance"
            }
        ]
    },
    {
        "text": "its magic crumbles away; it stands revealed as a mere collection of procedures.",
        "frame": [
            {
                "LU": "magic.a",
                "Frame": "Ineffability"
            },
            {
                "LU": "collection.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "The observer says to himself \"I could have written that\".",
        "frame": [
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "With that thought he moves the program in question from the shelf marked \"intelligent\", to that reserved for curios.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "mark.v",
                "Frame": "Sign"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Causation"
            }
        ]
    },
    {
        "text": "The object of this paper is to cause just such a re-evaluation of the program about to be \"explained\".",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "about.prep",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Few programs ever needed it more.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            }
        ]
    },
    {
        "text": "ELIZA's key method of operation (copied by chatbot designers ever since) involves the recognition of cue words or phrases in the input, and the output of corresponding pre-prepared or pre-programmed responses that can move the conversation forward in an apparently meaningful way (e.",
        "frame": [
            {
                "LU": "key.a",
                "Frame": "Key"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            },
            {
                "LU": "operation.n",
                "Frame": "Businesses"
            },
            {
                "LU": "copy.v",
                "Frame": "Imitating"
            },
            {
                "LU": "designer.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            },
            {
                "LU": "forward.adv",
                "Frame": "Sending"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "by responding to any input that contains the word 'MOTHER' with 'TELL ME MORE ABOUT YOUR FAMILY').",
        "frame": [
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Thus an illusion of understanding is generated, even though the processing involved has been merely superficial.",
        "frame": [
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            }
        ]
    },
    {
        "text": "ELIZA showed that such an illusion is surprisingly easy to generate, because human judges are so ready to give the benefit of the doubt when conversational responses are capable of being interpreted as \"intelligent\".",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "easy.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "judge.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "ready.a",
                "Frame": "Activity_ready_state"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "doubt.n",
                "Frame": "Certainty"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": "Thus the key technique herewhich characterises a program as a chatbot rather than as a serious natural language processing systemis the production of responses that are sufficiently vague and non-specific that they can be understood as \"intelligent\" in a wide range of conversational contexts.",
        "frame": [
            {
                "LU": "key.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            },
            {
                "LU": "serious.a",
                "Frame": "Importance"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            }
        ]
    },
    {
        "text": "The emphasis is typically on vagueness and unclarity, rather than any conveying of genuine information.",
        "frame": [
            {
                "LU": "emphasis.n",
                "Frame": "Emphasizing"
            },
            {
                "LU": "typically.adv",
                "Frame": "Typicality"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Interface designers have come to appreciate that humans' readiness to interpret computer output as genuinely conversationaleven when it is actually based on rather simple pattern-matchingcan be exploited for useful purposes.",
        "frame": [
            {
                "LU": "designer.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "come.v",
                "Frame": "Arriving"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "appreciate.v",
                "Frame": "Judgment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            }
        ]
    },
    {
        "text": "Most people prefer to engage with programs that are human-like, and this gives chatbot-style techniques a potentially useful role in interactive systems that need to elicit information from users, as long as that information is relatively straightforward and falls into predictable categories.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "fall.v",
                "Frame": "Motion_directional"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "predictable.a",
                "Frame": "Expectation"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "Thus, for example, online help systems can usefully employ chatbot techniques to identify the area of help that users require, potentially providing a \"friendlier\" interface than a more formal search or menu system.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "identify.v",
                "Frame": "Verification"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "provide.v",
                "Frame": "Supply"
            },
            {
                "LU": "search.n",
                "Frame": "Seeking"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "This sort of usage holds the prospect of moving chatbot technology from Weizenbaum's \"shelf.",
        "frame": [
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "reserved for curios\" to that marked \"genuinely useful computational methods\".",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "method.n",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "ActiveBuddy was a company that created conversation-based interactive agents originally distributed via instant messaging platforms.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            }
        ]
    },
    {
        "text": "Founded in 2000, the company was the brainchild of Robert Hoffer and Timothy Kay.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The idea for interactive agents came from Hoffers vision to add functionality to increasingly popular instant messaging services.",
        "frame": [
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "increasingly.adv",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            }
        ]
    },
    {
        "text": "The original implementation took shape as a word-based adventure game but quickly grew to include a wide range of database applications including access to news, weather, stock information, movie times, yellow pages listings, and detailed sports data, as well as a variety of tools (calculators, translator, etc.",
        "frame": [
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "shape.n",
                "Frame": "Shapes"
            },
            {
                "LU": "quickly.adv",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "range.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "weather.n",
                "Frame": "Surviving"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "yellow.a",
                "Frame": "Color"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "variety.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "These various applications were bundled into a single entity and launched as SmarterChild in 2001.",
        "frame": [
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "entity.n",
                "Frame": "Entity"
            },
            {
                "LU": "launch.v",
                "Frame": "Shoot_projectiles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "SmarterChild acted as a showcase for the quick data access and possibilities for fun conversation that the company planned to turn into customized, niche specific products.",
        "frame": [
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "company.n",
                "Frame": "Businesses"
            },
            {
                "LU": "plan.v",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "turn.v",
                "Frame": "Cause_to_move_in_place"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "product.n",
                "Frame": "Manufacturing"
            }
        ]
    },
    {
        "text": "The rapid success of SmarterChild, over 13 million users, led to targeted promotional products for Radiohead, Austin Powers, The Sporting News, and others.",
        "frame": [
            {
                "LU": "success.n",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "lead.v",
                "Frame": "First_rank"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "product.n",
                "Frame": "Manufacturing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "ActiveBuddy sought to strengthen its hold on the interactive agent market for the future by filing for, and receiving, a patent on their creation in 2002.",
        "frame": [
            {
                "LU": "seek.v",
                "Frame": "Seeking"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "strengthen.v",
                "Frame": "Cause_change_of_strength"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "future.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The company also released the BuddyScript SDK, a free developer kit that allow programmers to design and launch their own interactive agents using ActiveBuddys proprietary scripting language, in 2002.",
        "frame": [
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "launch.v",
                "Frame": "Shoot_projectiles"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The company subsequently changed its name from ActiveBuddy to Conversagent in 2003, and then again to Colloquis in 2006.",
        "frame": [
            {
                "LU": "change.v",
                "Frame": "Replacing"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Colloquis was later purchased by Microsoft in October of 2006.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Development The classic historic early chatterbots are ELIZA (1966) and PARRY (1972).",
        "frame": [
            {
                "LU": "historic.a",
                "Frame": "Historic_event"
            },
            {
                "LU": "early.a",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "More recent notable programs include A.",
        "frame": [
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            }
        ]
    },
    {
        "text": ", Jabberwacky and D.",
        "frame": []
    },
    {
        "text": "E (Agence Nationale de la Recherche and CNRS 2006).",
        "frame": []
    },
    {
        "text": "While ELIZA and PARRY were used exclusively to simulate typed conversation, many chatterbots now include functional features such as games and web searching abilities.",
        "frame": [
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "search.v",
                "Frame": "Seeking"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": "In 1984, a book called The Policeman's Beard is Half Constructed was published, allegedly written by the chatbot Racter (though the program as released would not have been capable of doing so).",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "publish.v",
                "Frame": "Publishing"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "though.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "capable.a",
                "Frame": "Capability"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "One pertinent field of AI research is natural language processing.",
        "frame": [
            {
                "LU": "one.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "field.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "research.n",
                "Frame": "Research"
            }
        ]
    },
    {
        "text": "Usually, weak AI fields employ specialized software or programming languages created specifically for the narrow function required.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "weak.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "narrow.a",
                "Frame": "Cause_expansion"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "require.v",
                "Frame": "Imposing_obligation"
            }
        ]
    },
    {
        "text": "For example, A.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "utilises a programming language called AIML, which is specific to its function as a conversational agent, and has since been adopted by various other developers of, so called, Alicebots.",
        "frame": [
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "since.prep",
                "Frame": "Causation"
            },
            {
                "LU": "adopt.v",
                "Frame": "Adopt_selection"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Nevertheless, A.",
        "frame": []
    },
    {
        "text": "is still purely based on pattern matching techniques without any reasoning capabilities, the same technique ELIZA was using back in 1966.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "technique.n",
                "Frame": "Means"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "This is not strong AI, which would require sapience and logical reasoning abilities.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "strong.a",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "reasoning.n",
                "Frame": "Reasoning"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            }
        ]
    },
    {
        "text": "Jabberwacky learns new responses and context based on real-time user interactions, rather than being driven from a static database.",
        "frame": [
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "drive.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            }
        ]
    },
    {
        "text": "Some more recent chatterbots also combine real-time learning with evolutionary algorithms that optimise their ability to communicate based on each conversation held, with one notable example being Kyle, winner of the 2009 Leodis AI Award.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            },
            {
                "LU": "hold.v",
                "Frame": "Defending"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Still, there is currently no general purpose conversational artificial intelligence, and some software developers focus on the practical aspect, information retrieval.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "general.n",
                "Frame": "Leadership"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            },
            {
                "LU": "aspect.n",
                "Frame": "Distinctiveness"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "Chatterbot competitions focus on the Turing test or more specific goals.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            }
        ]
    },
    {
        "text": "Two such annual contests are the Loebner Prize and The Chatterbox Challenge.",
        "frame": [
            {
                "LU": "two.num",
                "Frame": "Cardinal_numbers"
            },
            {
                "LU": "annual.a",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "IRC Bot An IRC bot is a set of scripts or an independent program that connects to Internet Relay Chat as a client, and so appears to other IRC users as another user.",
        "frame": [
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "independent.a",
                "Frame": "Contingency"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "An IRC bot differs from a regular client in that instead of providing interactive access to IRC for a human user, it performs automated functions.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            }
        ]
    },
    {
        "text": "The historically oldest IRC bots were Bill Wisner's Bartender and Greg Lindahl's GM (Game Manager for the Hunt the Wumpus game).",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "Over time, bots evolved to provide special services, such as managing channels on behalf of groups of users, maintaining access lists, and providing access to databases.",
        "frame": [
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "evolve.v",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "manage.v",
                "Frame": "Success_or_failure"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Often, an IRC bot is deployed as a detached program running from a stable host.",
        "frame": [
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "deploy.v",
                "Frame": "Arranging"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "host.n",
                "Frame": "Guest_and_host"
            }
        ]
    },
    {
        "text": "It sits on an IRC channel to keep it open and prevents malicious users from taking over the channel.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "open.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "take.v",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "It can be configured to give channel operator status to privileged users when they join the channel, and can provide a unified channel operator list.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "list.n",
                "Frame": "Text_creation"
            }
        ]
    },
    {
        "text": "Many of these features require that the bot be a channel operator.",
        "frame": [
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "Thus, most IRC bots are run from computers which have long uptimes (generally running a BSD derivative or Linux) and a fast, stable Internet connection.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "generally.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            }
        ]
    },
    {
        "text": "As IRC has become popular with many dial-up users as well, special services have appeared that offer limited user-level access to a stable Linux server with a decent connection.",
        "frame": [
            {
                "LU": "as.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "decent.a",
                "Frame": "Desirability"
            },
            {
                "LU": "connection.n",
                "Frame": "Social_connection"
            }
        ]
    },
    {
        "text": "The user may run an IRC bot from this shell account.",
        "frame": [
            {
                "LU": "run.v",
                "Frame": "Impact"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "shell.n",
                "Frame": "Ammunition"
            },
            {
                "LU": "account.n",
                "Frame": "Justifying"
            }
        ]
    },
    {
        "text": "These services are commonly known as shell providers.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "shell.n",
                "Frame": "Ammunition"
            }
        ]
    },
    {
        "text": "A bot can also perform many other useful functions, such as logging what happens in an IRC channel, giving out information on demand (very popular in IRC channels dealing with user support), creating statistics, hosting trivia games, and so on.",
        "frame": [
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "useful.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "log.n",
                "Frame": "Records"
            },
            {
                "LU": "happen.v",
                "Frame": "Event"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "demand.n",
                "Frame": "Request"
            },
            {
                "LU": "popular.a",
                "Frame": "Desirability"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "deal.v",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "host.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "These functions are usually provided by user-writable scripts, often written in a scripting programming language such as Tcl or Perl, added to the bot in question.",
        "frame": [
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "provide.v",
                "Frame": "Supply"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "add.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Channels dedicated to file sharing often use XDCC bots to distribute their files.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "file.v",
                "Frame": "Placing"
            },
            {
                "LU": "share.v",
                "Frame": "Capital_stock"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "distribute.v",
                "Frame": "Dispersal"
            }
        ]
    },
    {
        "text": "IRC bots are particularly well-used on IRC networks without channel registration services like ChanServ, such as EFnet and IRCnet, and on networks that may prevent channels from being registered due to certain registration requirements (minimum user count, etc.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "like.prep",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "register.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "certain.a",
                "Frame": "Certainty"
            },
            {
                "LU": "count.v",
                "Frame": "Importance"
            }
        ]
    },
    {
        "text": "), such as Undernet or QuakeNet.",
        "frame": []
    },
    {
        "text": "Where bots are used for administrative functions such as this, they may need more access than a normal client connection allows.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "need.v",
                "Frame": "Needing"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            }
        ]
    },
    {
        "text": "Some versions of IRC have a \"Service\" protocol that allows clients with these extra powers.",
        "frame": [
            {
                "LU": "service.n",
                "Frame": "Public_services"
            },
            {
                "LU": "protocol.n",
                "Frame": "Law"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "power.n",
                "Frame": "Objective_influence"
            }
        ]
    },
    {
        "text": "Such server-sanctioned bots are called IRC services.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Bots are not always welcome.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "always.adv",
                "Frame": "Frequency"
            }
        ]
    },
    {
        "text": "Some IRC networks forbid the usage of bots.",
        "frame": [
            {
                "LU": "network.n",
                "Frame": "Network"
            }
        ]
    },
    {
        "text": "One of the reasons for doing so is that each nickname connected to the network increases the size of the network database which is being kept in sync across all servers.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "nickname.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "increase.v",
                "Frame": "Change_position_on_a_scale"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Allowing for bots in large networks can cause a relevant amount of network traffic overhead which needs to be financed and may even lead to netsplits.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "amount.n",
                "Frame": "Quantity"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "This however is a shortcoming of the IRC technology, not the bots.",
        "frame": [
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "People that create an IRC bot use either the scripting language built into a client, or appropriate frameworks of a suitable programming language to connect to an IRC server(s), or they use an existing bot implementation, and adapt it to their needs.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "suitable.a",
                "Frame": "Suitability"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            }
        ]
    },
    {
        "text": "In computing, an avatar is the graphical representation of the user or the user's alter ego or character.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "alter.v",
                "Frame": "Cause_change"
            }
        ]
    },
    {
        "text": "It may take either a three-dimensional form, as in games or virtual worlds, or a two-dimensional form as an icon in Internet forums and other online communities.",
        "frame": [
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Type"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            }
        ]
    },
    {
        "text": "It can also refer to a text construct found on early systems such as MUDs.",
        "frame": [
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "construct.v",
                "Frame": "Building"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "It is an object representing the user.",
        "frame": [
            {
                "LU": "object.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "The term \"avatar\" can also refer to the personality connected with the screen name, or handle, of an Internet user.",
        "frame": [
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "refer.v",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "connect.v",
                "Frame": "Make_cognitive_connection"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "screen.v",
                "Frame": "Eclipse"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            }
        ]
    },
    {
        "text": "Avatar The use of the term avatar for the on-screen representation of the user was coined in 1985 by Chip Morningstar and Joseph Romero in designing LucasFilm's online role-playing game Habitat.",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "design.v",
                "Frame": "Coming_up_with"
            }
        ]
    },
    {
        "text": "The computer game Ultima IV: Quest of the Avatar was released in 1985, but does not use the word in this sense, only in its original religious sense; the player's in-game final objective is to become an \"Avatar\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Opinion"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            },
            {
                "LU": "objective.n",
                "Frame": "Purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Later games in the Ultima series use the term in the same sense as Habitat and introduce Habitat-style customization of avatars.",
        "frame": [
            {
                "LU": "later.adv",
                "Frame": "Relative_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            }
        ]
    },
    {
        "text": "Another early use of the term was in the pen and paper role-playing game Shadowrun (1989).",
        "frame": [
            {
                "LU": "early.a",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "paper.n",
                "Frame": "Businesses"
            }
        ]
    },
    {
        "text": "Norman Spinrad In Norman Spinrad's novel Songs from the Stars (1980), the term avatar is used in a description of a computer generated virtual experience.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            }
        ]
    },
    {
        "text": "In the story, humans receive messages from an alien galactic network that wishes to share knowledge and experience with other advanced civilizations through \"songs\".",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "network.n",
                "Frame": "Network"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "share.n",
                "Frame": "Communication"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "advanced.a",
                "Frame": "Stage_of_progress"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "song.n",
                "Frame": "Text"
            }
        ]
    },
    {
        "text": "The humans build a \"galactic receiver\" that describes itself: The galactic receiver is programmed to derive species specific full sensory input data from standard galactic meaning code equations.",
        "frame": [
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "describe.v",
                "Frame": "Statement"
            },
            {
                "LU": "program.n",
                "Frame": "Project"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "standard.a",
                "Frame": "Exemplariness"
            }
        ]
    },
    {
        "text": "By controlling your sensorium input along species specific parameters galactic songs astral back-project you into approximation of total involvement in artistically recreated broadcast realities.",
        "frame": [
            {
                "LU": "control.v",
                "Frame": "Control"
            },
            {
                "LU": "specific.a",
                "Frame": "Specific_individual"
            },
            {
                "LU": "parameter.n",
                "Frame": "Terms_of_agreement"
            },
            {
                "LU": "song.n",
                "Frame": "Text"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "total.a",
                "Frame": "Completeness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "From the last page of the chapter titled \"The Galactic Way\" in a description of an experience that is being relayed via the galactic receiver to the main characters: You stand in a throng of multifleshed being, mind avatared in all its matter, on a broad avenue winding through a city of blue trees with bright red foliage and living buildings growing from the soil in a multitude of forms.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "page.v",
                "Frame": "Contacting"
            },
            {
                "LU": "chapter.n",
                "Frame": "Part_ordered_segments"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "description.n",
                "Frame": "Communicate_categorization"
            },
            {
                "LU": "experience.n",
                "Frame": "Expertise"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "main.a",
                "Frame": "First_rank"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "broad.a",
                "Frame": "Dimension"
            },
            {
                "LU": "avenue.n",
                "Frame": "Roadways"
            },
            {
                "LU": "wind.v",
                "Frame": "Path_shape"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            },
            {
                "LU": "tree.n",
                "Frame": "Plants"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "bright.a",
                "Frame": "Level_of_light"
            },
            {
                "LU": "red.a",
                "Frame": "Color"
            },
            {
                "LU": "living.n",
                "Frame": "Dead_or_alive"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            }
        ]
    },
    {
        "text": "William Gibson Although William Gibson's notion of cyberspace as a consensual virtual reality hallucination representing data as a 3D matrix is not remotely how users access or perceive the Internet, his cyberpunk novel Count Zero (1986) described in detail a character's representation socializing in an online world: A square of cyberspace directly in front of him flipped sickeningly and he found himself in a pale blue graphic that seemed to represent a very spacious apartment, low shapes of furniture sketched in hair-fine lines of blue neon.",
        "frame": [
            {
                "LU": "data.n",
                "Frame": "Information"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "access.n",
                "Frame": "Having_or_lacking_access"
            },
            {
                "LU": "perceive.v",
                "Frame": "Becoming_aware"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "front.n",
                "Frame": "Front_for"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "apartment.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "low.a",
                "Frame": "Morality_evaluation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "line.n",
                "Frame": "Shapes"
            },
            {
                "LU": "blue.a",
                "Frame": "Emotion_directed"
            }
        ]
    },
    {
        "text": "A woman stood in front of him, a sort of glowing cartoon squiggle of a woman, the face a brown smudge.",
        "frame": [
            {
                "LU": "woman.n",
                "Frame": "People"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "front.n",
                "Frame": "Front_for"
            },
            {
                "LU": "woman.n",
                "Frame": "People"
            },
            {
                "LU": "face.n",
                "Frame": "Facial_expression"
            }
        ]
    },
    {
        "text": "\"I'm Slide,\" the figure said, hands on its hips.",
        "frame": [
            {
                "LU": "figure.v",
                "Frame": "Opinion"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "[She] gestured, a window suddenly snapping into existence behind her.",
        "frame": [
            {
                "LU": "window.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "snap.v",
                "Frame": "Breaking_off"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "behind.prep",
                "Frame": "Relative_time"
            }
        ]
    },
    {
        "text": "I mean, if you could sort of explain.",
        "frame": [
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "explain.v",
                "Frame": "Statement"
            }
        ]
    },
    {
        "text": "He still couldn't move.",
        "frame": [
            {
                "LU": "still.adv",
                "Frame": "Continued_state_of_affairs"
            },
            {
                "LU": "could.v",
                "Frame": "Possibility"
            },
            {
                "LU": "move.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            }
        ]
    },
    {
        "text": "The \"window\" showed a blue-gray video view of palm trees and old buildings.",
        "frame": [
            {
                "LU": "window.n",
                "Frame": "Connecting_architecture"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "tree.n",
                "Frame": "Plants"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            },
            {
                "LU": "building.n",
                "Frame": "Buildings"
            }
        ]
    },
    {
        "text": "Hey, man, I paid a designer an arm and a leg to punch this up for me.",
        "frame": [
            {
                "LU": "man.n",
                "Frame": "People"
            },
            {
                "LU": "pay.v",
                "Frame": "Commerce_pay"
            },
            {
                "LU": "designer.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "This is my space, my construct.",
        "frame": [
            {
                "LU": "construct.v",
                "Frame": "Building"
            }
        ]
    },
    {
        "text": "This is L.",
        "frame": []
    },
    {
        "text": ", boy.",
        "frame": [
            {
                "LU": "boy.n",
                "Frame": "People_by_age"
            }
        ]
    },
    {
        "text": "People here don't do anything without jacking.",
        "frame": [
            {
                "LU": "people.n",
                "Frame": "Kinship"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This is where I entertain.",
        "frame": [
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Neal Stephenson The use of Avatar to mean online virtual bodies was popularised by Neal Stephenson in his cyberpunk novel Snow Crash (1992).",
        "frame": [
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "mean.v",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "snow.n",
                "Frame": "Precipitation"
            }
        ]
    },
    {
        "text": "In Snow Crash, the term Avatar was used to describe the virtual simulation of the human form in the Metaverse, a fictional virtual-reality application on the Internet.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "snow.n",
                "Frame": "Precipitation"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "application.n",
                "Frame": "Purpose"
            },
            {
                "LU": "on.prep",
                "Frame": "Means"
            }
        ]
    },
    {
        "text": "Social status within the Metaverse was often based on the quality of a user's avatar, as a highly detailed avatar showed that the user was a skilled hacker and programmer while the less talented would buy off-the-shelf models in the same manner a beginner would today.",
        "frame": [
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "while.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "manner.n",
                "Frame": "Conduct"
            },
            {
                "LU": "today.n",
                "Frame": "Temporal_collocation"
            }
        ]
    },
    {
        "text": "Stephenson wrote in the \"Acknowledgments\" to Snow Crash: The idea of a \"virtual reality\" such as the Metaverse is by now widespread in the computer-graphics community and is being used in a number of different ways.",
        "frame": [
            {
                "LU": "write.v",
                "Frame": "Statement"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "snow.n",
                "Frame": "Precipitation"
            },
            {
                "LU": "idea.n",
                "Frame": "Awareness"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "different.a",
                "Frame": "Identicality"
            }
        ]
    },
    {
        "text": "The particular vision of the Metaverse as expressed in this novel originated from idle discussion between me and Jaime (Captain Bandwidth) Taffe.",
        "frame": [
            {
                "LU": "particular.a",
                "Frame": "Degree"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "novel.n",
                "Frame": "Text"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "discussion.n",
                "Frame": "Discussion"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "The words avatar (in the sense used here) and Metaverse are my inventions, which I came up with when I decided that existing words (such as virtual reality) were simply too awkward to use.",
        "frame": [
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "sense.n",
                "Frame": "Sensation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "decide.v",
                "Frame": "Deciding"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "after the first publication of Snow Crash, I learned that the term avatar has actually been in use for a number of years as part of a virtual reality system called Habitat.",
        "frame": [
            {
                "LU": "after.prep",
                "Frame": "Relative_time"
            },
            {
                "LU": "publication.n",
                "Frame": "Publishing"
            },
            {
                "LU": "snow.n",
                "Frame": "Precipitation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "term.n",
                "Frame": "Simple_naming"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "in addition to avatars, Habitat includes many of the basic features of the Metaverse as described in this book.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "basic.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "book.n",
                "Frame": "Part_ordered_segments"
            }
        ]
    },
    {
        "text": "Artificial Intelligence Avatars can be used as virtual embodiments of embodied agents, which are driven more or less by artificial intelligence rather than real people.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "drive.v",
                "Frame": "Subjective_influence"
            },
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "rather.adv",
                "Frame": "Hedging"
            },
            {
                "LU": "people.n",
                "Frame": "Kinship"
            }
        ]
    },
    {
        "text": "Automated online assistants are examples of avatars used in this way.",
        "frame": [
            {
                "LU": "assistant.n",
                "Frame": "Subordinates_and_superiors"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "way.n",
                "Frame": "Planned_trajectory"
            }
        ]
    },
    {
        "text": "Such avatars are used by organizations as a part of automated customer services in order to interact with consumers and users of services.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "order.n",
                "Frame": "Sentencing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "This can avail for enterprises to reduce their operating and training cost.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "reduce.v",
                "Frame": "Cause_change_of_position_on_a_scale"
            },
            {
                "LU": "training.n",
                "Frame": "Education_teaching"
            },
            {
                "LU": "cost.n",
                "Frame": "Expensiveness"
            }
        ]
    },
    {
        "text": "A major underlying technology to such systems is natural language processing.",
        "frame": [
            {
                "LU": "major.a",
                "Frame": "Importance"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            }
        ]
    },
    {
        "text": "Some of these avatars are commonly known as \"bots\".",
        "frame": [
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Famous examples include Ikea's Anna, an avatar designed to guide users around the Ikea website.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "Such avatars can also be powered by a Digital conversation which provides a little more structure than those using NLP, offering the user options and clearly defined paths to an outcome.",
        "frame": [
            {
                "LU": "by.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "conversation.n",
                "Frame": "Chatting"
            },
            {
                "LU": "little.art",
                "Frame": "Size"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "option.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "clearly.adv",
                "Frame": "Obviousness"
            },
            {
                "LU": "path.n",
                "Frame": "Roadways"
            }
        ]
    },
    {
        "text": "This kind of avatar is known as a Structured Language Processing or SLP Avatar.",
        "frame": [
            {
                "LU": "kind.n",
                "Frame": "Type"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Both types of avatar provide a cost effective and efficient way of engaging with consumers.",
        "frame": [
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "effective.a",
                "Frame": "Usefulness"
            },
            {
                "LU": "way.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "engage.v",
                "Frame": "Hostile_encounter"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Video Games Avatars in video games are essentially the player's physical representation in the game world.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In most games, the player's representation is fixed, however increasingly games offer a basic character model, or template, and then allow customization of the physical features as the player sees fit.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "basic.a",
                "Frame": "Being_necessary"
            },
            {
                "LU": "model.n",
                "Frame": "Exemplar"
            },
            {
                "LU": "then.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "fit.a",
                "Frame": "Capacity"
            }
        ]
    },
    {
        "text": "For example, Carl Johnson, the avatar from Grand Theft Auto: San Andreas, can be dressed in a wide range of clothing, can be given tattoos and haircuts, and can even body build or become obese depending upon player actions.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "wide.a",
                "Frame": "Dimension"
            },
            {
                "LU": "range.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "clothing.n",
                "Frame": "Clothing"
            },
            {
                "LU": "give.v",
                "Frame": "Giving"
            },
            {
                "LU": "build.v",
                "Frame": "Building"
            },
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Aside from an avatar's physical appearance, its dialogue, particularly in cut scenes, may also reveal something of its character.",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "cut.n",
                "Frame": "Intentional_traversing"
            },
            {
                "LU": "scene.n",
                "Frame": "Locale_by_event"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            }
        ]
    },
    {
        "text": "A good example is the crude, action hero stereotype, Duke Nukem.",
        "frame": [
            {
                "LU": "action.n",
                "Frame": "Intentionally_act"
            }
        ]
    },
    {
        "text": "Other avatars, such as Gordon Freeman from Half-Life, who never speaks at all, reveal very little of themselves (the original game never showed the player what he looked like without the use of a console command for third-person view).",
        "frame": [
            {
                "LU": "from.prep",
                "Frame": "Origin"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "little.a",
                "Frame": "Size"
            },
            {
                "LU": "never.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            }
        ]
    },
    {
        "text": "Massively multiplayer online games (MMOGs) are the source of the most varied and sophisticated avatars.",
        "frame": [
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "sophisticated.a",
                "Frame": "Stage_of_progress"
            }
        ]
    },
    {
        "text": "Customization levels differ between games; For example in EVE Online, players construct a wholly customized portrait, using a software that allows for several changes to facial structure as well as preset hairstyles, skin tones, etc.",
        "frame": [
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "change.n",
                "Frame": "Replacing"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "structure.n",
                "Frame": "Buildings"
            },
            {
                "LU": "well.adv",
                "Frame": "Desirability"
            },
            {
                "LU": "skin.n",
                "Frame": "Emptying"
            }
        ]
    },
    {
        "text": "However, these portraits appear only in in-game chats and static information view of other players.",
        "frame": [
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "chat.n",
                "Frame": "Chatting"
            },
            {
                "LU": "information.n",
                "Frame": "Information"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            }
        ]
    },
    {
        "text": "Usually, all players appear in gigantic spacecraft that give no view of their pilot, unlike in most other RPGs.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "view.n",
                "Frame": "Opinion"
            },
            {
                "LU": "pilot.n",
                "Frame": "People_by_vocation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            }
        ]
    },
    {
        "text": "Felicia Day, creator and star of The Guild web series, created a song called \"(Do You Wanna Date My) Avatar\" which satirizes avatars and virtual dating.",
        "frame": [
            {
                "LU": "day.n",
                "Frame": "Location_in_time"
            },
            {
                "LU": "series.n",
                "Frame": "Sequence"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "song.n",
                "Frame": "Text"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "Game consoles such as the Wii, Playstation 3, and Xbox 360 (shown here) feature universal animated avatars.",
        "frame": [
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Alternatively, City of Heroes offers one of the most detailed and comprehensive in-game avatar creation processes, allowing players to construct anything from traditional superheroes to aliens, medieval knights, monsters, robots, and many more.",
        "frame": [
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "process.v",
                "Frame": "Process"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "construct.v",
                "Frame": "Building"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "traditional.a",
                "Frame": "Custom"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            }
        ]
    },
    {
        "text": "Nintendo's Wii console allows for the creation of avatars called \"Miis\" that take the form of stylized, cartoonish people and can be used in some games as avatars for players, as in Wii Sports.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "creation.n",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "form.n",
                "Frame": "Coming_to_be"
            },
            {
                "LU": "people.n",
                "Frame": "People"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "player.n",
                "Frame": "Competition"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "In some games, the ability to use a Mii as an avatar must be unlocked, such as in Mario Kart Wii.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "ability.n",
                "Frame": "Capability"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "On November 19, 2008, Microsoft released an Xbox 360 Dashboard update which featured the introduction of Avatars as part of the console's New Xbox Experience.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "November.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "part.n",
                "Frame": "Taking_sides"
            },
            {
                "LU": "new.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "With the update installed users can personalize the look of their Avatars by choosing from a range of clothing and facial features.",
        "frame": [
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "look.n",
                "Frame": "Scrutiny"
            },
            {
                "LU": "choose.v",
                "Frame": "Choosing"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "range.n",
                "Frame": "Natural_features"
            },
            {
                "LU": "clothing.n",
                "Frame": "Clothing"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "On August 11, 2009, the NXE Avatar program was updated with the inclusion of an Avatar Marketplace feature that allows users to purchase additional product and game branded clothing, jewelry, full body suits, and animated props.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "August.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "additional.a",
                "Frame": "Increment"
            },
            {
                "LU": "brand.v",
                "Frame": "Type"
            },
            {
                "LU": "clothing.n",
                "Frame": "Clothing"
            },
            {
                "LU": "full.a",
                "Frame": "Biological_urge"
            },
            {
                "LU": "suit.n",
                "Frame": "Clothing"
            }
        ]
    },
    {
        "text": "On initial release of the update, game branded content included items from Gears of War 2, BioShock 2, Star Wars, Fable II, Halo 3, and The Secret of Monkey Island special edition.",
        "frame": [
            {
                "LU": "on.prep",
                "Frame": "Accuracy"
            },
            {
                "LU": "initial.a",
                "Frame": "Version_sequence"
            },
            {
                "LU": "release.n",
                "Frame": "Publishing"
            },
            {
                "LU": "brand.v",
                "Frame": "Type"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "secret.a",
                "Frame": "Secrecy_status"
            }
        ]
    },
    {
        "text": "The Xbox LIVE Avatar Marketplace is updated weekly with new items.",
        "frame": [
            {
                "LU": "weekly.a",
                "Frame": "Frequency"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "new.a",
                "Frame": "Age"
            },
            {
                "LU": "item.n",
                "Frame": "Entity"
            }
        ]
    },
    {
        "text": "PlayStation Home for Sony's PlayStation 3 console also features the use of avatars, but with a more realistic style than Nintendo's Miis or Microsoft's Avatars.",
        "frame": [
            {
                "LU": "home.n",
                "Frame": "Foreign_or_domestic_country"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "feature.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "use.n",
                "Frame": "Alternatives"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "style.n",
                "Frame": "Trendiness"
            }
        ]
    },
    {
        "text": "Avatars in non-gaming online worlds are used as two- or three-dimensional human or fantastic representations of a person's inworld self.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "human.n",
                "Frame": "People"
            },
            {
                "LU": "fantastic.a",
                "Frame": "Desirability"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "self.n",
                "Frame": "Proper_reference"
            }
        ]
    },
    {
        "text": "Such representations are a tool which facilitates the exploration of the virtual universe, or acts as a focal point in conversations with other users, and can be customized by the user.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "tool.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "act.v",
                "Frame": "Law"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "Usually, the purpose and appeal of such universes is to provide a large enhancement to common online conversation capabilities, and to allow the user to peacefully develop a portion of a non-gaming universe without being forced to strive towards a pre-defined goal.",
        "frame": [
            {
                "LU": "usually.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "common.a",
                "Frame": "Typicality"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "allow.v",
                "Frame": "Statement"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "portion.n",
                "Frame": "Part_whole"
            },
            {
                "LU": "without.prep",
                "Frame": "Negation"
            },
            {
                "LU": "force.v",
                "Frame": "Level_of_force_exertion"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "goal.n",
                "Frame": "Purpose"
            }
        ]
    },
    {
        "text": "AIML AIML, or Artificial Intelligence Markup Language, is an XML dialect for creating natural language software agents.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "agent.n",
                "Frame": "People_by_vocation"
            }
        ]
    },
    {
        "text": "The XML dialect called AIML was developed by Richard Wallace and a worldwide free software community between the years of 1995 and 2002.",
        "frame": [
            {
                "LU": "develop.v",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "It formed the basis for what was initially a highly extended Eliza called \"A.",
        "frame": [
            {
                "LU": "form.v",
                "Frame": "Type"
            },
            {
                "LU": "basis.n",
                "Frame": "Reason"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "\" (\"Artificial Linguistic Internet Computer Entity\"), which won the annual Loebner Prize Contest for Most Human Computer three times, and was also the Chatterbox Challenge Champion in 2004.",
        "frame": [
            {
                "LU": "win.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "annual.a",
                "Frame": "Frequency"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "time.n",
                "Frame": "Event_instance"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "Because the A.",
        "frame": []
    },
    {
        "text": "AIML set was released under the GNU GPL, and because most AIML interpreters are offered under a free or open source license, many \"Alicebot clones\" have been created based upon the original implementation of the program and its AIML knowledge base.",
        "frame": [
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "offer.v",
                "Frame": "Offering"
            },
            {
                "LU": "under.prep",
                "Frame": "Non-gradable_proximity"
            },
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "open.a",
                "Frame": "Secrecy_status"
            },
            {
                "LU": "source.n",
                "Frame": "Source_of_getting"
            },
            {
                "LU": "license.n",
                "Frame": "Documents"
            },
            {
                "LU": "many.a",
                "Frame": "Quantified_mass"
            },
            {
                "LU": "create.v",
                "Frame": "Cause_to_start"
            },
            {
                "LU": "implementation.n",
                "Frame": "Execute_plan"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "Free AIML sets in several languages have been developed and made available by the user community.",
        "frame": [
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            },
            {
                "LU": "set.n",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "develop.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "community.n",
                "Frame": "Aggregate"
            }
        ]
    },
    {
        "text": "There are AIML interpreters available in Java, Ruby, Python, C++, C#, Pascal, and other languages.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "A semi-formal specification and a W3C XML Schema for AIML are available.",
        "frame": [
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            }
        ]
    },
    {
        "text": "AIML (Artificial Intelligence Markup Language) is an XML-compliant language that's easy to learn, and makes it possible for you to begin customizing an Alicebot or creating one from scratch within minutes.",
        "frame": [
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "easy.a",
                "Frame": "Experiencer_focus"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "create.v",
                "Frame": "Intentionally_create"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "within.prep",
                "Frame": "Interior_profile_relation"
            },
            {
                "LU": "minute.n",
                "Frame": "Calendric_unit"
            }
        ]
    },
    {
        "text": "The most important units of AIML are: <aiml>: the tag that begins and ends an AIML document <category>: the tag that marks a \"unit of knowledge\" in an Alicebot's knowledge base <pattern>: used to contain a simple pattern that matches what a user may say or type to an Alicebot <template>: contains the response to a user input.",
        "frame": [
            {
                "LU": "most.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "important.a",
                "Frame": "Importance"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "end.v",
                "Frame": "Death"
            },
            {
                "LU": "document.n",
                "Frame": "Documents"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "type.v",
                "Frame": "Type"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "There are also 20 or so additional more tags often found in AIML files, and it's possible to create your own so-called \"custom predicates\".",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "additional.a",
                "Frame": "Increment"
            },
            {
                "LU": "often.adv",
                "Frame": "Frequency"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "own.v",
                "Frame": "Possession"
            },
            {
                "LU": "custom.n",
                "Frame": "Custom"
            }
        ]
    },
    {
        "text": "Right now, a beginner's guide to AIML can be found in the AIML Primer.",
        "frame": [
            {
                "LU": "right.adv",
                "Frame": "Morality_evaluation"
            },
            {
                "LU": "now.adv",
                "Frame": "Temporal_collocation"
            },
            {
                "LU": "guide.v",
                "Frame": "Cotheme"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The free A.",
        "frame": [
            {
                "LU": "free.a",
                "Frame": "Breaking_out_captive"
            }
        ]
    },
    {
        "text": "AIML includes a knowledge base of approximately 41,000 categories.",
        "frame": [
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            },
            {
                "LU": "approximately.adv",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "category.n",
                "Frame": "Categorization"
            }
        ]
    },
    {
        "text": "Here's an example of one of them: <category> <pattern>WHAT ARE YOU</pattern> <template> <think><set name=\"topic\">Me</set></think> I am the latest result in artificial intelligence, which can reproduce the capabilities of the human brain with greater speed and accuracy.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "set.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            },
            {
                "LU": "reproduce.v",
                "Frame": "Duplication"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            }
        ]
    },
    {
        "text": "</template> </category> (The opening and closing <aiml> tags are not shown here, because this is an excerpt from the middle of a document.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "document.n",
                "Frame": "Documents"
            }
        ]
    },
    {
        "text": "Everything between <category> and </category> is -- you guessed it -- a category.",
        "frame": [
            {
                "LU": "between.prep",
                "Frame": "Interior_profile_relation"
            }
        ]
    },
    {
        "text": "A category can have one pattern and one template.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            }
        ]
    },
    {
        "text": "(It can also contain a <that> tag, but we won't get into that here.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            }
        ]
    },
    {
        "text": "The pattern shown will match only the exact phrase \"what are you\" (capitalization is ignored).",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "exact.a",
                "Frame": "Accuracy"
            },
            {
                "LU": "phrase.v",
                "Frame": "Encoding"
            }
        ]
    },
    {
        "text": "But it's possible that this category may be invoked by another category, using the <srai> tag (not shown) and the principle of reductionism.",
        "frame": [
            {
                "LU": "possible.a",
                "Frame": "Likelihood"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "by.prep",
                "Frame": "Means"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "show.v",
                "Frame": "Finish_competition"
            }
        ]
    },
    {
        "text": "In any case, if this category is called, it will produce the response \"I am the latest result in artificial intelligence.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "intelligence.n",
                "Frame": "Information"
            }
        ]
    },
    {
        "text": "In addition, it will do something else interesting.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            },
            {
                "LU": "something.n",
                "Frame": "Hedging"
            },
            {
                "LU": "interesting.a",
                "Frame": "Mental_stimulus_stimulus_focus"
            }
        ]
    },
    {
        "text": "Using the <think> tag, which causes Alicebot to perform whatever it contains but hide the result from the user, the Alicebot engine will set the \"topic\" in its memory to \"Me\".",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "perform.v",
                "Frame": "Intentionally_act"
            },
            {
                "LU": "from.prep",
                "Frame": "Evidence"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            }
        ]
    },
    {
        "text": "This allows any categories elsewhere with an explicit \"topic\" value of \"ME\" to match better than categories with the same patterns that are not given an explicit topic.",
        "frame": [
            {
                "LU": "category.n",
                "Frame": "Categorization"
            },
            {
                "LU": "with.prep",
                "Frame": "Have_associated"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "same.a",
                "Frame": "Identicality"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            }
        ]
    },
    {
        "text": "This illustrates one mechanism whereby a botmaster can exercise precise control over a conversational flow.",
        "frame": [
            {
                "LU": "mechanism.n",
                "Frame": "Means"
            },
            {
                "LU": "control.n",
                "Frame": "Control"
            },
            {
                "LU": "flow.v",
                "Frame": "Fluidic_motion"
            }
        ]
    },
    {
        "text": "Categories Categories in AIML are the fundamental unit of knowledge.",
        "frame": [
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "fundamental.a",
                "Frame": "Importance"
            },
            {
                "LU": "knowledge.n",
                "Frame": "Awareness"
            }
        ]
    },
    {
        "text": "A category consists of at least two further elements: the pattern and template elements.",
        "frame": [
            {
                "LU": "consist.v",
                "Frame": "Medical_intervention"
            },
            {
                "LU": "further.a",
                "Frame": "Increment"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            }
        ]
    },
    {
        "text": "Here is a simple category: <category> <pattern>WHAT IS YOUR NAME</pattern> <template>My name is John.",
        "frame": [
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "</template> </category> When this category is loaded, an AIML bot will respond to the input \"What is your name\" with the response \"My name is John.",
        "frame": [
            {
                "LU": "respond.v",
                "Frame": "Communication_response"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "Patterns A pattern is a string of characters intended to match one or more user inputs.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "string.n",
                "Frame": "Connectors"
            },
            {
                "LU": "character.n",
                "Frame": "People"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "match.v",
                "Frame": "Evaluative_comparison"
            }
        ]
    },
    {
        "text": "A literal pattern like WHAT IS YOUR NAME will match only one input, ignoring case: \"what is your name\".",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "only.a",
                "Frame": "Sole_instance"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "But patterns may also contain wildcards, which match one or more words.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            }
        ]
    },
    {
        "text": "A pattern like WHAT IS YOUR * will match an infinite number of inputs, including \"what is your name\", \"what is your shoe size\", \"what is your purpose in life\", etc.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "number.n",
                "Frame": "Be_subset_of"
            },
            {
                "LU": "include.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "purpose.n",
                "Frame": "Inherent_purpose"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "The AIML pattern syntax is a very simple pattern language, substantially less complex than regular expressions and as such not even of level 3 in the Chomsky hierarchy.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "not.adv",
                "Frame": "Negation"
            },
            {
                "LU": "level.n",
                "Frame": "Building_subparts"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            }
        ]
    },
    {
        "text": "To compensate for the simple pattern matching capabilities, AIML interpreters can provide preprocessing functions to expand abbreviations, remove misspellings, etc.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "function.n",
                "Frame": "Contingency"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "remove.v",
                "Frame": "Undressing"
            }
        ]
    },
    {
        "text": "Template A template specifies the response to a matched pattern.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            }
        ]
    },
    {
        "text": "A template may be as simple as some literal text, like My name is John.",
        "frame": [
            {
                "LU": "simple.a",
                "Frame": "System_complexity"
            },
            {
                "LU": "some.art",
                "Frame": "Proportional_quantity"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "A template may use variables, such as the example My name is <bot name=\"name\"/>.",
        "frame": [
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "which will substitute the bot's name into the sentence, or You told me you are <get name=\"user-age\"/> years old.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            },
            {
                "LU": "tell.v",
                "Frame": "Request"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            },
            {
                "LU": "get.v",
                "Frame": "Disembarking"
            },
            {
                "LU": "old.a",
                "Frame": "Age"
            }
        ]
    },
    {
        "text": "which will substitute the user's age (if known) into the sentence.",
        "frame": [
            {
                "LU": "age.n",
                "Frame": "Calendric_unit"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            },
            {
                "LU": "know.v",
                "Frame": "Awareness"
            },
            {
                "LU": "into.prep",
                "Frame": "Goal"
            }
        ]
    },
    {
        "text": "Template elements include basic text formatting, conditional response (if-then/else), and random responses.",
        "frame": [
            {
                "LU": "element.n",
                "Frame": "Ingredients"
            },
            {
                "LU": "response.n",
                "Frame": "Response"
            }
        ]
    },
    {
        "text": "Templates may also redirect to other patterns, using an element called srai.",
        "frame": [
            {
                "LU": "redirect.v",
                "Frame": "Redirecting"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            }
        ]
    },
    {
        "text": "This can be used to implement synonymy, as in this example (where CDATA is used to avoid the need for XML escaping): <category> <pattern>WHAT IS YOUR NAME</pattern> <template><.",
        "frame": [
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "implement.v",
                "Frame": "Gizmo"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "example.n",
                "Frame": "Instance"
            },
            {
                "LU": "where.adv",
                "Frame": "Locative_relation"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "to.prep",
                "Frame": "Goal"
            },
            {
                "LU": "avoid.v",
                "Frame": "Preventing_or_letting"
            },
            {
                "LU": "need.n",
                "Frame": "Needing"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "escape.v",
                "Frame": "Escaping"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            }
        ]
    },
    {
        "text": "[CDATA[My name is <bot name=\"name\"/>.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "]]></template> </category> <category> <pattern>WHAT ARE YOU CALLED</pattern> <template> <srai>what is your name</srai> </template> </category> The first category simply answers an input \"what is your name\" with a statement of the bot's name.",
        "frame": [
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "answer.v",
                "Frame": "Resolve_problem"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "with.prep",
                "Frame": "Accompaniment"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            }
        ]
    },
    {
        "text": "The second category, however, says that the input \"what are you called\" should be redirected to the category that matches the input \"what is your name\"--in other words, it is saying that the two phrases are equivalent.",
        "frame": [
            {
                "LU": "second.a",
                "Frame": "Measure_duration"
            },
            {
                "LU": "say.v",
                "Frame": "Statement"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "should.v",
                "Frame": "Desirable_event"
            },
            {
                "LU": "to.prep",
                "Frame": "Locative_relation"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "name.n",
                "Frame": "Referring_by_name"
            },
            {
                "LU": "in.prep",
                "Frame": "Taking_time"
            },
            {
                "LU": "word.n",
                "Frame": "Simple_name"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "be.v",
                "Frame": "Performers_and_roles"
            }
        ]
    },
    {
        "text": "Templates can contain other types of content, which may be processed by whatever user interface the bot is talking through.",
        "frame": [
            {
                "LU": "contain.v",
                "Frame": "Inclusion"
            },
            {
                "LU": "other.a",
                "Frame": "Increment"
            },
            {
                "LU": "type.n",
                "Frame": "Text_creation"
            },
            {
                "LU": "talk.v",
                "Frame": "Statement"
            },
            {
                "LU": "through.prep",
                "Frame": "Activity_done_state"
            }
        ]
    },
    {
        "text": "So, for example, a template may use HTML tags for formatting, which can be ignored by clients that don't support HTML.",
        "frame": [
            {
                "LU": "so.adv",
                "Frame": "Degree"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "use.v",
                "Frame": "Alternatives"
            },
            {
                "LU": "for.prep",
                "Frame": "Taking_sides"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "do.v",
                "Frame": "Touring"
            }
        ]
    },
    {
        "text": "AIML 1.",
        "frame": []
    },
    {
        "text": "0 Tag Set.",
        "frame": []
    },
    {
        "text": "<aiml> <bot name=\"name\"/> <bot name=\"XXX\"/> <that index=\"2,1\"/> <that index=\"X,Y\"/> <that> <category> <input index=\"2\"/> <input index=\"3\"/> <condition name=\"X\" value=\"Y\"> <condition name=\"X\"> <condition> <gender> <date/> <id/> <get name=\"name\"/> <size/> <star index=\"X\"/> <thatstar index=\"X\"/> <get name=\"topic\"/> <topicstar index=\"X\"/> <version/> <get name=\"XXX\"/> <gossip src=\"X\"> <learn>X</learn> <li name=\"X\" value=\"Y\"> <li value=\"Y\"> <li> <pattern> <person/> <person2> <person2/> <person> <random> <set name=\"topic\"> <set name=\"name\"> <set name=\"XXX\"> <sr/> <srai> <system> <template> <think> <topic name=\"X\"> <uppercase> <lowercase> <sentence> <formal> <if name=\"X\" value=Y\"> <else> <javascript>.",
        "frame": [
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "that.adv",
                "Frame": "Degree"
            },
            {
                "LU": "condition.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "condition.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "condition.n",
                "Frame": "Medical_conditions"
            },
            {
                "LU": "get.v",
                "Frame": "Transition_to_state"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "get.v",
                "Frame": "Disembarking"
            },
            {
                "LU": "get.v",
                "Frame": "Disembarking"
            },
            {
                "LU": "gossip.n",
                "Frame": "Chatting"
            },
            {
                "LU": "learn.v",
                "Frame": "Memorization"
            },
            {
                "LU": "pattern.n",
                "Frame": "Pattern"
            },
            {
                "LU": "person.n",
                "Frame": "People"
            },
            {
                "LU": "random.a",
                "Frame": "Coincidence"
            },
            {
                "LU": "set.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "set.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "name.n",
                "Frame": "Name_conferral"
            },
            {
                "LU": "set.v",
                "Frame": "Aggregate"
            },
            {
                "LU": "system.n",
                "Frame": "Gizmo"
            },
            {
                "LU": "if.scon",
                "Frame": "Concessive"
            }
        ]
    }
]